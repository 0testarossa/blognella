{"version":3,"sources":["APIRequests/User.tsx","App.styles.tsx","components/AdminPanel/AdminPanel.styles.tsx","components/AdminPanel/AdminPanel.tsx","components/DefaultView/DefaultView.styles.tsx","APIRequests/Bookmark.tsx","components/DefaultView/DefaultViewTabs.tsx","components/SearchComponent/SearchComponent.tsx","components/DefaultView/DefaultViewLinks.tsx","components/DefaultView/DefaultView.tsx","APIRequests/Post.tsx","components/PostComponent/PostAboutComponent.tsx","components/DefaultView/DefaultViewAbout.tsx","components/MainView/MainView.styles.tsx","App.tsx","components/LoginForm/LoginForm.styles.tsx","components/LoginForm/LoginForm.tsx","pages/loginPage.tsx","APIRequests/Comment.tsx","components/PostComponent/PostCommentComponent.tsx","components/PostComponent/PostCommentList.tsx","components/PostComponent/PostLinkComponent.tsx","components/PostComponent/PostComponent.tsx","components/MainView/MainView.tsx","pages/mainViewPage.tsx","components/RegisterForm/RegisterForm.styles.tsx","components/RegisterForm/RegisterForm.tsx","pages/registerPage.tsx","APIRequests/Tag.tsx","components/TagsPanel/TagsPanel.tsx","pages/panelTagsPage.tsx","components/ChaptersList/ChaptersList.tsx","APIRequests/Content.tsx","components/PostsPanel/PostsPanel.tsx","pages/panelPostsAddingPage.tsx","components/PostsPanelList/PostsPanelList.tsx","pages/panelPostsPage.tsx","components/PostsPanel/UpdatePostsPanel.tsx","pages/panelPostsUpdatingPage.tsx","components/BookmarkPanel/BookmarksPanel.tsx","pages/panelBookmarkPage.tsx","components/BookmarkPanel/BookmarkPanelAdd.tsx","pages/panelBookmarkAddingPage.tsx","components/BookmarkPanel/BookmarkPanelUpdate.tsx","pages/panelBookmarkUpdatingPage.tsx","components/UsersPanel/UsersPanel.tsx","pages/panelUsersPage.tsx","components/UsersPanel/UserPanelAdd.tsx","pages/panelUsersAddingPage.tsx","components/UsersPanel/UserPanelUpdate.tsx","pages/panelUsersUpdatingPage.tsx","components/PostView/PostView.tsx","pages/postPage.tsx","components/LoginForm/LoginForgetForm.tsx","pages/loginForgetPage.tsx","components/SearchComponent/SearchList.tsx","pages/searchPage.tsx","router.tsx","index.tsx"],"names":["getUsers","a","axios","get","users","Error","getUser","_id","user","createUser","post","savedUser","data","status","updateUser","put","updatedUser","deleteUser","delete","deletedUser","StyledMain","styled","main","StyledAdminPanel","div","StyledAdminPanelItem","StyledText","span","AdminPanel","lang","localStorage","getItem","to","Logo","LogoContainer","LinksContainer","LinkElement","LoginRegisterContainer","MainViewTabsContainer","AboutSection","MainContentContainer","StyledAdminPanelContainer","getBookmarks","bookmarks","getBookmark","bookmark","createBookmark","savedBookmark","updateBookmark","updatedBookmark","deleteBookmark","deletedBookmark","DefaultViewTabs","useState","allBookmarks","setAllBookmarks","length","then","catch","err","console","log","map","key","title","withRouter","props","searchValue","setSearchValue","TextField","id","label","style","margin","placeholder","fullWidth","InputLabelProps","shrink","onChange","input","target","value","Button","variant","color","onClick","history","push","pathname","state","search","DefaultViewLinks","nick","setNick","role","setRole","availablePages","includes","pageName","removeItem","setItem","window","location","reload","DefaultView","getPosts","posts","getPost","createPost","savedPost","updatePost","updatedPost","deletePost","deletedPost","PostAboutComponent","date","Date","toDateString","toISOString","dangerouslySetInnerHTML","__html","content","text","DefaultViewAbout","aboutPost","setAboutPost","allAboutPosts","filter","MainViewContainer","useEffect","userId","fetchUser","match","path","Content","page","StyledLoginForm","FormItem","LogicControls","login","setLogin","password","setPassword","find","LoginPage","createComment","comment","savedComment","updateComment","updatedComment","deleteComment","deletedComment","isEditingMode","setIsEditingMode","commentText","setCommentText","canEdit","updatePostToDeleteComment","InputProps","readOnly","defaultValue","PostCommentList","newComment","setNewComment","updatePostToEditComment","commentId","updatedComments","tags","PostLinkComponent","PostComponent","postChapters","postChapter","tag","MainView","newestPost","setNewestPost","mainViewPost","reduce","mainPost","nextPost","JSON","stringify","MainViewPage","StyledRegisterForm","email","setEmail","RegisterPage","getTags","createTag","saveTag","deleteTag","deletedTag","setTag","allTags","setAllTags","fetchAllTags","List","ListItem","name","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","onTagDelete","PanelTagsPage","ChaptersList","mainPosts","setMainPosts","postTitle","setPostTitle","fetchAllPosts","mainTitles","FilterAndSetMainPosts","storyTitle","Select","event","MenuItem","createContent","savedContent","updateContent","updatedContent","useStyles","makeStyles","chips","display","flexWrap","chip","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","getStyles","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","classes","useTheme","setData","setTitle","setTags","undefined","contentId","setContentId","setDate","setUser","onPostSave","initialValue","init","plugins","toolbar","e","getContent","handleEditorChange","val","labelId","multiple","Input","renderValue","selected","className","Chip","contentTitle","PanelPostsAddingPage","postType","setPostType","setStoryTitle","PostsPanelList","allPosts","setAllPosts","myId","onPostDelete","PanelPostsPage","editedPost","setEditedPost","params","customPostType","BookmarksPanel","fetchAllBookmarks","onBookmarkDelete","PanelBookmarksPage","postId","setPostId","bookmarkTitle","setBookmarkTitle","allMainPosts","PanelBookmarkAddingPage","editedBookmark","setEditedBookmark","UsersPanel","allUsers","setAllUsers","fetchAllUsers","onUserDelete","PanelUsersPage","allUsersRoles","PanelUsersAddingPage","editedUser","setEditedUser","setPost","setPostChapters","allPostChapters","PostPage","updatedSser","updateUserPassword","LoginForgetPage","SearchList","BasicExample","exact","SearchPage","PanelPostsUpdatingPage","PanelBookmarkUpdatingPage","PanelUsersUpdatingPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.147c201b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport interface UserProps {\r\n    _id?: string;\r\n    nick: string;\r\n    login: string;\r\n    password: string;\r\n    email: string;\r\n    role?: string;\r\n}\r\n\r\nexport const getUsers = async () => {\r\n    try {\r\n      const users = await axios.get(\r\n         '/users'\r\n      )\r\n      return users\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getUser = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const user = await axios.get(\r\n        `/user/${_id}`\r\n      )\r\n      return user\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createUser = async (\r\n    user: UserProps\r\n  ) => {\r\n    try {\r\n      const savedUser = await axios.post(\r\n        `/user`,\r\n        user\r\n      )\r\n      return savedUser\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n    return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const updateUser = async (\r\n    user: UserProps\r\n  ) => {\r\n    try {\r\n      const updatedUser = await axios.put(\r\n        `/user/${user._id}`,\r\n        user\r\n      )\r\n      return updatedUser;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n    return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const deleteUser = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedUser = await axios.delete(\r\n        `/user/${_id}`\r\n      )\r\n      return deletedUser;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import styled from 'styled-components'\r\n\r\nexport const StyledMain = styled.main`\r\n    max-width: 824px;\r\n    margin: 0rem auto 0rem auto;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledAdminPanel = styled.div`\r\n  border-right: 1px solid black;\r\n  margin-right: 1rem;\r\n  height: 100%;\r\n`;\r\n\r\nexport const StyledAdminPanelItem = styled.div`\r\n    padding-top: 1.8rem;\r\n    padding-right: 0.5rem;\r\n`;\r\n\r\nexport const StyledText = styled.span`\r\n    border-bottom: 1px solid black;\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StyledAdminPanel, StyledAdminPanelItem, StyledText } from \"./AdminPanel.styles\";\r\n\r\nconst AdminPanel = () => {\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    return (\r\n        <StyledAdminPanel>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/posts\"}>{lang === \"en\" ? \"POSTS\" : \"WPISY\"}</Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/bookmarks\"}>{lang === \"en\" ? \"BOOKMARKS\" : \"ZAKŁADKI\"}</Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/users\"}>{lang === \"en\" ? \"USERS\" : \"UŻYTKOWNICY\"}</Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/tags\"}>{lang === \"en\" ? \"TAGS\" : \"ETYKIETY\"}</Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n        </StyledAdminPanel>\r\n    )\r\n}\r\n\r\nexport default AdminPanel;","import styled from 'styled-components'\r\n\r\nexport const Logo = styled.div`\r\n    font-family: Roboto;\r\n    font-size: 3.5rem;\r\n`;\r\n\r\nexport const LogoContainer = styled.div`\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n`;\r\n\r\nexport const LinksContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const LinkElement = styled.div`\r\n    color: #ffffff;\r\n    margin: 1rem;\r\n`;\r\n\r\nexport const LoginRegisterContainer = styled.div`\r\n    display:flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const MainViewTabsContainer = styled.div`\r\n    display:flex;\r\n    background-color:#292929;\r\n`;\r\n\r\nexport const AboutSection = styled.div`\r\n    width:20%;\r\n    border-left: 1px solid black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0rem 1rem;\r\n`;\r\n\r\nexport const MainContentContainer = styled.div`\r\n    display: flex;\r\n    min-height: 40rem;\r\n    background-color: grey;\r\n    justify-content: space-between;\r\n    flex-grow: 1;\r\n    padding-top: 1rem;\r\n`;\r\n\r\nexport const StyledAdminPanelContainer = styled.div`\r\n    display:flex;\r\n    height: 100%;\r\n    /* flex-direction: column; */\r\n`;\r\n","import axios from \"axios\";\r\n\r\nexport interface BookmarkProps {\r\n    _id?: string;\r\n    title: string;\r\n    post: any;\r\n}\r\n\r\nexport const getBookmarks = async () => {\r\n    try {\r\n      const bookmarks = await axios.get(\r\n         '/bookmarks'\r\n      )\r\n      return bookmarks\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getBookmark = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const bookmark = await axios.get(\r\n        `/bookmark/${_id}`\r\n      )\r\n      return bookmark\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createBookmark = async (\r\n    bookmark: BookmarkProps\r\n  ) => {\r\n    try {\r\n      const savedBookmark = await axios.post(\r\n        `/bookmark`,\r\n        bookmark\r\n      )\r\n      return savedBookmark\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n    return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const updateBookmark = async (\r\n    bookmark: BookmarkProps\r\n  ) => {\r\n    try {\r\n      const updatedBookmark = await axios.put(\r\n        `/bookmark/${bookmark._id}`,\r\n        bookmark\r\n      )\r\n      return updatedBookmark;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n    return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const deleteBookmark = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedBookmark = await axios.delete(\r\n        `/bookmark/${_id}`\r\n      )\r\n      return deletedBookmark;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import React, { useState } from \"react\";\r\nimport { LinkElement, MainViewTabsContainer } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BookmarkProps, getBookmarks } from \"../../APIRequests/Bookmark\";\r\n\r\nconst DefaultViewTabs = () => {\r\n    const [allBookmarks, setAllBookmarks] = useState<BookmarkProps[]>([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllBookmarks = () => {\r\n        getBookmarks()\r\n        .then(({ data: { bookmarks } }: BookmarkProps[] | any) => {if(bookmarks.length !== allBookmarks.length) setAllBookmarks(bookmarks)})\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    if(allBookmarks.length === 0) fetchAllBookmarks();\r\n\r\n    const getAllLinks = () => {\r\n        return allBookmarks.map((bookmark) => <LinkElement key={bookmark._id}><Link to={bookmark.post.length > 0 ? `/post/${bookmark.post[0]._id}` : '/'}>{bookmark.title}</Link></LinkElement>) || []\r\n    }\r\n\r\n    return (\r\n        <MainViewTabsContainer>\r\n            <LinkElement><Link to={\"/\"}>{lang === \"en\" ? \"Home\" : \"Główna\"}</Link></LinkElement>\r\n            {getAllLinks()}\r\n            {/* <LinkElement><Link to={\"/\"}>Home</Link></LinkElement> */}\r\n        </MainViewTabsContainer>\r\n    )\r\n}\r\n\r\nexport default DefaultViewTabs;","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SearchComponent = (props) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const onSearch = () => {\r\n        props.history.push({\r\n            pathname: '/search',\r\n            state: { search: searchValue }\r\n          })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Search\" : \"Wyszukaj\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in tag or title here\" : \"Proszę wpisz etykietę lub tytuł\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setSearchValue(input.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onSearch}>\r\n                {lang === \"en\" ? \"Search\" : \"Wyszukaj\"}\r\n            </Button>\r\n        </>\r\n    ) \r\n}\r\n\r\nexport default withRouter(SearchComponent);","import React, { useState } from \"react\";\r\nimport { LinkElement, LoginRegisterContainer } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUser, UserProps } from \"../../APIRequests/User\";\r\nimport DefaultViewTabs from \"./DefaultViewTabs\";\r\nimport { availablePages } from \"../../App\";\r\nimport SearchComponent from \"../SearchComponent/SearchComponent\";\r\n\r\nconst DefaultViewLinks = (props) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const lang = localStorage.getItem('blognellaLang');\r\n\r\n    const fetchUser = () => {\r\n        getUser(localStorage.getItem('blognellaId') || \"\")\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            if(!nick) {setNick(user.nick);}\r\n            if(!role) {setRole(user.role);}\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onLogout = () => {\r\n        localStorage.removeItem('blognellaId');\r\n    }\r\n\r\n    if(localStorage.getItem('blognellaId')) fetchUser();\r\n\r\n    const changeLanguage = () => {\r\n        const actualLang = localStorage.getItem('blognellaLang') || \"en\";\r\n        actualLang === \"en\" ? localStorage.setItem(\"blognellaLang\", \"pl\") : localStorage.setItem(\"blognellaLang\", \"en\");\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LoginRegisterContainer>\r\n                <LinkElement><SearchComponent/></LinkElement>\r\n                {availablePages.includes(props.pageName) && role === \"admin\" ? <LinkElement><Link to={\"/panel/posts\"}>Panel</Link></LinkElement> : <></>}\r\n                { nick ? <LinkElement onClick={onLogout} ><Link to={\"/\"}>{lang === \"en\" ? \"Logout\" : \"Wyloguj\"} {nick}</Link></LinkElement> : \r\n                <LinkElement ><Link to={\"/login\"}>{lang === \"en\" ? \"Login\" : \"Zaloguj\"}</Link></LinkElement> }\r\n                <LinkElement><Link to={\"/register\"}>{lang === \"en\" ? \"Register\" : \"Zarejestruj\"}</Link></LinkElement>\r\n                <LinkElement onClick={changeLanguage}>{localStorage.getItem('blognellaLang') || \"en\"}</LinkElement>\r\n            </LoginRegisterContainer>\r\n            <DefaultViewTabs/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultViewLinks;","import React from \"react\";\r\nimport { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\nimport DefaultViewLinks from \"./DefaultViewLinks\";\r\n// import { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\n\r\nconst DefaultView = (props) => {\r\n    return (\r\n        <>\r\n        <LogoContainer>\r\n            <Logo>Kiranella</Logo>\r\n            <LinksContainer>\r\n                    <div>\r\n                    {/* <LinkElement><Link color=\"white\" to={\"/login\"}>Login</Link></LinkElement>\r\n                    <LinkElement><Link to={\"/register\"}>Register</Link></LinkElement> */}\r\n                    </div>\r\n            </LinksContainer>\r\n        </LogoContainer>\r\n        <DefaultViewLinks {...props}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultView;","import axios from \"axios\";\r\n\r\nexport interface PostProps {\r\n    _id?: string;\r\n    date: Date;\r\n    tags: string[];\r\n    title: string;\r\n    content: any;\r\n    user: string;\r\n}\r\n\r\nexport const getPosts = async () => {\r\n    try {\r\n      const posts = await axios.get(\r\n         '/posts'\r\n      )\r\n      return posts\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getPost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const post = await axios.get(\r\n        `/post/${_id}`\r\n      )\r\n      return post\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createPost = async (\r\n    post: PostProps\r\n  ) => {\r\n    try {\r\n      const savedPost = await axios.post(\r\n        `/post`,\r\n        post\r\n      )\r\n      return savedPost\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n    return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const updatePost = async (\r\n    post: PostProps\r\n  ) => {\r\n    try {\r\n      const updatedPost = await axios.put(\r\n        `/post/${post._id}`,\r\n        post\r\n      )\r\n      return updatedPost;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const deletePost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedPost = await axios.delete(\r\n        `/post/${_id}`\r\n      )\r\n      return deletedPost\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import React from \"react\";\r\n\r\nconst PostAboutComponent = (props) => {\r\n    const date = new Date(props.post.date).toDateString();\r\n\r\n    return (\r\n        props.post.date > new Date().toISOString() ? <div>It will be avaiable soon - {date}</div> : \r\n            <>\r\n            <div dangerouslySetInnerHTML={{ __html: props.post.content[0].text }} />\r\n            </>\r\n    )\r\n}\r\n\r\nexport default PostAboutComponent;","import React, { useState } from \"react\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostAboutComponent from \"../PostComponent/PostAboutComponent\";\r\nimport { AboutSection } from \"./DefaultView.styles\";\r\n\r\n\r\nconst DefaultViewAbout = () => {\r\n    const [aboutPost, setAboutPost] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allAboutPosts = posts.filter((post) => post.content[0].title === \"About\");\r\n            setAboutPost(allAboutPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    if(aboutPost.length === 0) fetchAllPosts();\r\n\r\n    return (\r\n        <AboutSection>\r\n            {aboutPost.length > 0 ? <PostAboutComponent post={aboutPost[0]} /> : <div>{lang === \"en\" ? \"There is no About post\" : \"Brak wpisu o mnie\"}</div>}\r\n        </AboutSection>\r\n    )\r\n}\r\n\r\nexport default DefaultViewAbout;","import styled from 'styled-components'\r\n\r\nexport const MainViewContainer = styled.div`\r\n    /* display: flex; */\r\n    /* justify-content: space-between; */\r\n    margin: 0rem 1rem;\r\n    width:80%;\r\n`;","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { getUser, UserProps } from './APIRequests/User';\nimport { StyledMain } from './App.styles';\nimport AdminPanel from './components/AdminPanel/AdminPanel';\nimport DefaultView from './components/DefaultView/DefaultView'\nimport { MainContentContainer, StyledAdminPanelContainer } from './components/DefaultView/DefaultView.styles';\nimport DefaultViewAbout from './components/DefaultView/DefaultViewAbout';\n\nimport './components/globalStyles/globalStyles.css';\nimport { MainViewContainer } from './components/MainView/MainView.styles';\n\nexport const availablePages = [\"/register\", \"/login/forget\", \"/login\", \"/post/:id\", \"/search\", \"/\"]\n\nconst App: React.FC = (props:any) => {\n  const [role, setRole] = useState(\"\");\n\n  const fetchUser = () => {\n      const userId = localStorage.getItem('blognellaId') || \"\";\n      if(userId) {\n        getUser(userId)\n        .then(({ data: { user } }: UserProps | any) => {\n            if(role !== user.role) {setRole(user.role);}\n        })\n        .catch((err: Error) => console.log(err))\n      } else {\n        setRole(\"guest\");\n      }\n  }\n\n  useEffect(() => {\n    fetchUser()\n    if(!localStorage.getItem('blognellaLang')) {\n      localStorage.setItem('blognellaLang', \"en\");\n    }\n  }, [props])\n\n\n  if(props.match.path === \"/login\" &&  localStorage.getItem('blognellaId')) {props.history.push(\"/\")};\n  if(!availablePages.includes(props.match.path) && role !== \"admin\" && role) {props.history.push(\"/\")};\n\n  const Content = props.page;\n  return (\n    <StyledMain>\n      <DefaultView pageName={props.match.path}/>\n      <MainContentContainer>\n        <MainViewContainer>\n          <StyledAdminPanelContainer>\n\n          {role && \n            <>\n           {!availablePages.includes(props.match.path) ? <AdminPanel/> : <></>}\n           <div><Content/></div>\n           </>\n           }\n          </StyledAdminPanelContainer>\n        </MainViewContainer>\n        {availablePages.includes(props.match.path) ? <DefaultViewAbout/> : <></>}\n      </MainContentContainer>\n\n\n    </StyledMain>\n  )\n}\n\nexport default withRouter(App)\n","import styled from 'styled-components'\r\n\r\nexport const StyledLoginForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #8a8a8a;;\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n`;\r\n","import React, {useState} from \"react\";\r\nimport { FormItem, LogicControls, StyledLoginForm } from \"./LoginForm.styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getUsers, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst LoginForm = (props) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const onSubmit = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => {\r\n            const user = users.find((user) => user.login === login && user.password === password)\r\n            if(user) {\r\n                localStorage.setItem('blognellaId', user._id);\r\n                props.history.push('/');\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledLoginForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Password\" : \"Hasło\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your password here\" : \"Proszę wpisz swoje hasło\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div>{lang === \"en\" ? \"Forgot password? Click \" : \"Zapomniałes hasła? Kliknij \"}<Link to={\"/login/forget\"}>{lang === \"en\" ? \"here\" : \"tutaj\"}</Link></div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                        {lang === \"en\" ? \"Login\" : \"Zaloguj\"}\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledLoginForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React from \"react\";\r\nimport LoginForm from \"../components/LoginForm/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n    return <LoginForm />\r\n}\r\n\r\nexport default LoginPage","import axios from \"axios\";\r\n\r\nexport interface CommentProps {\r\n    _id?: string;\r\n    date: string;\r\n    text: string;\r\n    user: any;\r\n}\r\n\r\nexport const getComments = async () => {\r\n    try {\r\n      const comments = await axios.get(\r\n         '/comments'\r\n      )\r\n      return comments\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getComment = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const comment = await axios.get(\r\n        `/comment/${_id}`\r\n      )\r\n      return comment\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createComment = async (\r\n    comment: CommentProps\r\n  ) => {\r\n    try {\r\n      const savedComment = await axios.post(\r\n        `/comment`,\r\n        comment\r\n      )\r\n      return savedComment\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n    return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const updateComment = async (\r\n    comment: CommentProps\r\n  ) => {\r\n    try {\r\n      const updatedComment = await axios.put(\r\n        `/comment/${comment._id}`,\r\n        comment\r\n      )\r\n      return updatedComment;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n    return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const deleteComment = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedComment = await axios.delete(\r\n        `/comment/${_id}`\r\n      )\r\n      return deletedComment\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { deleteComment, updateComment } from \"../../APIRequests/Comment\";\r\n\r\nconst PostCommentComponent = (props) => {\r\n    const [isEditingMode, setIsEditingMode] = useState(false);\r\n    const [commentText, setCommentText] = useState(props.comment.text);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const canEdit = props.role !== \"guest\" && (props.comment.user === props.nick || props.role === \"admin\" )\r\n\r\n    const onEdit = () => {\r\n        setIsEditingMode(!isEditingMode);\r\n    }\r\n\r\n    const onDelete = () => {\r\n        props.updatePostToDeleteComment(props.comment._id);\r\n        deleteComment(props.comment._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Comment not deleted')\r\n            }\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    const onSaveEditedComment = () => {\r\n        setIsEditingMode(!isEditingMode);\r\n\r\n        const comment = {\r\n            _id: props.comment._id,\r\n            date: props.comment.date,\r\n            text: commentText,\r\n            user: props.comment.user\r\n        }\r\n        updateComment(comment)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n            throw new Error('Error! Comment not saved')\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {props.comment.user} {new Date(props.comment.date).toDateString()}\r\n                {canEdit ? <><span onClick={onEdit}>Edit</span><span onClick={onDelete}>Delete</span></> : <></>}\r\n            </div>\r\n            {/* <div>{props.comment.text}</div> */}\r\n            <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your comment here\" : \"Proszę wpisz komentarz\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                        readOnly: !isEditingMode,\r\n                      }}\r\n                    defaultValue={commentText}\r\n                    onChange={(input) => setCommentText(input.target.value)}\r\n            />\r\n            {isEditingMode ? \r\n            <Button variant=\"contained\" color=\"primary\" onClick={onSaveEditedComment}>\r\n                {lang === \"en\" ? \"Save Comment\" : \"Zapisz Komentarz\"}\r\n            </Button> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostCommentComponent);","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { createComment } from \"../../APIRequests/Comment\";\r\nimport { updatePost } from \"../../APIRequests/Post\";\r\nimport { getUser, UserProps } from \"../../APIRequests/User\";\r\nimport PostCommentComponent from \"./PostCommentComponent\";\r\n\r\nconst PostCommentList = (props) => {\r\n    const [nick, setNick] = useState(\"Guest\");\r\n    const [role, setRole] = useState(\"guest\");\r\n    // const [user, setUser] = useState();\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchUser = (userId:string) => {\r\n        getUser(userId)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setNick(user.nick);\r\n            setRole(user.role);\r\n            // setUser(user);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('blognellaId');\r\n        if(userId) {\r\n            fetchUser(userId);\r\n        } else {\r\n            setNick(\"Guest\");\r\n            setRole(\"guest\");\r\n        }\r\n    }, [props])\r\n\r\n    const updatePostToEditComment = (commentId:string) => {\r\n        const updatedComments = props.post.comment.filter((comment) => comment !== commentId);\r\n        const post = {\r\n            date: props.post.date,\r\n            tags: props.post.tags,\r\n            title: props.post.title,\r\n            content: props.post.content[0]._id,\r\n            _id: props.post._id,\r\n            user: props.post.user,\r\n            comment: updatedComments\r\n        }\r\n        updatePost(post)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Post not saved')\r\n            }\r\n        })\r\n      .catch((err) => console.log(err))\r\n    }\r\n\r\n    const onNewCommentSave = () => {\r\n        const comment = {\r\n            text: newComment,\r\n            date: new Date().toISOString(),\r\n            user: nick\r\n        }\r\n\r\n        createComment(comment)\r\n        .then(({ status, data }) => {\r\n            if (status !== 201) {\r\n              throw new Error('Error! Comment not saved')\r\n            }\r\n            const post = {\r\n                date: props.post.date,\r\n                tags: props.post.tags,\r\n                title: props.post.title,\r\n                content: props.post.content[0]._id,\r\n                _id: props.post._id,\r\n                user: props.post.user,\r\n                comment: [...props.post.comment, data.comment._id]\r\n            }\r\n            updatePost(post)\r\n            .then(({ status}) => {\r\n                if (status !== 200) {\r\n                  throw new Error('Error! Post not saved')\r\n                }\r\n            })\r\n          })\r\n          .catch((err) => console.log(err))\r\n          window.location.reload();\r\n    }\r\n\r\n    const getComments = () => {\r\n        return props.post.comment.map((comment) => <PostCommentComponent key={comment._id} nick={nick} role={role} comment={comment} updatePostToDeleteComment={updatePostToEditComment}/>)  \r\n    }\r\n\r\n\r\n    return (\r\n    <>\r\n    {props.post.comment.length < 1 ? <div>{lang === \"en\" ? \"No comments\" : \"Brak komentarzy\"}</div> : getComments()}\r\n\r\n    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Add Comment\" : \"Dodaj komentarz\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your comment here\" : \"Proszę wpisz komentarz\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={newComment}\r\n                    onChange={(input) => setNewComment(input.target.value)}\r\n    />\r\n    <Button variant=\"contained\" color=\"primary\" onClick={onNewCommentSave}>\r\n        {lang === \"en\" ? \"Add Comment\" : \"Dodaj Komentarz\"}\r\n    </Button>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PostCommentList;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostLinkComponent = (props) => {\r\n    return <Link to={`/post/${props.post._id}`}>{props.post.title}</Link>\r\n}\r\n\r\nexport default PostLinkComponent;","import React from \"react\";\r\nimport PostCommentList from \"./PostCommentList\";\r\nimport PostLinkComponent from \"./PostLinkComponent\";\r\n// import DatePicker from 'react-date-picker';\r\n\r\nconst PostComponent = (props) => {\r\n    // const [value, onChange] = useState<any>(new Date());\r\n    // const date = new Date('2018-05-18T04:00:00Z').toLocaleString();\r\n    // const date = new Date(props.post.date).toUTCString();\r\n\r\n    // const customoldData = new Date('2021-01-19T21:41:19.169Z').toDateString()\r\n    // const customnewData = new Date('2021-02-19T21:41:19.169Z').toDateString()\r\n    // console.log(\"old\");\r\n    // console.log(customoldData);\r\n    // console.log(\"new\");\r\n    // console.log(customnewData);\r\n    // const actualDate = new Date().toDateString()\r\n\r\n    // console.log(customoldData > customnewData); //true\r\n    // console.log(customoldData > actualDate)\r\n\r\n\r\n    const date = new Date(props.post.date).toDateString();\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const getTags = () => {\r\n        return props.post.tags.map((tag) => <span key={tag}>{tag}</span>)\r\n    }\r\n\r\n    const getPostChapters = () => {\r\n        return props.postChapters.map((postChapter) => <div key={postChapter._id}><PostLinkComponent post={postChapter}/></div>)\r\n    }\r\n\r\n    return (\r\n        props.post.date > new Date().toISOString() ? <div>{lang === \"en\" ? \"It will be avaiable soon - \" : \"Dostępne wkrótce - \"}{date}</div> : \r\n            <>\r\n            {/* <DatePicker\r\n            onChange={onChange}\r\n            value={value}\r\n            /> */}\r\n            <div>{date}</div>\r\n            <div>{props.post.title}</div>\r\n            <div dangerouslySetInnerHTML={{ __html: props.post.content[0].text }} />\r\n\r\n            <div>{lang === \"en\" ? \"Chapters\" : \"Rozdziały\"}</div>\r\n            {getPostChapters()}\r\n\r\n            <div><span>{lang === \"en\" ? \"Tags: \" : \"Etykiety: \"}</span>{getTags()}</div>\r\n            <div>{lang === \"en\" ? \"Added by \" : \"Dodane przez \"}{props.post.user}</div>\r\n            <PostCommentList post={props.post}/>\r\n            </>\r\n        \r\n    )\r\n}\r\n\r\nexport default PostComponent;","import React, { useEffect, useState } from \"react\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostComponent from \"../PostComponent/PostComponent\";\r\n\r\nconst MainView = () => {\r\n    const [newestPost, setNewestPost] = useState();\r\n\r\n    const fetchNewestPost = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            const mainViewPost = allMainPosts.reduce((mainPost, nextPost) => {\r\n                if(JSON.stringify(mainPost) === JSON.stringify({})) return nextPost\r\n                return mainPost.date < nextPost.date ? nextPost : mainPost;\r\n            },{})\r\n            setNewestPost(mainViewPost);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchNewestPost()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {newestPost ? <PostComponent post={newestPost} postChapters={[]}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainView;","import React from \"react\";\r\nimport MainView from \"../components/MainView/MainView\";\r\n\r\nconst MainViewPage = () => {\r\n    return <MainView/>\r\n}\r\n\r\nexport default MainViewPage","import styled from 'styled-components'\r\n\r\nexport const StyledRegisterForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #8a8a8a;;\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n`;\r\n","import React, {useState} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { FormItem, LogicControls, StyledRegisterForm } from \"./RegisterForm.styles\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst RegisterForm = (props) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    \r\n\r\n    const onUserSave = () => {\r\n        console.log(nick);\r\n        console.log(login);\r\n        console.log(password);\r\n        console.log(email);\r\n        const user = {\r\n            nick:nick,\r\n            login:login,\r\n            password:password,\r\n            email:email,\r\n            role:\"loggedUser\"\r\n        }\r\n        createUser(user)\r\n        .then(({ status, data }) => {\r\n            console.log(\"zwrotna data\");\r\n            console.log(data);\r\n            if (status !== 201) {\r\n              throw new Error('Error! User not saved')\r\n            }\r\n            // setTodos(data.todos)\r\n          })\r\n          .catch((err) => console.log(err))\r\n        props.history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <StyledRegisterForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your nickname here\" : \"Proszę wpisz nick\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setNick(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Password\" : \"Hasło\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your password here\" : \"Proszę wpisz swoje hasło\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Email\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your email here\" : \"Proszę wpisz swój email\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setEmail(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div>{lang === \"en\" ? \"Have already account? \" : \"Masz już konto?\"}\r\n                    <Link to={\"/login\"}>{lang === \"en\" ? \"Login\" : \"Zaloguj się\"}</Link>\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n                        {lang === \"en\" ? \"Register\" : \"Zarejestruj się\"}\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledRegisterForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(RegisterForm);","import React from \"react\";\r\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n    return <RegisterForm/>\r\n}\r\n\r\nexport default RegisterPage","import axios from \"axios\"\r\n\r\nexport interface TagProps {\r\n    _id?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getTags = async () => {\r\n    try {\r\n      const tags = await axios.get(\r\n         '/tags'\r\n      )\r\n      return tags\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const createTag = async (\r\n    tag: TagProps\r\n  ) => {\r\n    try {\r\n      const saveTag = await axios.post(\r\n        '/tag',\r\n        tag\r\n      )\r\n      return saveTag\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n    return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const deleteTag = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedTag = await axios.delete(\r\n        `/tag/${_id}`\r\n      )\r\n      return deletedTag\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { createTag, deleteTag, getTags, TagProps } from \"../../APIRequests/Tag\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst TagsPanel = (props) => {\r\n    const [tag, setTag] = useState(\"\");\r\n    const [allTags, setAllTags] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllTags = () => {\r\n        getTags()\r\n        .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onTagSave = () => {\r\n        createTag({name: tag})\r\n        // .then(({ status, data }) => {\r\n        .then(({ status }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Tag not saved')\r\n                }\r\n                fetchAllTags();\r\n        })\r\n        props.history.push(\"/panel/tags\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags()\r\n    }, [])\r\n\r\n      const onTagDelete = (tag:TagProps) => {\r\n        deleteTag(tag._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Tag not deleted')\r\n            }\r\n            fetchAllTags()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allTags.map((tag:TagProps) => \r\n          <ListItem key={tag.name}>\r\n          <ListItemText\r\n            primary={tag.name}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onTagDelete(tag)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n            <TextField\r\n            label={lang === \"en\" ? \"Tag\" : \"Etykieta\"}\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your tag here\" : \"Proszę wpisz etykietę\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setTag(input.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onTagSave}>\r\n                    {lang === \"en\" ? \"Add Tag\" : \"Dodaj etykietę\"}\r\n            </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(TagsPanel);","import React from \"react\";\r\nimport TagsPanel from \"../components/TagsPanel/TagsPanel\";\r\n\r\nconst PanelTagsPage = () => {\r\n    return <TagsPanel/>\r\n}\r\n\r\nexport default PanelTagsPage","import React, {useState, useEffect} from \"react\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst ChaptersList = (props) => {\r\n    const [mainPosts, setMainPosts] = useState<String[]>([]);\r\n    const [postTitle, setPostTitle] = useState(\"\");\r\n\r\n    const FilterAndSetMainPosts = (posts:PostProps[]) => {\r\n        const mainPosts = posts.filter((post:PostProps) => post.content[0].title === \"Main\");\r\n        const mainTitles = mainPosts.map((post) => post.title)\r\n        console.log(mainTitles);\r\n        setMainPosts(mainTitles);\r\n    }\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => FilterAndSetMainPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(postTitle === \"\" && props.storyTitle) {\r\n            setPostTitle(props.storyTitle)\r\n        }\r\n    }, [props.storyTitle])\r\n\r\n    const handlePostTitle = (event) => {\r\n        setPostTitle(event.target.value);\r\n        props.setPostTitle(event.target.value);\r\n    }\r\n\r\n    const getTitleList = () => {\r\n        return mainPosts.map((postTitle:any) => <MenuItem key={postTitle} value={postTitle}>{postTitle}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n            value={postTitle}\r\n            onChange={handlePostTitle}\r\n            >\r\n            {getTitleList()}\r\n            </Select>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChaptersList;","import axios from \"axios\";\r\n\r\ninterface ContentProps {\r\n    _id?: string;\r\n    text: string;\r\n    title: string;\r\n}\r\n\r\nexport const createContent = async (\r\n    content: ContentProps\r\n  ) => {\r\n    try {\r\n      const savedContent = await axios.post(\r\n        `/content`,\r\n        content\r\n      )\r\n      return savedContent\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const updateContent = async (\r\n    content: ContentProps\r\n  ) => {\r\n    try {\r\n      const updatedContent = await axios.put(\r\n        `/content/${content._id}`,\r\n        content\r\n      )\r\n      return updatedContent\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        return {data: [], status: 403}\r\n    }\r\n  }","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Select, useTheme } from '@material-ui/core';\r\nimport { createContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { createPost } from '../../APIRequests/Post';\r\nimport DatePicker from 'react-date-picker';\r\nimport { getUser, UserProps } from '../../APIRequests/User';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst PostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState('<p>React is really <em>nice</em>!</p>');\r\n    const [title, setTitle] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n    const [date, setDate] = useState<any>(new Date());\r\n    const [user, setUser] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = () => {\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle\r\n        }\r\n        // const createdContent = createContent(content)\r\n        createContent(content)\r\n        .then(({ status, data }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Post not saved')\r\n                }\r\n                setContentId(data.content._id);\r\n              })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(contentId){\r\n            onPostSave()\r\n            setContentId(undefined)\r\n        }\r\n    }, [contentId])\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const fetchUser = () => {\r\n      const userId = localStorage.getItem('blognellaId');\r\n      if(userId) {\r\n        getUser(userId)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setUser(user.nick);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n      }\r\n      \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n        fetchUser();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: date.toISOString(),\r\n            tags: tags,\r\n            title: title,\r\n            content: contentId,\r\n            user: user\r\n        }\r\n        createPost(post);\r\n        props.history.push(\"/panel/posts\");\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    return (\r\n        <>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Title\" : \"Tytuł\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your post title here\" : \"Proszę wpisz tytuł wpisu\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n          <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your nick here\" : \"Proszę wpisz nick\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={user}\r\n                    onChange={(input) => setUser(input.target.value)}\r\n         />\r\n\r\n        <div>{lang === \"en\" ? \"Date of publication\" : \"Data publikacji\"}</div>\r\n        <DatePicker\r\n            onChange={(val:any) => setDate(val)}\r\n            value={date}\r\n        />\r\n\r\n        <div>{lang === \"en\" ? \"Add tags to post\" : \"Dodaj etykiety do wpisu\"}</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    {lang === \"en\" ? \"Save Post\" : \"Zapisz Wpis\"}\r\n         </Button>\r\n      </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(PostsPanel);","import { MenuItem, Select } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport PostsPanel from \"../components/PostsPanel/PostsPanel\";\r\n\r\nconst PanelPostsAddingPage = () => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const handlePostType = (event) => {\r\n        setPostType(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postType}\r\n          onChange={handlePostType}\r\n        >\r\n          <MenuItem value=\"Main\">{lang === \"en\" ? \"Main\" : \"Wpis\"}</MenuItem>\r\n          <MenuItem value=\"Chapter\">{lang === \"en\" ? \"Chapter\" : \"Rozdział\"}</MenuItem>\r\n          <MenuItem value=\"About\">{lang === \"en\" ? \"About\" : \"O mnie\"}</MenuItem>\r\n        </Select>\r\n        <div></div>\r\n        {postType === \"Chapter\" ? <ChaptersList setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {postType === \"Main\" || postType === \"About\" || storyTitle ? <PostsPanel contentTitle={storyTitle || postType}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PanelPostsAddingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deletePost, getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst PostsPanelList = () => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => setAllPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n      const onPostDelete = (post:PostProps) => {\r\n        deletePost(post._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Post not deleted')\r\n            }\r\n            fetchAllPosts()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allPosts.map((post:PostProps) => \r\n          <ListItem key={post._id}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/posts/${post._id}`,\r\n                // search: `?id=${post._id}`,\r\n                state: { myId: post._id }\r\n                }}> {post.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onPostDelete(post)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n            <Link to={\"/panel/posts/add\"}>{lang === \"en\" ? \"Add Post\" : \"Dodaj Wpis\"}</Link>\r\n            {/* <Link to={{\r\n            pathname: '/template',\r\n            search: '?query=abc',\r\n            state: { detail: response.data }\r\n            }}> My Link </Link> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostsPanelList;","import React from \"react\";\r\nimport PostsPanelList from \"../components/PostsPanelList/PostsPanelList\";\r\n\r\nconst PanelPostsPage = () => {\r\n\r\n\r\n    return (\r\n        <PostsPanelList/>\r\n    )\r\n}\r\n\r\nexport default PanelPostsPage","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Select, useTheme } from '@material-ui/core';\r\nimport { updateContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { updatePost } from '../../APIRequests/Post';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst UpdatePostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState(props.post.content[0].text || \"\");\r\n    const [title, setTitle] = useState(props.post.title || \"\");\r\n    const [tags, setTags] = useState(props.post.tags || []);\r\n    // const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n    const [date, setDate] = useState<any>(new Date());\r\n    // const [date, setDate] = useState<any>(props.post.date);\r\n    const [user, setUser] = useState(props.post.user);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = () => {\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle,\r\n            _id: props.post.content[0]._id\r\n        }\r\n        updateContent(content)\r\n        .then(({ status }) => {\r\n                if (status !== 200) {\r\n                  throw new Error('Error! Content not saved')\r\n                }\r\n                // setContentId(data.content._id);\r\n                onPostSave()\r\n              })\r\n    }\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: date.toISOString(),\r\n            tags: tags,\r\n            title: title,\r\n            content: props.post.content[0]._id,\r\n            _id: props.post._id,\r\n            user: user\r\n        }\r\n\r\n        updatePost(post)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Post not saved')\r\n            }\r\n          })\r\n        props.history.push(\"/panel/posts\");\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    return (\r\n        <>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Title\" : \"Tytuł\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your post title here\" : \"Proszę wpisz tytuł wpisu\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={title}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n        <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your nick here\" : \"Proszę wpisz nick\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={user}\r\n                    onChange={(input) => setUser(input.target.value)}\r\n        />\r\n\r\n        <div>{lang === \"en\" ? \"Date of publication\" : \"Data publikacji\"}</div>\r\n        <DatePicker\r\n            onChange={(val:any) => setDate(val)}\r\n            value={date}\r\n        />\r\n\r\n\r\n        <div>{lang === \"en\" ? \"Add tags to post\" : \"Dodaj etykiety do wpisu\"}</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    {lang === \"en\" ? \"Save Post\" : \"Zapisz post\"}\r\n         </Button>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdatePostsPanel);","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, PostProps } from \"../APIRequests/Post\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport UpdatePostsPanel from \"../components/PostsPanel/UpdatePostsPanel\";\r\n\r\nconst PanelPostsUpdatingPage = (props) => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n    const [editedPost, setEditedPost] = useState<PostProps>();\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchEditedPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            const postTitle = post.content[0].title;\r\n            const customPostType = postTitle === \"Main\" || postTitle === \"About\" ? postTitle : \"Chapter\";\r\n            setPostType(customPostType);\r\n            customPostType === \"Chapter\" && setStoryTitle(postTitle);\r\n            setEditedPost(post);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedPost()\r\n    }, [])\r\n\r\n    const contentTitle = postType === \"Main\" || postType === \"About\" ? postType : storyTitle;\r\n\r\n    return (\r\n        <>\r\n        {/* <div>UPDATE PAGE</div> */}\r\n         {/* <Select\r\n          value={postType}\r\n          onChange={handlePostType}\r\n        >\r\n          <MenuItem value=\"Main\">Main</MenuItem>\r\n          <MenuItem value=\"Chapter\">Chapter</MenuItem>\r\n          <MenuItem value=\"About\">About</MenuItem>\r\n        </Select> */}\r\n        <div>{postType === \"Main\" ? (lang === \"en\" ? \"STORY\" : \"WPIS\") : postType === \"About\" ? (lang === \"en\" ? \"ABOUT\" : \"O MNIE\") : (lang === \"en\" ? \"CHAPTER\" : \"ROZDZIAŁ\")}</div>\r\n        {postType === \"Chapter\" ? <ChaptersList storyTitle={storyTitle} setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {(postType === \"Main\" || postType === \"About\" || storyTitle) && editedPost ? \r\n        <UpdatePostsPanel contentTitle={contentTitle} post={editedPost}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PanelPostsUpdatingPage);\r\n// export default PanelPostsUpdatingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { BookmarkProps, deleteBookmark, getBookmarks } from \"../../APIRequests/Bookmark\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BookmarksPanel = () => {\r\n    const [allBookmarks, setAllBookmarks] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllBookmarks = () => {\r\n        getBookmarks()\r\n        .then(({ data: { bookmarks } }: BookmarkProps[] | any) => setAllBookmarks(bookmarks))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllBookmarks()\r\n    }, [])\r\n\r\n      const onBookmarkDelete = (bookmark:BookmarkProps) => {\r\n        deleteBookmark(bookmark._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Bookmark not deleted')\r\n            }\r\n            fetchAllBookmarks()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allBookmarks.map((bookmark:BookmarkProps) => \r\n          <ListItem key={bookmark.title}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/bookmarks/${bookmark._id}`,\r\n                state: { myId: bookmark._id }\r\n            }}> {bookmark.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onBookmarkDelete(bookmark)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n\r\n            <Link to={\"/panel/bookmarks/add\"}>{lang === \"en\" ? \"Add Bookmark\" : \"Dodaj Zakładkę\"}</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookmarksPanel;","import React from \"react\";\r\nimport BookmarksPanel from \"../components/BookmarkPanel/BookmarksPanel\";\r\n\r\nconst PanelBookmarksPage = () => {\r\n    return <BookmarksPanel/>\r\n}\r\n\r\nexport default PanelBookmarksPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createBookmark } from \"../../APIRequests/Bookmark\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst BookmarkPanelAdd = (props) => {\r\n    const [postId, setPostId] = useState(\"\");\r\n    const [allPosts, setAllPosts] = useState<PostProps[]>([]);\r\n    const [bookmarkTitle, setBookmarkTitle] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n    const handlePostId = (event) => {\r\n        setPostId(event.target.value);\r\n    };\r\n\r\n    const onBookmarkSave = () => {\r\n        const bookmark = {\r\n            title: bookmarkTitle,\r\n            post: postId,\r\n        }\r\n        createBookmark(bookmark);\r\n        props.history.push(\"/panel/bookmarks\");\r\n    }\r\n\r\n    const getPostsTitles = () => {\r\n        return allPosts.map((post) => <MenuItem key={post._id} value={post._id}>{post.title}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postId}\r\n          onChange={handlePostId}\r\n        >\r\n            {getPostsTitles()}\r\n        </Select>\r\n        <div></div>\r\n        <TextField\r\n            label={lang === \"en\" ? \"Bookmark title\" : \"Tytuł zakładki\"}\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your bookmark title here\" : \"Proszę wpisz tytuł zakładki\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setBookmarkTitle(input.target.value)}\r\n            />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onBookmarkSave}>\r\n            {lang === \"en\" ? \"Save Bookmark\" : \"Zapisz Zakładkę\"}\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(BookmarkPanelAdd);","import React from \"react\";\r\nimport BookmarkPanelAdd from \"../components/BookmarkPanel/BookmarkPanelAdd\";\r\n\r\nconst PanelBookmarkAddingPage = () => {\r\n   return <BookmarkPanelAdd/>\r\n}\r\n\r\nexport default PanelBookmarkAddingPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { updateBookmark } from \"../../APIRequests/Bookmark\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst BookmarkPanelUpdate = (props) => {\r\n    const [postId, setPostId] = useState(props.bookmark.post.length > 0 ? props.bookmark.post[0]._id : \"\");\r\n    const [allPosts, setAllPosts] = useState<PostProps[]>([]);\r\n    const [bookmarkTitle, setBookmarkTitle] = useState(props.bookmark.title || \"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n    const handlePostId = (event) => {\r\n        setPostId(event.target.value);\r\n    };\r\n\r\n    const onBookmarkSave = () => {\r\n        const bookmark = {\r\n            _id: props.bookmark._id,\r\n            title: bookmarkTitle,\r\n            post: postId,\r\n        }\r\n        updateBookmark(bookmark)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Bookmark not saved')\r\n            }\r\n          })\r\n        props.history.push(\"/panel/bookmarks\");\r\n    }\r\n\r\n    const getPostsTitles = () => {\r\n        return allPosts.map((post) => <MenuItem  key={post._id} value={post._id}>{post.title}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postId}\r\n          onChange={handlePostId}\r\n        >\r\n            {getPostsTitles()}\r\n        </Select>\r\n        <div></div>\r\n        <TextField\r\n            label={lang === \"en\" ? \"Bookmark title\" : \"Tytuł zakladki\"}\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your bookmark title here\" : \"Proszę wpisz tytuł zakładki\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={bookmarkTitle}\r\n            onChange={(input) => setBookmarkTitle(input.target.value)}\r\n            />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onBookmarkSave}>\r\n            {lang === \"en\" ? \"Save Bookmark\" : \"Zapisz Zakładkę\"}\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(BookmarkPanelUpdate);","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BookmarkProps, getBookmark } from \"../APIRequests/Bookmark\";\r\nimport BookmarkPanelUpdate from \"../components/BookmarkPanel/BookmarkPanelUpdate\";\r\n\r\nconst PanelBookmarkUpdatingPage = (props) => {\r\n    const [editedBookmark, setEditedBookmark] = useState<BookmarkProps>();\r\n\r\n    const fetchEditedBookmark = () => {\r\n        getBookmark(props.match.params.id)\r\n        .then(({ data: { bookmark } }: BookmarkProps | any) => {\r\n            setEditedBookmark(bookmark);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedBookmark()\r\n    }, [])\r\n\r\n    return editedBookmark ? <BookmarkPanelUpdate bookmark={editedBookmark}/> : <></>;\r\n}\r\n\r\nexport default withRouter(PanelBookmarkUpdatingPage);","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteUser, getUsers, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst UsersPanel = () => {\r\n    const [allUsers, setAllUsers] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllUsers = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => setAllUsers(users))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllUsers()\r\n    }, [])\r\n\r\n      const onUserDelete = (user:UserProps) => {\r\n        deleteUser(user._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! User not deleted')\r\n            }\r\n            fetchAllUsers()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allUsers.map((user:UserProps) => \r\n          <ListItem key={user.nick}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/users/${user._id}`,\r\n                state: { myId: user._id }\r\n            }}> {user.nick} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onUserDelete(user)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n\r\n            <Link to={\"/panel/users/add\"}>{lang === \"en\" ? \"Add User\" : \"Dodaj użytkownika\"}</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersPanel;","import React from \"react\";\r\nimport UsersPanel from \"../components/UsersPanel/UsersPanel\";\r\n\r\nconst PanelUsersPage = () => {\r\n\r\n\r\n    return (\r\n        <UsersPanel/>\r\n    )\r\n}\r\n\r\nexport default PanelUsersPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\n\r\nconst allUsersRoles = [\"loggedUser\", \"admin\"];\r\n\r\nconst UserPanelAdd = (props) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const handleUserRole = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n\r\n    const onUserSave = () => {\r\n        const user = {\r\n            nick: nick,\r\n            login: login,\r\n            password: password,\r\n            role: role,\r\n            email: email,\r\n        }\r\n        createUser(user);\r\n        props.history.push(\"/panel/users\");\r\n    }\r\n\r\n    const getUsersRoles = () => {\r\n        return allUsersRoles.map((role) => <MenuItem key={role} value={role}>{role}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <TextField\r\n            label=\"Nick\"\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your nickname here\" : \"Proszę wpisz nick\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setNick(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Login\"\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setLogin(input.target.value)}\r\n        />\r\n        <TextField\r\n            label={lang === \"en\" ? \"Password\" : \"Hasło\"}\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your password here\" : \"Proszę wpisz swoje hasło\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setPassword(input.target.value)}\r\n        />\r\n        <Select\r\n          value={role}\r\n          onChange={handleUserRole}\r\n        >\r\n            {getUsersRoles()}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <TextField\r\n            label=\"Email\"\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your email here\" : \"Proszę wpisz swój email\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setEmail(input.target.value)}\r\n        />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n            {lang === \"en\" ? \"Save User\" : \"Zapisz Użytkownika\"}\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UserPanelAdd);","import React from \"react\";\r\nimport UserPanelAdd from \"../components/UsersPanel/UserPanelAdd\";\r\n\r\nconst PanelUsersAddingPage = () => {\r\n   return <UserPanelAdd/>\r\n}\r\n\r\nexport default PanelUsersAddingPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { updateUser } from \"../../APIRequests/User\";\r\n\r\nconst allUsersRoles = [\"loggedUser\", \"admin\"];\r\n\r\nconst UserPanelUpdate = (props) => {\r\n    const [nick, setNick] = useState(props.user.nick);\r\n    const [login, setLogin] = useState(props.user.login);\r\n    const [password, setPassword] = useState(props.user.password);\r\n    const [role, setRole] = useState(props.user.role);\r\n    const [email, setEmail] = useState(props.user.email);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const handleUserRole = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n\r\n    const onUserSave = () => {\r\n        const user = {\r\n            _id: props.user._id,\r\n            nick: nick,\r\n            login: login,\r\n            password: password,\r\n            role: role,\r\n            email: email,\r\n        }\r\n        updateUser(user);\r\n        props.history.push(\"/panel/users\");\r\n    }\r\n\r\n    const getUsersRoles = () => {\r\n        return allUsersRoles.map((role) => <MenuItem key={role} value={role}>{role}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <TextField\r\n            label=\"Nick\"\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your nickname here\" : \"Proszę wpisz nick\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={nick}\r\n            onChange={(input) => setNick(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Login\"\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={login}\r\n            onChange={(input) => setLogin(input.target.value)}\r\n        />\r\n        <TextField\r\n            label={lang === \"en\" ? \"Password\" : \"Hasło\"}\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your password here\" : \"Proszę wpisz swoje hasło\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={password}\r\n            onChange={(input) => setPassword(input.target.value)}\r\n        />\r\n        <Select\r\n          value={role}\r\n          onChange={handleUserRole}\r\n        >\r\n            {getUsersRoles()}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <TextField\r\n            label=\"Email\"\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your email here\" : \"Proszę wpisz swój email\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={email}\r\n            onChange={(input) => setEmail(input.target.value)}\r\n        />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n            {lang === \"en\" ? \"Save User\" : \"Zapisz Użytkownika\"}\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UserPanelUpdate);","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUser, UserProps } from \"../APIRequests/User\";\r\nimport UserPanelUpdate from \"../components/UsersPanel/UserPanelUpdate\";\r\n\r\nconst PanelUsersUpdatingPage = (props) => {\r\n    const [editedUser, setEditedUser] = useState<UserProps>();\r\n\r\n    const fetchEditedUser = () => {\r\n        getUser(props.match.params.id)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setEditedUser(user);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedUser()\r\n    }, [])\r\n\r\n    return editedUser ? <UserPanelUpdate user={editedUser}/> : <></>;\r\n}\r\n\r\nexport default withRouter(PanelUsersUpdatingPage);","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostComponent from \"../PostComponent/PostComponent\";\r\n\r\nconst PostView = (props) => {\r\n    const [post, setPost] = useState();\r\n    const [postChapters, setPostChapters] = useState([]);\r\n\r\n    const fetchPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            if(JSON.stringify(post) !== JSON.stringify({})) {\r\n                setPost(post);\r\n                fetchAllPosts(post.title)\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const fetchAllPosts = (storyTitle:string) => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allPostChapters = posts.filter((post) => post.content[0].title === storyTitle);\r\n            setPostChapters(allPostChapters || []);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n    }, [props])\r\n\r\n    return (\r\n        <>\r\n        {post ? <PostComponent post={post} postChapters={postChapters} /> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostView);","import React from \"react\";\r\nimport PostView from \"../components/PostView/PostView\";\r\n\r\nconst PostPage = () => {\r\n    return <PostView />\r\n}\r\n\r\nexport default PostPage","import React, {useState} from \"react\";\r\nimport { FormItem, LogicControls, StyledLoginForm } from \"./LoginForm.styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUsers, updateUser, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst LoginForgetForm = (props) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const updateUserPassword = (user) => {\r\n        const updatedSser = {\r\n            _id: user._id,\r\n            nick: user.nick,\r\n            login: user.login,\r\n            password: password,\r\n            role: user.role,\r\n            email: user.email,\r\n        }\r\n        updateUser(updatedSser);\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => {\r\n            const user = users.find((user) => user.login === login && user.email === email)\r\n            if(user) {\r\n                updateUserPassword(user)\r\n                localStorage.setItem('blognellaId', user._id);\r\n                props.history.push('/');\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledLoginForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Email\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your email here\" : \"Proszę wpisz swój email\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setEmail(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"New Password\" : \"Nowe hasło\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your new password here\" : \"Proszę wpisz swoje nowe hasło\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div></div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                        {lang === \"en\" ? \"Update Password\" : \"Aktualizuj Hasło\"}\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledLoginForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForgetForm);","import React from \"react\";\r\nimport LoginForgetForm from \"../components/LoginForm/LoginForgetForm\";\r\n\r\nconst LoginForgetPage = () => {\r\n    return <LoginForgetForm />\r\n}\r\n\r\nexport default LoginForgetPage","import { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst SearchList = (props) => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.title === props.search || post.tags.includes(props.search));\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [props.search])\r\n\r\n    const getListItems = () => {\r\n        return allPosts.map((post:PostProps) => \r\n        <ListItem key={post._id}>\r\n        <ListItemText\r\n           primary={ <Link to={{\r\n            pathname: `/post/${post._id}`,\r\n            }}> {post.title} </Link> }\r\n        />\r\n      </ListItem>\r\n      );\r\n    }\r\n\r\n    return (\r\n        allPosts.length === 0 ? <div>{lang === \"en\" ? \"There is no post that meets the expected criteria\" : \"Nie ma wpisów spełniających podane kryteria\"}</div> :\r\n        <List>\r\n            {getListItems()}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default SearchList;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SearchList from \"../components/SearchComponent/SearchList\";\r\n\r\nconst SearchPage = (props) => {\r\n    return (props.location.state && props.location.state.search) ? <SearchList search={props.location.state.search}/> : <div>Nothing to search</div>\r\n}\r\n\r\nexport default withRouter(SearchPage);","// @ts-nocheck\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n// import App from \"./App\";\r\nimport LoginPage from \"./pages/loginPage\";\r\nimport MainViewPage from \"./pages/mainViewPage\";\r\n\r\nimport RegisterPage from \"./pages/registerPage\";\r\nimport PanelTagsPage from \"./pages/panelTagsPage\";\r\nimport PanelPostsAddingPage from \"./pages/panelPostsAddingPage\";\r\nimport PanelPostsPage from \"./pages/panelPostsPage\";\r\nimport PanelPostsUpdatingPage from \"./pages/panelPostsUpdatingPage\";\r\nimport PanelBookmarksPage from \"./pages/panelBookmarkPage\";\r\nimport PanelBookmarkAddingPage from \"./pages/panelBookmarkAddingPage\";\r\nimport PanelBookmarkUpdatingPage from \"./pages/panelBookmarkUpdatingPage\";\r\nimport PanelUsersPage from \"./pages/panelUsersPage\";\r\nimport PanelUsersAddingPage from \"./pages/panelUsersAddingPage\";\r\nimport PanelUsersUpdatingPage from \"./pages/panelUsersUpdatingPage\";\r\nimport PostPage from \"./pages/postPage\";\r\nimport LoginForgetPage from \"./pages/loginForgetPage\";\r\nimport SearchPage from \"./pages/searchPage\";\r\n\r\n// export default <Router history={hashHistory}>\r\n//   <Route path=\"/\" component={App}>\r\n//     <IndexRoute component={AppSplash}/>\r\n//     <Route path=\"demo\" component={AppDemo}/>\r\n//   </Route>\r\n// </Router>\r\n\r\nexport default function BasicExample() {\r\n    return (\r\n      <Router>\r\n          <Switch>\r\n             <Route exact path=\"/\"> <App page={MainViewPage} /> </Route>\r\n             {/* <Route\r\n              exact path='/'\r\n              render={(props) => (\r\n                <App page={MainViewPage} />\r\n              )}\r\n            /> */}\r\n\r\n             <Route path=\"/register\"><App page={RegisterPage} /></Route>\r\n             <Route path=\"/login/forget\"><App page={LoginForgetPage}/></Route>\r\n             <Route path=\"/login\"><App page={LoginPage}/></Route>\r\n             <Route path=\"/search\"><App page={SearchPage}/></Route>\r\n             <Route path=\"/post/:id\"><App page={PostPage}/></Route>\r\n             <Route path=\"/panel/tags\"><App page={PanelTagsPage}/></Route>\r\n             <Route path=\"/panel/posts/add\"><App page={PanelPostsAddingPage}/></Route>\r\n             <Route path=\"/panel/posts/:id\"><App page={PanelPostsUpdatingPage}/></Route>\r\n             <Route path=\"/panel/posts\"><App page={PanelPostsPage}/></Route>\r\n             <Route path=\"/panel/bookmarks/add\"><App page={PanelBookmarkAddingPage}/></Route>\r\n             <Route path=\"/panel/bookmarks/:id\"><App page={PanelBookmarkUpdatingPage}/></Route>\r\n             <Route path=\"/panel/bookmarks\"><App page={PanelBookmarksPage}/></Route>\r\n             <Route path=\"/panel/users/add\"><App page={PanelUsersAddingPage}/></Route>\r\n             <Route path=\"/panel/users/:id\"><App page={PanelUsersUpdatingPage}/></Route>\r\n             <Route path=\"/panel/users\"><App page={PanelUsersPage}/></Route>\r\n           </Switch>\r\n      </Router>\r\n    );\r\n  }","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import App from './App'\nimport './index.css'\nimport App from './router';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)"],"sourceRoot":""}