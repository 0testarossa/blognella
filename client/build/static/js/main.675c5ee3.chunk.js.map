{"version":3,"sources":["APIRequests/User.tsx","App.styles.tsx","components/AdminPanel/AdminPanel.styles.tsx","components/AdminPanel/AdminPanel.tsx","components/DefaultView/DefaultView.styles.tsx","APIRequests/Bookmark.tsx","components/DefaultView/DefaultViewTabs.tsx","components/DefaultView/DefaultViewLinks.tsx","components/DefaultView/DefaultView.tsx","components/DefaultView/DefaultViewAbout.tsx","components/MainView/MainView.styles.tsx","App.tsx","components/LoginForm/LoginForm.styles.tsx","components/LoginForm/LoginForm.tsx","pages/loginPage.tsx","APIRequests/Post.tsx","APIRequests/Comment.tsx","components/PostComponent/PostCommentComponent.tsx","components/PostComponent/PostCommentList.tsx","components/PostComponent/PostLinkComponent.tsx","components/PostComponent/PostComponent.tsx","components/MainView/MainView.tsx","pages/mainViewPage.tsx","components/RegisterForm/RegisterForm.styles.tsx","components/RegisterForm/RegisterForm.tsx","pages/registerPage.tsx","APIRequests/Tag.tsx","components/TagsPanel/TagsPanel.tsx","pages/panelTagsPage.tsx","components/ChaptersList/ChaptersList.tsx","APIRequests/Content.tsx","components/PostsPanel/PostsPanel.tsx","pages/panelPostsAddingPage.tsx","components/PostsPanelList/PostsPanelList.tsx","pages/panelPostsPage.tsx","components/PostsPanel/UpdatePostsPanel.tsx","pages/panelPostsUpdatingPage.tsx","components/BookmarkPanel/BookmarksPanel.tsx","pages/panelBookmarkPage.tsx","components/BookmarkPanel/BookmarkPanelAdd.tsx","pages/panelBookmarkAddingPage.tsx","components/BookmarkPanel/BookmarkPanelUpdate.tsx","pages/panelBookmarkUpdatingPage.tsx","components/UsersPanel/UsersPanel.tsx","pages/panelUsersPage.tsx","components/UsersPanel/UserPanelAdd.tsx","pages/panelUsersAddingPage.tsx","components/UsersPanel/UserPanelUpdate.tsx","pages/panelUsersUpdatingPage.tsx","components/PostView/PostView.tsx","pages/postPage.tsx","components/LoginForm/LoginForgetForm.tsx","pages/loginForgetPage.tsx","router.tsx","index.tsx"],"names":["getUsers","a","axios","get","users","Error","getUser","_id","user","createUser","post","savedUser","updateUser","put","updatedUser","deleteUser","delete","deletedUser","StyledMain","styled","main","StyledAdminPanel","div","StyledAdminPanelItem","StyledText","span","AdminPanel","to","Logo","LogoContainer","LinksContainer","LinkElement","LoginRegisterContainer","MainViewTabsContainer","AboutSection","MainContentContainer","StyledAdminPanelContainer","getBookmarks","bookmarks","getBookmark","bookmark","createBookmark","savedBookmark","updateBookmark","updatedBookmark","deleteBookmark","deletedBookmark","DefaultViewTabs","useState","allBookmarks","setAllBookmarks","length","then","data","catch","err","console","log","map","key","title","DefaultViewLinks","props","nick","setNick","role","setRole","localStorage","getItem","availablePages","includes","pageName","onClick","removeItem","DefaultView","DefaultViewAbout","MainViewContainer","withRouter","useEffect","userId","fetchUser","page","name","history","push","Content","StyledLoginForm","FormItem","LogicControls","login","setLogin","password","setPassword","TextField","id","label","style","margin","placeholder","fullWidth","InputLabelProps","shrink","onChange","input","target","value","Button","variant","color","find","setItem","LoginPage","getPosts","posts","getPost","createPost","savedPost","updatePost","updatedPost","deletePost","deletedPost","createComment","comment","savedComment","updateComment","updatedComment","deleteComment","deletedComment","PostCommentComponent","isEditingMode","setIsEditingMode","text","commentText","setCommentText","canEdit","Date","date","toDateString","updatePostToDeleteComment","status","InputProps","readOnly","defaultValue","PostCommentList","newComment","setNewComment","updatePostToEditComment","commentId","updatedComments","filter","tags","content","toISOString","PostLinkComponent","PostComponent","dangerouslySetInnerHTML","__html","postChapters","postChapter","tag","MainView","newestPost","setNewestPost","mainViewPost","reduce","mainPost","nextPost","JSON","stringify","MainViewPage","StyledRegisterForm","RegisterForm","email","setEmail","RegisterPage","getTags","createTag","saveTag","deleteTag","deletedTag","TagsPanel","setTag","allTags","setAllTags","fetchAllTags","List","ListItem","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","onTagDelete","PanelTagsPage","ChaptersList","mainPosts","setMainPosts","postTitle","setPostTitle","fetchAllPosts","mainTitles","FilterAndSetMainPosts","storyTitle","Select","event","MenuItem","createContent","savedContent","updateContent","updatedContent","useStyles","makeStyles","chips","display","flexWrap","chip","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","getStyles","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","PostsPanel","classes","useTheme","setData","setTitle","setTags","undefined","contentId","setContentId","setDate","setUser","onPostSave","initialValue","init","plugins","toolbar","e","getContent","handleEditorChange","val","labelId","multiple","Input","renderValue","selected","className","Chip","contentTitle","PanelPostsAddingPage","postType","setPostType","setStoryTitle","PostsPanelList","allPosts","setAllPosts","pathname","state","myId","onPostDelete","PanelPostsPage","UpdatePostsPanel","editedPost","setEditedPost","match","params","customPostType","BookmarksPanel","fetchAllBookmarks","onBookmarkDelete","PanelBookmarksPage","BookmarkPanelAdd","postId","setPostId","bookmarkTitle","setBookmarkTitle","allMainPosts","PanelBookmarkAddingPage","BookmarkPanelUpdate","editedBookmark","setEditedBookmark","UsersPanel","allUsers","setAllUsers","fetchAllUsers","onUserDelete","PanelUsersPage","allUsersRoles","UserPanelAdd","PanelUsersAddingPage","UserPanelUpdate","editedUser","setEditedUser","setPost","setPostChapters","allPostChapters","PostPage","updatedSser","updateUserPassword","LoginForgetPage","BasicExample","exact","path","PanelPostsUpdatingPage","PanelBookmarkUpdatingPage","PanelUsersUpdatingPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.675c5ee3.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport interface UserProps {\r\n    _id?: string;\r\n    nick: string;\r\n    login: string;\r\n    password: string;\r\n    email: string;\r\n    role?: string;\r\n}\r\n\r\nexport const getUsers = async () => {\r\n    try {\r\n      const users = await axios.get(\r\n         '/users'\r\n      )\r\n      return users\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getUser = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const user = await axios.get(\r\n        `/user/${_id}`\r\n      )\r\n      return user\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createUser = async (\r\n    user: UserProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const savedUser: AxiosResponse<ApiDataType> = await axios.post(\r\n        `/user`,\r\n        user\r\n      )\r\n      return savedUser\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updateUser = async (\r\n    user: UserProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedUser: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/user/${user._id}`,\r\n        user\r\n      )\r\n      return updatedUser;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteUser = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedUser = await axios.delete(\r\n        `/user/${_id}`\r\n      )\r\n      return deletedUser;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import styled from 'styled-components'\r\n\r\nexport const StyledMain = styled.main`\r\n    max-width: 824px;\r\n    margin: 0rem auto 0rem auto;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledAdminPanel = styled.div`\r\n  border-right: 1px solid black;\r\n  margin-right: 1rem;\r\n  height: 100%;\r\n`;\r\n\r\nexport const StyledAdminPanelItem = styled.div`\r\n    padding-top: 1.8rem;\r\n    padding-right: 0.5rem;\r\n`;\r\n\r\nexport const StyledText = styled.span`\r\n    border-bottom: 1px solid black;\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StyledAdminPanel, StyledAdminPanelItem, StyledText } from \"./AdminPanel.styles\";\r\n\r\nconst AdminPanel = () => {\r\n    return (\r\n        <StyledAdminPanel>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/posts\"}>POSTS</Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/bookmarks\"}>BOOKMARKS</Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/users\"}>USERS</Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/tags\"}>TAGS</Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n        </StyledAdminPanel>\r\n    )\r\n}\r\n\r\nexport default AdminPanel;","import styled from 'styled-components'\r\n\r\nexport const Logo = styled.div`\r\n    font-family: Roboto;\r\n    font-size: 3.5rem;\r\n`;\r\n\r\nexport const LogoContainer = styled.div`\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n`;\r\n\r\nexport const LinksContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const LinkElement = styled.div`\r\n    color: #ffffff;\r\n    margin: 1rem;\r\n`;\r\n\r\nexport const LoginRegisterContainer = styled.div`\r\n    display:flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const MainViewTabsContainer = styled.div`\r\n    display:flex;\r\n    background-color:#292929;\r\n`;\r\n\r\nexport const AboutSection = styled.div`\r\n    width:20%;\r\n    border-left: 1px solid black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0rem 1rem;\r\n`;\r\n\r\nexport const MainContentContainer = styled.div`\r\n    display: flex;\r\n    min-height: 40rem;\r\n    background-color: grey;\r\n    justify-content: space-between;\r\n    flex-grow: 1;\r\n    padding-top: 1rem;\r\n`;\r\n\r\nexport const StyledAdminPanelContainer = styled.div`\r\n    display:flex;\r\n    height: 100%;\r\n    /* flex-direction: column; */\r\n`;\r\n","import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport interface BookmarkProps {\r\n    _id?: string;\r\n    title: string;\r\n    post: any;\r\n}\r\n\r\nexport const getBookmarks = async () => {\r\n    try {\r\n      const bookmarks = await axios.get(\r\n         '/bookmarks'\r\n      )\r\n      return bookmarks\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getBookmark = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const bookmark = await axios.get(\r\n        `/bookmark/${_id}`\r\n      )\r\n      return bookmark\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createBookmark = async (\r\n    bookmark: BookmarkProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const savedBookmark: AxiosResponse<ApiDataType> = await axios.post(\r\n        `/bookmark`,\r\n        bookmark\r\n      )\r\n      return savedBookmark\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updateBookmark = async (\r\n    bookmark: BookmarkProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedBookmark: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/bookmark/${bookmark._id}`,\r\n        bookmark\r\n      )\r\n      return updatedBookmark;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteBookmark = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedBookmark = await axios.delete(\r\n        `/bookmark/${_id}`\r\n      )\r\n      return deletedBookmark;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import React, { useState } from \"react\";\r\nimport { LinkElement, MainViewTabsContainer } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BookmarkProps, getBookmarks } from \"../../APIRequests/Bookmark\";\r\n\r\nconst DefaultViewTabs = () => {\r\n    const [allBookmarks, setAllBookmarks] = useState<BookmarkProps[]>([]);\r\n\r\n    const fetchAllBookmarks = () => {\r\n        getBookmarks()\r\n        .then(({ data: { bookmarks } }: BookmarkProps[] | any) => {if(bookmarks.length !== allBookmarks.length) setAllBookmarks(bookmarks)})\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    if(allBookmarks.length === 0) fetchAllBookmarks();\r\n\r\n    const getAllLinks = () => {\r\n        return allBookmarks.map((bookmark) => <LinkElement key={bookmark._id}><Link to={`/post/${bookmark.post[0]._id}`}>{bookmark.title}</Link></LinkElement>) || []\r\n    }\r\n\r\n    return (\r\n        <MainViewTabsContainer>\r\n            <LinkElement><Link to={\"/\"}>Home</Link></LinkElement>\r\n            {getAllLinks()}\r\n            {/* <LinkElement><Link to={\"/\"}>Home</Link></LinkElement> */}\r\n        </MainViewTabsContainer>\r\n    )\r\n}\r\n\r\nexport default DefaultViewTabs;","import React, { useState } from \"react\";\r\nimport { LinkElement, LoginRegisterContainer } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUser, UserProps } from \"../../APIRequests/User\";\r\nimport DefaultViewTabs from \"./DefaultViewTabs\";\r\nimport { availablePages } from \"../../App\";\r\n\r\nconst DefaultViewLinks = (props) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n\r\n    const fetchUser = () => {\r\n        getUser(localStorage.getItem('blognellaId') || \"\")\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            if(!nick) {setNick(user.nick);}\r\n            if(!role) {setRole(user.role);}\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onLogout = () => {\r\n        localStorage.removeItem('blognellaId');\r\n    }\r\n\r\n    if(localStorage.getItem('blognellaId')) fetchUser();\r\n\r\n    return (\r\n        <>\r\n            <LoginRegisterContainer>\r\n                {availablePages.includes(props.pageName) && role === \"admin\" ? <LinkElement><Link to={\"/panel/posts\"}>Panel</Link></LinkElement> : <></>}\r\n                { nick ? <LinkElement onClick={onLogout} ><Link to={\"/\"}>Logout {nick}</Link></LinkElement> : \r\n                <LinkElement ><Link to={\"/login\"}>Login</Link></LinkElement> }\r\n                <LinkElement><Link to={\"/register\"}>Register</Link></LinkElement>\r\n            </LoginRegisterContainer>\r\n            <DefaultViewTabs/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultViewLinks;","import React from \"react\";\r\nimport { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\nimport DefaultViewLinks from \"./DefaultViewLinks\";\r\n// import { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\n\r\nconst DefaultView = (props) => {\r\n    return (\r\n        <>\r\n        <LogoContainer>\r\n            <Logo>Kiranella</Logo>\r\n            <LinksContainer>\r\n                    <div>\r\n                    {/* <LinkElement><Link color=\"white\" to={\"/login\"}>Login</Link></LinkElement>\r\n                    <LinkElement><Link to={\"/register\"}>Register</Link></LinkElement> */}\r\n                    </div>\r\n            </LinksContainer>\r\n        </LogoContainer>\r\n        <DefaultViewLinks {...props}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultView;","import React from \"react\";\r\nimport { AboutSection } from \"./DefaultView.styles\";\r\n\r\n\r\nconst DefaultViewAbout = () => {\r\n    return (\r\n        <AboutSection>\r\n            <div>About</div>\r\n            <div>Example</div>\r\n            \r\n        </AboutSection>\r\n    )\r\n}\r\n\r\nexport default DefaultViewAbout;","import styled from 'styled-components'\r\n\r\nexport const MainViewContainer = styled.div`\r\n    /* display: flex; */\r\n    /* justify-content: space-between; */\r\n    margin: 0rem 1rem;\r\n    width:80%;\r\n`;","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { getUser, UserProps } from './APIRequests/User';\nimport { StyledMain } from './App.styles';\nimport AdminPanel from './components/AdminPanel/AdminPanel';\nimport DefaultView from './components/DefaultView/DefaultView'\nimport { MainContentContainer, StyledAdminPanelContainer } from './components/DefaultView/DefaultView.styles';\nimport DefaultViewAbout from './components/DefaultView/DefaultViewAbout';\n\nimport './components/globalStyles/globalStyles.css';\nimport { MainViewContainer } from './components/MainView/MainView.styles';\n\nexport const availablePages = [\"RegisterPage\", \"LoginForgetPage\", \"LoginPage\", \"PostPage\", \"MainViewPage\"]\n\nconst App: React.FC = (props:any) => {\n  const [role, setRole] = useState(\"\");\n\n  const fetchUser = () => {\n      const userId = localStorage.getItem('blognellaId') || \"\";\n      if(userId) {\n        getUser(userId)\n        .then(({ data: { user } }: UserProps | any) => {\n            if(role !== user.role) {setRole(user.role);}\n        })\n        .catch((err: Error) => console.log(err))\n      } else {\n        setRole(\"guest\");\n      }\n  }\n\n  useEffect(() => {\n    fetchUser()\n  }, [props])\n\n\n  if(props.page.name === \"LoginPage\" &&  localStorage.getItem('blognellaId')) {props.history.push(\"/\")};\n  // if(!availablePages.includes(props.page.name) && role !== \"admin\" && role) {props.history.push(\"/\")};\n  console.log(\"page\");\n  console.log(props.page.name)\n  console.log(!availablePages.includes(props.page.name))\n  const Content = props.page;\n  return (\n    <StyledMain>\n      <DefaultView pageName={props.page.name}/>\n      <MainContentContainer>\n        <MainViewContainer>\n          <StyledAdminPanelContainer>\n\n          {/* {role && \n            <> */}\n           {!availablePages.includes(props.page.name) ? <AdminPanel/> : <></>}\n           <div><Content/></div>\n           {/* </>\n           } */}\n          </StyledAdminPanelContainer>\n        </MainViewContainer>\n        {availablePages.includes(props.page.name) ? <DefaultViewAbout/> : <></>}\n      </MainContentContainer>\n\n\n    </StyledMain>\n  )\n}\n\nexport default withRouter(App)\n","import styled from 'styled-components'\r\n\r\nexport const StyledLoginForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #8a8a8a;;\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n`;\r\n","import React, {useState} from \"react\";\r\nimport { FormItem, LogicControls, StyledLoginForm } from \"./LoginForm.styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getUsers, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst LoginForm = (props) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const onSubmit = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => {\r\n            const user = users.find((user) => user.login === login && user.password === password)\r\n            if(user) {\r\n                localStorage.setItem('blognellaId', user._id);\r\n                props.history.push('/');\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledLoginForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Password\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your password here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div>Zapomniales hasla? Kliknij <Link to={\"/login/forget\"}>Tutaj</Link></div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                    Login\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledLoginForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React from \"react\";\r\nimport LoginForm from \"../components/LoginForm/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n    return <LoginForm />\r\n}\r\n\r\nexport default LoginPage","import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport interface PostProps {\r\n    _id?: string;\r\n    date: Date;\r\n    tags: string[];\r\n    title: string;\r\n    content: any;\r\n    user: string;\r\n}\r\n\r\nexport const getPosts = async () => {\r\n    try {\r\n      const posts = await axios.get(\r\n         '/posts'\r\n      )\r\n      return posts\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getPost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const post = await axios.get(\r\n        `/post/${_id}`\r\n      )\r\n      return post\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createPost = async (\r\n    post: PostProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const savedPost: AxiosResponse<ApiDataType> = await axios.post(\r\n        `/post`,\r\n        post\r\n      )\r\n      return savedPost\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updatePost = async (\r\n    post: PostProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedPost: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/post/${post._id}`,\r\n        post\r\n      )\r\n      return updatedPost;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deletePost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedPost = await axios.delete(\r\n        `/post/${_id}`\r\n      )\r\n      return deletedPost\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport interface CommentProps {\r\n    _id?: string;\r\n    date: string;\r\n    text: string;\r\n    user: any;\r\n}\r\n\r\nexport const getComments = async () => {\r\n    try {\r\n      const comments = await axios.get(\r\n         '/comments'\r\n      )\r\n      return comments\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getComment = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const comment = await axios.get(\r\n        `/comment/${_id}`\r\n      )\r\n      return comment\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createComment = async (\r\n    comment: CommentProps\r\n  ) => {\r\n    try {\r\n      const savedComment = await axios.post(\r\n        `/comment`,\r\n        comment\r\n      )\r\n      return savedComment\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updateComment = async (\r\n    comment: CommentProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedComment: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/comment/${comment._id}`,\r\n        comment\r\n      )\r\n      return updatedComment;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteComment = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedComment = await axios.delete(\r\n        `/comment/${_id}`\r\n      )\r\n      return deletedComment\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport { deleteComment, updateComment } from \"../../APIRequests/Comment\";\r\n\r\nconst PostCommentComponent = (props) => {\r\n    const [isEditingMode, setIsEditingMode] = useState(false);\r\n    const [commentText, setCommentText] = useState(props.comment.text);\r\n\r\n    const canEdit = props.role !== \"guest\" && (props.comment.user === props.nick || props.role === \"admin\" )\r\n\r\n    const onEdit = () => {\r\n        setIsEditingMode(!isEditingMode);\r\n    }\r\n\r\n    const onDelete = () => {\r\n        props.updatePostToDeleteComment(props.comment._id);\r\n        deleteComment(props.comment._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Comment not deleted')\r\n            }\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    const onSaveEditedComment = () => {\r\n        setIsEditingMode(!isEditingMode);\r\n\r\n        const comment = {\r\n            _id: props.comment._id,\r\n            date: props.comment.date,\r\n            text: commentText,\r\n            user: props.comment.user\r\n        }\r\n        updateComment(comment)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n            throw new Error('Error! Comment not saved')\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {props.comment.user} {new Date(props.comment.date).toDateString()}\r\n                {canEdit ? <><span onClick={onEdit}>Edit</span><span onClick={onDelete}>Delete</span></> : <></>}\r\n            </div>\r\n            {/* <div>{props.comment.text}</div> */}\r\n            <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your comment here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                        readOnly: !isEditingMode,\r\n                      }}\r\n                    defaultValue={commentText}\r\n                    onChange={(input) => setCommentText(input.target.value)}\r\n            />\r\n            {isEditingMode ? \r\n            <Button variant=\"contained\" color=\"primary\" onClick={onSaveEditedComment}>\r\n                Save Comment\r\n            </Button> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostCommentComponent;","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { createComment } from \"../../APIRequests/Comment\";\r\nimport { updatePost } from \"../../APIRequests/Post\";\r\nimport { getUser, UserProps } from \"../../APIRequests/User\";\r\nimport PostCommentComponent from \"./PostCommentComponent\";\r\n\r\nconst PostCommentList = (props) => {\r\n    const [nick, setNick] = useState(\"Guest\");\r\n    const [role, setRole] = useState(\"guest\");\r\n    // const [user, setUser] = useState();\r\n    const [newComment, setNewComment] = useState(\"\");\r\n\r\n    const fetchUser = (userId:string) => {\r\n        getUser(userId)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setNick(user.nick);\r\n            setRole(user.role);\r\n            // setUser(user);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('blognellaId');\r\n        if(userId) {\r\n            fetchUser(userId);\r\n        } else {\r\n            setNick(\"Guest\");\r\n            setRole(\"guest\");\r\n        }\r\n    }, [props])\r\n\r\n    const updatePostToEditComment = (commentId:string) => {\r\n        const updatedComments = props.post.comment.filter((comment) => comment !== commentId);\r\n        const post = {\r\n            date: props.post.date,\r\n            tags: props.post.tags,\r\n            title: props.post.title,\r\n            content: props.post.content[0]._id,\r\n            _id: props.post._id,\r\n            user: props.post.user,\r\n            comment: updatedComments\r\n        }\r\n        updatePost(post)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Post not saved')\r\n            }\r\n        })\r\n      .catch((err) => console.log(err))\r\n    }\r\n\r\n    const onNewCommentSave = () => {\r\n        const comment = {\r\n            text: newComment,\r\n            date: new Date().toISOString(),\r\n            user: nick\r\n        }\r\n\r\n        createComment(comment)\r\n        .then(({ status, data }) => {\r\n            if (status !== 201) {\r\n              throw new Error('Error! Comment not saved')\r\n            }\r\n            const post = {\r\n                date: props.post.date,\r\n                tags: props.post.tags,\r\n                title: props.post.title,\r\n                content: props.post.content[0]._id,\r\n                _id: props.post._id,\r\n                user: props.post.user,\r\n                comment: [...props.post.comment, data.comment._id]\r\n            }\r\n            updatePost(post)\r\n            .then(({ status}) => {\r\n                if (status !== 200) {\r\n                  throw new Error('Error! Post not saved')\r\n                }\r\n            })\r\n          })\r\n          .catch((err) => console.log(err))\r\n    }\r\n\r\n    const getComments = () => {\r\n        return props.post.comment.map((comment) => <PostCommentComponent key={comment._id} nick={nick} role={role} comment={comment} updatePostToDeleteComment={updatePostToEditComment}/>)  \r\n    }\r\n\r\n\r\n    return (\r\n    <>\r\n    {props.post.comment.length < 1 ? <div>No comments</div> : getComments()}\r\n\r\n    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Add Comment\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your comment here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={newComment}\r\n                    onChange={(input) => setNewComment(input.target.value)}\r\n    />\r\n    <Button variant=\"contained\" color=\"primary\" onClick={onNewCommentSave}>\r\n        Add Comment\r\n    </Button>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PostCommentList;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostLinkComponent = (props) => {\r\n    return <Link to={`/post/${props.post._id}`}>{props.post.title}</Link>\r\n}\r\n\r\nexport default PostLinkComponent;","import React from \"react\";\r\nimport PostCommentList from \"./PostCommentList\";\r\nimport PostLinkComponent from \"./PostLinkComponent\";\r\n// import DatePicker from 'react-date-picker';\r\n\r\nconst PostComponent = (props) => {\r\n    // const [value, onChange] = useState<any>(new Date());\r\n    // const date = new Date('2018-05-18T04:00:00Z').toLocaleString();\r\n    // const date = new Date(props.post.date).toUTCString();\r\n\r\n    // const customoldData = new Date('2021-01-19T21:41:19.169Z').toDateString()\r\n    // const customnewData = new Date('2021-02-19T21:41:19.169Z').toDateString()\r\n    // console.log(\"old\");\r\n    // console.log(customoldData);\r\n    // console.log(\"new\");\r\n    // console.log(customnewData);\r\n    // const actualDate = new Date().toDateString()\r\n\r\n    // console.log(customoldData > customnewData); //true\r\n    // console.log(customoldData > actualDate)\r\n\r\n\r\n    const date = new Date(props.post.date).toDateString();\r\n\r\n    const getTags = () => {\r\n        return props.post.tags.map((tag) => <span key={tag}>{tag}</span>)\r\n    }\r\n\r\n    const getPostChapters = () => {\r\n        return props.postChapters.map((postChapter) => <div key={postChapter._id}><PostLinkComponent post={postChapter}/></div>)\r\n    }\r\n\r\n    return (\r\n        props.post.date > new Date().toISOString() ? <div>It will be avaiable soon - {date}</div> : \r\n            <>\r\n            {/* <DatePicker\r\n            onChange={onChange}\r\n            value={value}\r\n            /> */}\r\n            <div>{date}</div>\r\n            <div>{props.post.title}</div>\r\n            <div dangerouslySetInnerHTML={{ __html: props.post.content[0].text }} />\r\n\r\n            <div>Chapters</div>\r\n            {getPostChapters()}\r\n\r\n            <div><span>Tags: </span>{getTags()}</div>\r\n            <div>Added by {props.post.user}</div>\r\n            <PostCommentList post={props.post}/>\r\n            </>\r\n        \r\n    )\r\n}\r\n\r\nexport default PostComponent;","import React, { useEffect, useState } from \"react\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostComponent from \"../PostComponent/PostComponent\";\r\n\r\nconst MainView = () => {\r\n    const [newestPost, setNewestPost] = useState();\r\n\r\n    const fetchNewestPost = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            const mainViewPost = allMainPosts.reduce((mainPost, nextPost) => {\r\n                if(JSON.stringify(mainPost) === JSON.stringify({})) return nextPost\r\n                return mainPost.date < nextPost.date ? nextPost : mainPost;\r\n            },{})\r\n            setNewestPost(mainViewPost);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchNewestPost()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {newestPost ? <PostComponent post={newestPost} postChapters={[]}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainView;","import React from \"react\";\r\nimport MainView from \"../components/MainView/MainView\";\r\n\r\nconst MainViewPage = () => {\r\n    return <MainView/>\r\n}\r\n\r\nexport default MainViewPage","import styled from 'styled-components'\r\n\r\nexport const StyledRegisterForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #8a8a8a;;\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n`;\r\n","import React, {useState} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { FormItem, LogicControls, StyledRegisterForm } from \"./RegisterForm.styles\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RegisterForm = () => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const onUserSave = () => {\r\n        console.log(nick);\r\n        console.log(login);\r\n        console.log(password);\r\n        console.log(email);\r\n        const user = {\r\n            nick:nick,\r\n            login:login,\r\n            password:password,\r\n            email:email,\r\n            role:\"loggedUser\"\r\n        }\r\n        createUser(user)\r\n        .then(({ status, data }) => {\r\n            console.log(\"zwrotna data\");\r\n            console.log(data);\r\n            if (status !== 201) {\r\n              throw new Error('Error! User not saved')\r\n            }\r\n            // setTodos(data.todos)\r\n          })\r\n          .catch((err) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <StyledRegisterForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your nickname here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setNick(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Password\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your password here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Email\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your email here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setEmail(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div>Have already account? \r\n                    <Link to={\"/login\"}>Login</Link>\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n                    Register\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledRegisterForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","import React from \"react\";\r\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n    return <RegisterForm/>\r\n}\r\n\r\nexport default RegisterPage","import axios from \"axios\"\r\n\r\nexport interface TagProps {\r\n    _id?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getTags = async () => {\r\n    try {\r\n      const tags = await axios.get(\r\n         '/tags'\r\n      )\r\n      return tags\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const createTag = async (\r\n    tag: TagProps\r\n  ) => {\r\n    try {\r\n      const saveTag = await axios.post(\r\n        '/tag',\r\n        tag\r\n      )\r\n      return saveTag\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteTag = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedTag = await axios.delete(\r\n        `/tag/${_id}`\r\n      )\r\n      return deletedTag\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { createTag, deleteTag, getTags, TagProps } from \"../../APIRequests/Tag\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst TagsPanel = () => {\r\n    const [tag, setTag] = useState(\"\");\r\n    const [allTags, setAllTags] = useState([]);\r\n\r\n    const fetchAllTags = () => {\r\n        getTags()\r\n        .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onTagSave = () => {\r\n        createTag({name: tag})\r\n        // .then(({ status, data }) => {\r\n        .then(({ status }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Tag not saved')\r\n                }\r\n                fetchAllTags();\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags()\r\n    }, [])\r\n\r\n      const onTagDelete = (tag:TagProps) => {\r\n        deleteTag(tag._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Tag not deleted')\r\n            }\r\n            fetchAllTags()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allTags.map((tag:TagProps) => \r\n          <ListItem key={tag.name}>\r\n          <ListItemText\r\n            primary={tag.name}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onTagDelete(tag)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n            <TextField\r\n            label=\"Tag\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your tag here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setTag(input.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onTagSave}>\r\n                    Add Tag\r\n            </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TagsPanel;","import React from \"react\";\r\nimport TagsPanel from \"../components/TagsPanel/TagsPanel\";\r\n\r\nconst PanelTagsPage = () => {\r\n    return <TagsPanel/>\r\n}\r\n\r\nexport default PanelTagsPage","import React, {useState, useEffect} from \"react\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst ChaptersList = (props) => {\r\n    const [mainPosts, setMainPosts] = useState<String[]>([]);\r\n    const [postTitle, setPostTitle] = useState(\"\");\r\n\r\n    const FilterAndSetMainPosts = (posts:PostProps[]) => {\r\n        const mainPosts = posts.filter((post:PostProps) => post.content[0].title === \"Main\");\r\n        const mainTitles = mainPosts.map((post) => post.title)\r\n        console.log(mainTitles);\r\n        setMainPosts(mainTitles);\r\n    }\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => FilterAndSetMainPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(postTitle === \"\" && props.storyTitle) {\r\n            setPostTitle(props.storyTitle)\r\n        }\r\n    }, [props.storyTitle])\r\n\r\n    const handlePostTitle = (event) => {\r\n        setPostTitle(event.target.value);\r\n        props.setPostTitle(event.target.value);\r\n    }\r\n\r\n    const getTitleList = () => {\r\n        return mainPosts.map((postTitle:any) => <MenuItem key={postTitle} value={postTitle}>{postTitle}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n            value={postTitle}\r\n            onChange={handlePostTitle}\r\n            >\r\n            {getTitleList()}\r\n            </Select>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChaptersList;","import axios, { AxiosResponse } from \"axios\";\r\n\r\ninterface ContentProps {\r\n    _id?: string;\r\n    text: string;\r\n    title: string;\r\n}\r\n\r\nexport const createContent = async (\r\n    content: ContentProps\r\n  ) => {\r\n    try {\r\n      const savedContent = await axios.post(\r\n        `/content`,\r\n        content\r\n      )\r\n      return savedContent\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updateContent = async (\r\n    content: ContentProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedContent: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/content/${content._id}`,\r\n        content\r\n      )\r\n      return updatedContent\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Select, useTheme } from '@material-ui/core';\r\nimport { createContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { createPost } from '../../APIRequests/Post';\r\nimport DatePicker from 'react-date-picker';\r\nimport { getUser, UserProps } from '../../APIRequests/User';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst PostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState('<p>React is really <em>nice</em>!</p>');\r\n    const [title, setTitle] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n    const [date, setDate] = useState<any>(new Date());\r\n    const [user, setUser] = useState(\"\");\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = () => {\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle\r\n        }\r\n        // const createdContent = createContent(content)\r\n        createContent(content)\r\n        .then(({ status, data }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Todo not saved')\r\n                }\r\n                setContentId(data.content._id);\r\n              })\r\n        // return createdContent;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(contentId){\r\n            onPostSave()\r\n            setContentId(undefined)\r\n        }\r\n    }, [contentId])\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const fetchUser = () => {\r\n      const userId = localStorage.getItem('blognellaId');\r\n      if(userId) {\r\n        getUser(userId)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setUser(user.nick);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n      }\r\n      \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n        fetchUser();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: date.toISOString(),\r\n            tags: tags,\r\n            title: title,\r\n            content: contentId,\r\n            user: user\r\n        }\r\n        createPost(post);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    return (\r\n        <>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Title\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your post title here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n          <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your nick here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={user}\r\n                    onChange={(input) => setUser(input.target.value)}\r\n         />\r\n\r\n        <div>date of publication</div>\r\n        <DatePicker\r\n            onChange={(val:any) => setDate(val)}\r\n            value={date}\r\n        />\r\n\r\n        <div>Add tags to post</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    Save Post\r\n         </Button>\r\n      </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default PostsPanel","import { MenuItem, Select } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport PostsPanel from \"../components/PostsPanel/PostsPanel\";\r\n\r\nconst PanelPostsAddingPage = () => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n\r\n    const handlePostType = (event) => {\r\n        setPostType(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postType}\r\n          onChange={handlePostType}\r\n        >\r\n          <MenuItem value=\"Main\">Main</MenuItem>\r\n          <MenuItem value=\"Chapter\">Chapter</MenuItem>\r\n          <MenuItem value=\"About\">About</MenuItem>\r\n        </Select>\r\n        <div></div>\r\n        {postType === \"Chapter\" ? <ChaptersList setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {postType === \"Main\" || postType === \"About\" || storyTitle ? <PostsPanel contentTitle={storyTitle || postType}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PanelPostsAddingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deletePost, getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst PostsPanelList = () => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => setAllPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n      const onPostDelete = (post:PostProps) => {\r\n        deletePost(post._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Post not deleted')\r\n            }\r\n            fetchAllPosts()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allPosts.map((post:PostProps) => \r\n          <ListItem key={post._id}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/posts/${post._id}`,\r\n                // search: `?id=${post._id}`,\r\n                state: { myId: post._id }\r\n                }}> {post.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onPostDelete(post)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n            <Link to={\"/panel/posts/add\"}>AddPost</Link>\r\n            {/* <Link to={{\r\n            pathname: '/template',\r\n            search: '?query=abc',\r\n            state: { detail: response.data }\r\n            }}> My Link </Link> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostsPanelList;","import React from \"react\";\r\nimport PostsPanelList from \"../components/PostsPanelList/PostsPanelList\";\r\n\r\nconst PanelPostsPage = () => {\r\n\r\n\r\n    return (\r\n        <PostsPanelList/>\r\n    )\r\n}\r\n\r\nexport default PanelPostsPage","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Select, useTheme } from '@material-ui/core';\r\nimport { updateContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { updatePost } from '../../APIRequests/Post';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst UpdatePostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState(props.post.content[0].text || \"\");\r\n    const [title, setTitle] = useState(props.post.title || \"\");\r\n    const [tags, setTags] = useState(props.post.tags || []);\r\n    // const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n    const [date, setDate] = useState<any>(new Date());\r\n    // const [date, setDate] = useState<any>(props.post.date);\r\n    const [user, setUser] = useState(props.post.user);\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = () => {\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle,\r\n            _id: props.post.content[0]._id\r\n        }\r\n        updateContent(content)\r\n        .then(({ status }) => {\r\n                if (status !== 200) {\r\n                  throw new Error('Error! Content not saved')\r\n                }\r\n                // setContentId(data.content._id);\r\n                onPostSave()\r\n              })\r\n    }\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: date.toISOString(),\r\n            tags: tags,\r\n            title: title,\r\n            content: props.post.content[0]._id,\r\n            _id: props.post._id,\r\n            user: user\r\n        }\r\n\r\n        updatePost(post)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Post not saved')\r\n            }\r\n          })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    return (\r\n        <>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Title\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your post title here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={title}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n        <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your nick here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={user}\r\n                    onChange={(input) => setUser(input.target.value)}\r\n        />\r\n\r\n        <div>date of publication</div>\r\n        <DatePicker\r\n            onChange={(val:any) => setDate(val)}\r\n            value={date}\r\n        />\r\n\r\n\r\n        <div>Add tags to post</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    Save Post\r\n         </Button>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default UpdatePostsPanel","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, PostProps } from \"../APIRequests/Post\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport UpdatePostsPanel from \"../components/PostsPanel/UpdatePostsPanel\";\r\n\r\nconst PanelPostsUpdatingPage = (props) => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n    const [editedPost, setEditedPost] = useState<PostProps>();\r\n\r\n    const fetchEditedPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            const postTitle = post.content[0].title;\r\n            const customPostType = postTitle === \"Main\" || postTitle === \"About\" ? postTitle : \"Chapter\";\r\n            setPostType(customPostType);\r\n            customPostType === \"Chapter\" && setStoryTitle(postTitle);\r\n            setEditedPost(post);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedPost()\r\n    }, [])\r\n\r\n    const contentTitle = postType === \"Main\" || postType === \"About\" ? postType : storyTitle;\r\n\r\n    return (\r\n        <>\r\n        <div>UPDATE PAGE</div>\r\n         {/* <Select\r\n          value={postType}\r\n          onChange={handlePostType}\r\n        >\r\n          <MenuItem value=\"Main\">Main</MenuItem>\r\n          <MenuItem value=\"Chapter\">Chapter</MenuItem>\r\n          <MenuItem value=\"About\">About</MenuItem>\r\n        </Select> */}\r\n        <div>{postType === \"Main\" ? \"STORY\" : postType === \"About\" ? \"ABOUT\" : \"CHAPTER\"}</div>\r\n        {postType === \"Chapter\" ? <ChaptersList storyTitle={storyTitle} setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {(postType === \"Main\" || postType === \"About\" || storyTitle) && editedPost ? \r\n        <UpdatePostsPanel contentTitle={contentTitle} post={editedPost}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PanelPostsUpdatingPage);\r\n// export default PanelPostsUpdatingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { BookmarkProps, deleteBookmark, getBookmarks } from \"../../APIRequests/Bookmark\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BookmarksPanel = () => {\r\n    const [allBookmarks, setAllBookmarks] = useState([]);\r\n\r\n    const fetchAllBookmarks = () => {\r\n        getBookmarks()\r\n        .then(({ data: { bookmarks } }: BookmarkProps[] | any) => setAllBookmarks(bookmarks))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllBookmarks()\r\n    }, [])\r\n\r\n      const onBookmarkDelete = (bookmark:BookmarkProps) => {\r\n        deleteBookmark(bookmark._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Bookmark not deleted')\r\n            }\r\n            fetchAllBookmarks()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allBookmarks.map((bookmark:BookmarkProps) => \r\n          <ListItem key={bookmark.title}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/bookmarks/${bookmark._id}`,\r\n                state: { myId: bookmark._id }\r\n            }}> {bookmark.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onBookmarkDelete(bookmark)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n\r\n            <Link to={\"/panel/bookmarks/add\"}>Add Bookmark</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookmarksPanel;","import React from \"react\";\r\nimport BookmarksPanel from \"../components/BookmarkPanel/BookmarksPanel\";\r\n\r\nconst PanelBookmarksPage = () => {\r\n    return <BookmarksPanel/>\r\n}\r\n\r\nexport default PanelBookmarksPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { createBookmark } from \"../../APIRequests/Bookmark\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst BookmarkPanelAdd = () => {\r\n    const [postId, setPostId] = useState(\"\");\r\n    const [allPosts, setAllPosts] = useState<PostProps[]>([]);\r\n    const [bookmarkTitle, setBookmarkTitle] = useState(\"\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n    const handlePostId = (event) => {\r\n        setPostId(event.target.value);\r\n    };\r\n\r\n    const onBookmarkSave = () => {\r\n        const bookmark = {\r\n            title: bookmarkTitle,\r\n            post: postId,\r\n        }\r\n        createBookmark(bookmark);\r\n    }\r\n\r\n    const getPostsTitles = () => {\r\n        return allPosts.map((post) => <MenuItem key={post._id} value={post._id}>{post.title}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postId}\r\n          onChange={handlePostId}\r\n        >\r\n            {getPostsTitles()}\r\n        </Select>\r\n        <div></div>\r\n        <TextField\r\n            label=\"Bookmark title\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your bookmark title here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setBookmarkTitle(input.target.value)}\r\n            />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onBookmarkSave}>\r\n            Save Bookmark\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookmarkPanelAdd;","import React from \"react\";\r\nimport BookmarkPanelAdd from \"../components/BookmarkPanel/BookmarkPanelAdd\";\r\n\r\nconst PanelBookmarkAddingPage = () => {\r\n   return <BookmarkPanelAdd/>\r\n}\r\n\r\nexport default PanelBookmarkAddingPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { updateBookmark } from \"../../APIRequests/Bookmark\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst BookmarkPanelUpdate = (props) => {\r\n    const [postId, setPostId] = useState(props.bookmark.post[0]._id || \"\");\r\n    const [allPosts, setAllPosts] = useState<PostProps[]>([]);\r\n    const [bookmarkTitle, setBookmarkTitle] = useState(props.bookmark.title || \"\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n    const handlePostId = (event) => {\r\n        setPostId(event.target.value);\r\n    };\r\n\r\n    const onBookmarkSave = () => {\r\n        const bookmark = {\r\n            _id: props.bookmark._id,\r\n            title: bookmarkTitle,\r\n            post: postId,\r\n        }\r\n        updateBookmark(bookmark)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Bookmark not saved')\r\n            }\r\n          })\r\n    }\r\n\r\n    const getPostsTitles = () => {\r\n        return allPosts.map((post) => <MenuItem  key={post._id} value={post._id}>{post.title}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postId}\r\n          onChange={handlePostId}\r\n        >\r\n            {getPostsTitles()}\r\n        </Select>\r\n        <div></div>\r\n        <TextField\r\n            label=\"Bookmark title\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your bookmark title here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={bookmarkTitle}\r\n            onChange={(input) => setBookmarkTitle(input.target.value)}\r\n            />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onBookmarkSave}>\r\n            Save Bookmark\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookmarkPanelUpdate;","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BookmarkProps, getBookmark } from \"../APIRequests/Bookmark\";\r\nimport BookmarkPanelUpdate from \"../components/BookmarkPanel/BookmarkPanelUpdate\";\r\n\r\nconst PanelBookmarkUpdatingPage = (props) => {\r\n    const [editedBookmark, setEditedBookmark] = useState<BookmarkProps>();\r\n\r\n    const fetchEditedBookmark = () => {\r\n        getBookmark(props.match.params.id)\r\n        .then(({ data: { bookmark } }: BookmarkProps | any) => {\r\n            setEditedBookmark(bookmark);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedBookmark()\r\n    }, [])\r\n\r\n    return editedBookmark ? <BookmarkPanelUpdate bookmark={editedBookmark}/> : <></>;\r\n}\r\n\r\nexport default withRouter(PanelBookmarkUpdatingPage);","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteUser, getUsers, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst UsersPanel = () => {\r\n    const [allUsers, setAllUsers] = useState([]);\r\n\r\n    const fetchAllUsers = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => setAllUsers(users))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllUsers()\r\n    }, [])\r\n\r\n      const onUserDelete = (user:UserProps) => {\r\n        deleteUser(user._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! User not deleted')\r\n            }\r\n            fetchAllUsers()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allUsers.map((user:UserProps) => \r\n          <ListItem key={user.nick}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/users/${user._id}`,\r\n                state: { myId: user._id }\r\n            }}> {user.nick} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onUserDelete(user)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n\r\n            <Link to={\"/panel/users/add\"}>Add User</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersPanel;","import React from \"react\";\r\nimport UsersPanel from \"../components/UsersPanel/UsersPanel\";\r\n\r\nconst PanelUsersPage = () => {\r\n\r\n\r\n    return (\r\n        <UsersPanel/>\r\n    )\r\n}\r\n\r\nexport default PanelUsersPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\n\r\nconst allUsersRoles = [\"loggedUser\", \"admin\"];\r\n\r\nconst UserPanelAdd = () => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const handleUserRole = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n\r\n    const onUserSave = () => {\r\n        const user = {\r\n            nick: nick,\r\n            login: login,\r\n            password: password,\r\n            role: role,\r\n            email: email,\r\n        }\r\n        createUser(user);\r\n    }\r\n\r\n    const getUsersRoles = () => {\r\n        return allUsersRoles.map((role) => <MenuItem key={role} value={role}>{role}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <TextField\r\n            label=\"Nick\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your nick here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setNick(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Login\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your login here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setLogin(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Password\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your password here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setPassword(input.target.value)}\r\n        />\r\n        <Select\r\n          value={role}\r\n          onChange={handleUserRole}\r\n        >\r\n            {getUsersRoles()}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <TextField\r\n            label=\"Email\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your email here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setEmail(input.target.value)}\r\n        />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n            Save User\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserPanelAdd;","import React from \"react\";\r\nimport UserPanelAdd from \"../components/UsersPanel/UserPanelAdd\";\r\n\r\nconst PanelUsersAddingPage = () => {\r\n   return <UserPanelAdd/>\r\n}\r\n\r\nexport default PanelUsersAddingPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { updateUser } from \"../../APIRequests/User\";\r\n\r\nconst allUsersRoles = [\"loggedUser\", \"admin\"];\r\n\r\nconst UserPanelUpdate = (props) => {\r\n    const [nick, setNick] = useState(props.user.nick);\r\n    const [login, setLogin] = useState(props.user.login);\r\n    const [password, setPassword] = useState(props.user.password);\r\n    const [role, setRole] = useState(props.user.role);\r\n    const [email, setEmail] = useState(props.user.email);\r\n\r\n    const handleUserRole = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n\r\n    const onUserSave = () => {\r\n        const user = {\r\n            _id: props.user._id,\r\n            nick: nick,\r\n            login: login,\r\n            password: password,\r\n            role: role,\r\n            email: email,\r\n        }\r\n        updateUser(user);\r\n    }\r\n\r\n    const getUsersRoles = () => {\r\n        return allUsersRoles.map((role) => <MenuItem key={role} value={role}>{role}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <TextField\r\n            label=\"Nick\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your nick here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={nick}\r\n            onChange={(input) => setNick(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Login\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your login here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={login}\r\n            onChange={(input) => setLogin(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Password\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your password here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={password}\r\n            onChange={(input) => setPassword(input.target.value)}\r\n        />\r\n        <Select\r\n          value={role}\r\n          onChange={handleUserRole}\r\n        >\r\n            {getUsersRoles()}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <TextField\r\n            label=\"Email\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your email here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={email}\r\n            onChange={(input) => setEmail(input.target.value)}\r\n        />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n            Save User\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserPanelUpdate;","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUser, UserProps } from \"../APIRequests/User\";\r\nimport UserPanelUpdate from \"../components/UsersPanel/UserPanelUpdate\";\r\n\r\nconst PanelUsersUpdatingPage = (props) => {\r\n    const [editedUser, setEditedUser] = useState<UserProps>();\r\n\r\n    const fetchEditedUser = () => {\r\n        getUser(props.match.params.id)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setEditedUser(user);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedUser()\r\n    }, [])\r\n\r\n    return editedUser ? <UserPanelUpdate user={editedUser}/> : <></>;\r\n}\r\n\r\nexport default withRouter(PanelUsersUpdatingPage);","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostComponent from \"../PostComponent/PostComponent\";\r\n\r\nconst PostView = (props) => {\r\n    const [post, setPost] = useState();\r\n    const [postChapters, setPostChapters] = useState([]);\r\n\r\n    const fetchPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            setPost(post);\r\n            fetchAllPosts(post.title)\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const fetchAllPosts = (storyTitle:string) => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allPostChapters = posts.filter((post) => post.content[0].title === storyTitle);\r\n            setPostChapters(allPostChapters || []);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n    }, [props])\r\n\r\n    return (\r\n        <>\r\n        {post ? <PostComponent post={post} postChapters={postChapters} /> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostView);","import React from \"react\";\r\nimport PostView from \"../components/PostView/PostView\";\r\n\r\nconst PostPage = () => {\r\n    return <PostView />\r\n}\r\n\r\nexport default PostPage","import React, {useState} from \"react\";\r\nimport { FormItem, LogicControls, StyledLoginForm } from \"./LoginForm.styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUsers, updateUser, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst LoginForgetForm = (props) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const updateUserPassword = (user) => {\r\n        const updatedSser = {\r\n            _id: user._id,\r\n            nick: user.nick,\r\n            login: user.login,\r\n            password: password,\r\n            role: user.role,\r\n            email: user.email,\r\n        }\r\n        updateUser(updatedSser);\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => {\r\n            const user = users.find((user) => user.login === login && user.email === email)\r\n            if(user) {\r\n                updateUserPassword(user)\r\n                localStorage.setItem('blognellaId', user._id);\r\n                props.history.push('/');\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledLoginForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Email\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your email here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setEmail(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"New Password\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your new password here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div></div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                    Update Password\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledLoginForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForgetForm);","import React from \"react\";\r\nimport LoginForgetForm from \"../components/LoginForm/LoginForgetForm\";\r\n\r\nconst LoginForgetPage = () => {\r\n    return <LoginForgetForm />\r\n}\r\n\r\nexport default LoginForgetPage","// @ts-nocheck\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n// import App from \"./App\";\r\nimport LoginPage from \"./pages/loginPage\";\r\nimport MainViewPage from \"./pages/mainViewPage\";\r\n\r\nimport RegisterPage from \"./pages/registerPage\";\r\nimport PanelTagsPage from \"./pages/panelTagsPage\";\r\nimport PanelPostsAddingPage from \"./pages/panelPostsAddingPage\";\r\nimport PanelPostsPage from \"./pages/panelPostsPage\";\r\nimport PanelPostsUpdatingPage from \"./pages/panelPostsUpdatingPage\";\r\nimport PanelBookmarksPage from \"./pages/panelBookmarkPage\";\r\nimport PanelBookmarkAddingPage from \"./pages/panelBookmarkAddingPage\";\r\nimport PanelBookmarkUpdatingPage from \"./pages/panelBookmarkUpdatingPage\";\r\nimport PanelUsersPage from \"./pages/panelUsersPage\";\r\nimport PanelUsersAddingPage from \"./pages/panelUsersAddingPage\";\r\nimport PanelUsersUpdatingPage from \"./pages/panelUsersUpdatingPage\";\r\nimport PostPage from \"./pages/postPage\";\r\nimport LoginForgetPage from \"./pages/loginForgetPage\";\r\n\r\n// export default <Router history={hashHistory}>\r\n//   <Route path=\"/\" component={App}>\r\n//     <IndexRoute component={AppSplash}/>\r\n//     <Route path=\"demo\" component={AppDemo}/>\r\n//   </Route>\r\n// </Router>\r\n\r\nexport default function BasicExample() {\r\n    return (\r\n      <Router>\r\n          <Switch>\r\n             <Route exact path=\"/\"> <App page={MainViewPage} /> </Route>\r\n             {/* <Route\r\n              exact path='/'\r\n              render={(props) => (\r\n                <App page={MainViewPage} />\r\n              )}\r\n            /> */}\r\n\r\n             <Route path=\"/register\"><App page={RegisterPage} /></Route>\r\n             <Route path=\"/login/forget\"><App page={LoginForgetPage}/></Route>\r\n             <Route path=\"/login\"><App page={LoginPage}/></Route>\r\n             <Route path=\"/post/:id\"><App page={PostPage}/></Route>\r\n             <Route path=\"/panel/tags\"><App page={PanelTagsPage}/></Route>\r\n             <Route path=\"/panel/posts/add\"><App page={PanelPostsAddingPage}/></Route>\r\n             <Route path=\"/panel/posts/:id\"><App page={PanelPostsUpdatingPage}/></Route>\r\n             <Route path=\"/panel/posts\"><App page={PanelPostsPage}/></Route>\r\n             <Route path=\"/panel/bookmarks/add\"><App page={PanelBookmarkAddingPage}/></Route>\r\n             <Route path=\"/panel/bookmarks/:id\"><App page={PanelBookmarkUpdatingPage}/></Route>\r\n             <Route path=\"/panel/bookmarks\"><App page={PanelBookmarksPage}/></Route>\r\n             <Route path=\"/panel/users/add\"><App page={PanelUsersAddingPage}/></Route>\r\n             <Route path=\"/panel/users/:id\"><App page={PanelUsersUpdatingPage}/></Route>\r\n             <Route path=\"/panel/users\"><App page={PanelUsersPage}/></Route>\r\n           </Switch>\r\n      </Router>\r\n    );\r\n  }","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import App from './App'\nimport './index.css'\nimport App from './router';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)"],"sourceRoot":""}