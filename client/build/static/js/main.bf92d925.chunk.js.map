{"version":3,"sources":["APIRequests/User.tsx","App.styles.tsx","components/AdminPanel/AdminPanel.styles.tsx","components/AdminPanel/AdminPanel.tsx","components/DefaultView/DefaultView.styles.tsx","APIRequests/Bookmark.tsx","components/DefaultView/DefaultViewTabs.tsx","components/SearchComponent/SearchComponent.tsx","components/DefaultView/DefaultViewLinks.tsx","components/DefaultView/DefaultView.tsx","APIRequests/Post.tsx","components/PostComponent/PostAboutComponent.tsx","components/DefaultView/DefaultViewAbout.tsx","components/MainView/MainView.styles.tsx","App.tsx","components/LoginForm/LoginForm.styles.tsx","components/LoginForm/LoginForm.tsx","pages/loginPage.tsx","APIRequests/Comment.tsx","components/PostComponent/PostCommentComponent.tsx","components/PostComponent/PostCommentList.tsx","components/PostComponent/PostLinkComponent.tsx","components/PostComponent/PostComponent.tsx","components/MainView/MainView.tsx","pages/mainViewPage.tsx","components/RegisterForm/RegisterForm.styles.tsx","components/RegisterForm/RegisterForm.tsx","pages/registerPage.tsx","APIRequests/Tag.tsx","components/TagsPanel/TagsPanel.tsx","pages/panelTagsPage.tsx","components/ChaptersList/ChaptersList.tsx","APIRequests/Content.tsx","components/PostsPanel/PostsPanel.tsx","pages/panelPostsAddingPage.tsx","components/PostsPanelList/PostsPanelList.tsx","pages/panelPostsPage.tsx","components/PostsPanel/UpdatePostsPanel.tsx","pages/panelPostsUpdatingPage.tsx","components/BookmarkPanel/BookmarksPanel.tsx","pages/panelBookmarkPage.tsx","components/BookmarkPanel/BookmarkPanelAdd.tsx","pages/panelBookmarkAddingPage.tsx","components/BookmarkPanel/BookmarkPanelUpdate.tsx","pages/panelBookmarkUpdatingPage.tsx","components/UsersPanel/UsersPanel.tsx","pages/panelUsersPage.tsx","components/UsersPanel/UserPanelAdd.tsx","pages/panelUsersAddingPage.tsx","components/UsersPanel/UserPanelUpdate.tsx","pages/panelUsersUpdatingPage.tsx","components/PostView/PostView.tsx","pages/postPage.tsx","components/LoginForm/LoginForgetForm.tsx","pages/loginForgetPage.tsx","components/SearchComponent/SearchList.tsx","pages/searchPage.tsx","router.tsx","index.tsx"],"names":["getUsers","a","axios","get","users","Error","getUser","_id","user","createUser","post","savedUser","updateUser","put","updatedUser","deleteUser","delete","deletedUser","StyledMain","styled","main","StyledAdminPanel","div","StyledAdminPanelItem","StyledText","span","AdminPanel","to","Logo","LogoContainer","LinksContainer","LinkElement","LoginRegisterContainer","MainViewTabsContainer","AboutSection","MainContentContainer","StyledAdminPanelContainer","getBookmarks","bookmarks","getBookmark","bookmark","createBookmark","savedBookmark","updateBookmark","updatedBookmark","deleteBookmark","deletedBookmark","DefaultViewTabs","useState","allBookmarks","setAllBookmarks","length","then","data","catch","err","console","log","map","key","title","withRouter","props","searchValue","setSearchValue","TextField","id","label","style","margin","placeholder","fullWidth","InputLabelProps","shrink","onChange","input","target","value","Button","variant","color","onClick","history","push","pathname","state","search","DefaultViewLinks","nick","setNick","role","setRole","localStorage","getItem","availablePages","includes","pageName","removeItem","DefaultView","getPosts","posts","getPost","createPost","savedPost","updatePost","updatedPost","deletePost","deletedPost","PostAboutComponent","date","Date","toDateString","toISOString","dangerouslySetInnerHTML","__html","content","text","DefaultViewAbout","aboutPost","setAboutPost","allAboutPosts","filter","MainViewContainer","useEffect","userId","fetchUser","match","path","Content","page","StyledLoginForm","FormItem","LogicControls","login","setLogin","password","setPassword","find","setItem","LoginPage","createComment","comment","savedComment","updateComment","updatedComment","deleteComment","deletedComment","PostCommentComponent","isEditingMode","setIsEditingMode","commentText","setCommentText","canEdit","updatePostToDeleteComment","status","InputProps","readOnly","defaultValue","PostCommentList","newComment","setNewComment","updatePostToEditComment","commentId","updatedComments","tags","PostLinkComponent","PostComponent","postChapters","postChapter","tag","MainView","newestPost","setNewestPost","mainViewPost","reduce","mainPost","nextPost","JSON","stringify","MainViewPage","StyledRegisterForm","RegisterForm","email","setEmail","RegisterPage","getTags","createTag","saveTag","deleteTag","deletedTag","TagsPanel","setTag","allTags","setAllTags","fetchAllTags","List","ListItem","name","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","onTagDelete","PanelTagsPage","ChaptersList","mainPosts","setMainPosts","postTitle","setPostTitle","fetchAllPosts","mainTitles","FilterAndSetMainPosts","storyTitle","Select","event","MenuItem","createContent","savedContent","updateContent","updatedContent","useStyles","makeStyles","chips","display","flexWrap","chip","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","getStyles","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","PostsPanel","classes","useTheme","setData","setTitle","setTags","undefined","contentId","setContentId","setDate","setUser","onPostSave","initialValue","init","plugins","toolbar","e","getContent","handleEditorChange","val","labelId","multiple","Input","renderValue","selected","className","Chip","contentTitle","PanelPostsAddingPage","postType","setPostType","setStoryTitle","PostsPanelList","allPosts","setAllPosts","myId","onPostDelete","PanelPostsPage","UpdatePostsPanel","editedPost","setEditedPost","params","customPostType","BookmarksPanel","fetchAllBookmarks","onBookmarkDelete","PanelBookmarksPage","BookmarkPanelAdd","postId","setPostId","bookmarkTitle","setBookmarkTitle","allMainPosts","PanelBookmarkAddingPage","BookmarkPanelUpdate","editedBookmark","setEditedBookmark","UsersPanel","allUsers","setAllUsers","fetchAllUsers","onUserDelete","PanelUsersPage","allUsersRoles","UserPanelAdd","PanelUsersAddingPage","UserPanelUpdate","editedUser","setEditedUser","setPost","setPostChapters","allPostChapters","PostPage","updatedSser","updateUserPassword","LoginForgetPage","SearchList","location","BasicExample","exact","SearchPage","PanelPostsUpdatingPage","PanelBookmarkUpdatingPage","PanelUsersUpdatingPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf92d925.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport interface UserProps {\r\n    _id?: string;\r\n    nick: string;\r\n    login: string;\r\n    password: string;\r\n    email: string;\r\n    role?: string;\r\n}\r\n\r\nexport const getUsers = async () => {\r\n    try {\r\n      const users = await axios.get(\r\n         '/users'\r\n      )\r\n      return users\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getUser = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const user = await axios.get(\r\n        `/user/${_id}`\r\n      )\r\n      return user\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createUser = async (\r\n    user: UserProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const savedUser: AxiosResponse<ApiDataType> = await axios.post(\r\n        `/user`,\r\n        user\r\n      )\r\n      return savedUser\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updateUser = async (\r\n    user: UserProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedUser: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/user/${user._id}`,\r\n        user\r\n      )\r\n      return updatedUser;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteUser = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedUser = await axios.delete(\r\n        `/user/${_id}`\r\n      )\r\n      return deletedUser;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import styled from 'styled-components'\r\n\r\nexport const StyledMain = styled.main`\r\n    max-width: 824px;\r\n    margin: 0rem auto 0rem auto;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledAdminPanel = styled.div`\r\n  border-right: 1px solid black;\r\n  margin-right: 1rem;\r\n  height: 100%;\r\n`;\r\n\r\nexport const StyledAdminPanelItem = styled.div`\r\n    padding-top: 1.8rem;\r\n    padding-right: 0.5rem;\r\n`;\r\n\r\nexport const StyledText = styled.span`\r\n    border-bottom: 1px solid black;\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { StyledAdminPanel, StyledAdminPanelItem, StyledText } from \"./AdminPanel.styles\";\r\n\r\nconst AdminPanel = () => {\r\n    return (\r\n        <StyledAdminPanel>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/posts\"}>POSTS</Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/bookmarks\"}>BOOKMARKS</Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/users\"}>USERS</Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/tags\"}>TAGS</Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n        </StyledAdminPanel>\r\n    )\r\n}\r\n\r\nexport default AdminPanel;","import styled from 'styled-components'\r\n\r\nexport const Logo = styled.div`\r\n    font-family: Roboto;\r\n    font-size: 3.5rem;\r\n`;\r\n\r\nexport const LogoContainer = styled.div`\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n`;\r\n\r\nexport const LinksContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const LinkElement = styled.div`\r\n    color: #ffffff;\r\n    margin: 1rem;\r\n`;\r\n\r\nexport const LoginRegisterContainer = styled.div`\r\n    display:flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const MainViewTabsContainer = styled.div`\r\n    display:flex;\r\n    background-color:#292929;\r\n`;\r\n\r\nexport const AboutSection = styled.div`\r\n    width:20%;\r\n    border-left: 1px solid black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0rem 1rem;\r\n`;\r\n\r\nexport const MainContentContainer = styled.div`\r\n    display: flex;\r\n    min-height: 40rem;\r\n    background-color: grey;\r\n    justify-content: space-between;\r\n    flex-grow: 1;\r\n    padding-top: 1rem;\r\n`;\r\n\r\nexport const StyledAdminPanelContainer = styled.div`\r\n    display:flex;\r\n    height: 100%;\r\n    /* flex-direction: column; */\r\n`;\r\n","import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport interface BookmarkProps {\r\n    _id?: string;\r\n    title: string;\r\n    post: any;\r\n}\r\n\r\nexport const getBookmarks = async () => {\r\n    try {\r\n      const bookmarks = await axios.get(\r\n         '/bookmarks'\r\n      )\r\n      return bookmarks\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getBookmark = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const bookmark = await axios.get(\r\n        `/bookmark/${_id}`\r\n      )\r\n      return bookmark\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createBookmark = async (\r\n    bookmark: BookmarkProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const savedBookmark: AxiosResponse<ApiDataType> = await axios.post(\r\n        `/bookmark`,\r\n        bookmark\r\n      )\r\n      return savedBookmark\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updateBookmark = async (\r\n    bookmark: BookmarkProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedBookmark: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/bookmark/${bookmark._id}`,\r\n        bookmark\r\n      )\r\n      return updatedBookmark;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteBookmark = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedBookmark = await axios.delete(\r\n        `/bookmark/${_id}`\r\n      )\r\n      return deletedBookmark;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import React, { useState } from \"react\";\r\nimport { LinkElement, MainViewTabsContainer } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BookmarkProps, getBookmarks } from \"../../APIRequests/Bookmark\";\r\n\r\nconst DefaultViewTabs = () => {\r\n    const [allBookmarks, setAllBookmarks] = useState<BookmarkProps[]>([]);\r\n\r\n    const fetchAllBookmarks = () => {\r\n        getBookmarks()\r\n        .then(({ data: { bookmarks } }: BookmarkProps[] | any) => {if(bookmarks.length !== allBookmarks.length) setAllBookmarks(bookmarks)})\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    if(allBookmarks.length === 0) fetchAllBookmarks();\r\n\r\n    const getAllLinks = () => {\r\n        return allBookmarks.map((bookmark) => <LinkElement key={bookmark._id}><Link to={`/post/${bookmark.post[0]._id}`}>{bookmark.title}</Link></LinkElement>) || []\r\n    }\r\n\r\n    return (\r\n        <MainViewTabsContainer>\r\n            <LinkElement><Link to={\"/\"}>Home</Link></LinkElement>\r\n            {getAllLinks()}\r\n            {/* <LinkElement><Link to={\"/\"}>Home</Link></LinkElement> */}\r\n        </MainViewTabsContainer>\r\n    )\r\n}\r\n\r\nexport default DefaultViewTabs;","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SearchComponent = (props) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n    const onSearch = () => {\r\n        props.history.push({\r\n            pathname: '/search',\r\n            state: { search: searchValue }\r\n          })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Search\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in tag or title here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setSearchValue(input.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onSearch}>\r\n                Search\r\n            </Button>\r\n        </>\r\n    ) \r\n}\r\n\r\nexport default withRouter(SearchComponent);","import React, { useState } from \"react\";\r\nimport { LinkElement, LoginRegisterContainer } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUser, UserProps } from \"../../APIRequests/User\";\r\nimport DefaultViewTabs from \"./DefaultViewTabs\";\r\nimport { availablePages } from \"../../App\";\r\nimport SearchComponent from \"../SearchComponent/SearchComponent\";\r\n\r\nconst DefaultViewLinks = (props) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n\r\n    const fetchUser = () => {\r\n        getUser(localStorage.getItem('blognellaId') || \"\")\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            if(!nick) {setNick(user.nick);}\r\n            if(!role) {setRole(user.role);}\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onLogout = () => {\r\n        localStorage.removeItem('blognellaId');\r\n    }\r\n\r\n    if(localStorage.getItem('blognellaId')) fetchUser();\r\n\r\n    return (\r\n        <>\r\n            <LoginRegisterContainer>\r\n                <LinkElement><SearchComponent/></LinkElement>\r\n                {availablePages.includes(props.pageName) && role === \"admin\" ? <LinkElement><Link to={\"/panel/posts\"}>Panel</Link></LinkElement> : <></>}\r\n                { nick ? <LinkElement onClick={onLogout} ><Link to={\"/\"}>Logout {nick}</Link></LinkElement> : \r\n                <LinkElement ><Link to={\"/login\"}>Login</Link></LinkElement> }\r\n                <LinkElement><Link to={\"/register\"}>Register</Link></LinkElement>\r\n            </LoginRegisterContainer>\r\n            <DefaultViewTabs/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultViewLinks;","import React from \"react\";\r\nimport { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\nimport DefaultViewLinks from \"./DefaultViewLinks\";\r\n// import { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\n\r\nconst DefaultView = (props) => {\r\n    return (\r\n        <>\r\n        <LogoContainer>\r\n            <Logo>Kiranella</Logo>\r\n            <LinksContainer>\r\n                    <div>\r\n                    {/* <LinkElement><Link color=\"white\" to={\"/login\"}>Login</Link></LinkElement>\r\n                    <LinkElement><Link to={\"/register\"}>Register</Link></LinkElement> */}\r\n                    </div>\r\n            </LinksContainer>\r\n        </LogoContainer>\r\n        <DefaultViewLinks {...props}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultView;","import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport interface PostProps {\r\n    _id?: string;\r\n    date: Date;\r\n    tags: string[];\r\n    title: string;\r\n    content: any;\r\n    user: string;\r\n}\r\n\r\nexport const getPosts = async () => {\r\n    try {\r\n      const posts = await axios.get(\r\n         '/posts'\r\n      )\r\n      return posts\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getPost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const post = await axios.get(\r\n        `/post/${_id}`\r\n      )\r\n      return post\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createPost = async (\r\n    post: PostProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const savedPost: AxiosResponse<ApiDataType> = await axios.post(\r\n        `/post`,\r\n        post\r\n      )\r\n      return savedPost\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updatePost = async (\r\n    post: PostProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedPost: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/post/${post._id}`,\r\n        post\r\n      )\r\n      return updatedPost;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deletePost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedPost = await axios.delete(\r\n        `/post/${_id}`\r\n      )\r\n      return deletedPost\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import React from \"react\";\r\n\r\nconst PostAboutComponent = (props) => {\r\n    const date = new Date(props.post.date).toDateString();\r\n\r\n    return (\r\n        props.post.date > new Date().toISOString() ? <div>It will be avaiable soon - {date}</div> : \r\n            <>\r\n            <div dangerouslySetInnerHTML={{ __html: props.post.content[0].text }} />\r\n            </>\r\n    )\r\n}\r\n\r\nexport default PostAboutComponent;","import React, { useState } from \"react\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostAboutComponent from \"../PostComponent/PostAboutComponent\";\r\nimport { AboutSection } from \"./DefaultView.styles\";\r\n\r\n\r\nconst DefaultViewAbout = () => {\r\n    const [aboutPost, setAboutPost] = useState([]);\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allAboutPosts = posts.filter((post) => post.content[0].title === \"About\");\r\n            setAboutPost(allAboutPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    if(aboutPost.length === 0) fetchAllPosts();\r\n\r\n    return (\r\n        <AboutSection>\r\n            {aboutPost.length > 0 ? <PostAboutComponent post={aboutPost[0]} /> : <div>There is no About post</div>}\r\n        </AboutSection>\r\n    )\r\n}\r\n\r\nexport default DefaultViewAbout;","import styled from 'styled-components'\r\n\r\nexport const MainViewContainer = styled.div`\r\n    /* display: flex; */\r\n    /* justify-content: space-between; */\r\n    margin: 0rem 1rem;\r\n    width:80%;\r\n`;","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { getUser, UserProps } from './APIRequests/User';\nimport { StyledMain } from './App.styles';\nimport AdminPanel from './components/AdminPanel/AdminPanel';\nimport DefaultView from './components/DefaultView/DefaultView'\nimport { MainContentContainer, StyledAdminPanelContainer } from './components/DefaultView/DefaultView.styles';\nimport DefaultViewAbout from './components/DefaultView/DefaultViewAbout';\n\nimport './components/globalStyles/globalStyles.css';\nimport { MainViewContainer } from './components/MainView/MainView.styles';\n\nexport const availablePages = [\"/register\", \"/login/forget\", \"/login\", \"/post/:id\", \"/search\", \"/\"]\n\nconst App: React.FC = (props:any) => {\n  const [role, setRole] = useState(\"\");\n\n  const fetchUser = () => {\n      const userId = localStorage.getItem('blognellaId') || \"\";\n      if(userId) {\n        getUser(userId)\n        .then(({ data: { user } }: UserProps | any) => {\n            if(role !== user.role) {setRole(user.role);}\n        })\n        .catch((err: Error) => console.log(err))\n      } else {\n        setRole(\"guest\");\n      }\n  }\n\n  useEffect(() => {\n    fetchUser()\n  }, [props])\n\n\n  if(props.match.path === \"/login\" &&  localStorage.getItem('blognellaId')) {props.history.push(\"/\")};\n  if(!availablePages.includes(props.match.path) && role !== \"admin\" && role) {props.history.push(\"/\")};\n\n  const Content = props.page;\n  return (\n    <StyledMain>\n      <DefaultView pageName={props.match.path}/>\n      <MainContentContainer>\n        <MainViewContainer>\n          <StyledAdminPanelContainer>\n\n          {role && \n            <>\n           {!availablePages.includes(props.match.path) ? <AdminPanel/> : <></>}\n           <div><Content/></div>\n           </>\n           }\n          </StyledAdminPanelContainer>\n        </MainViewContainer>\n        {availablePages.includes(props.match.path) ? <DefaultViewAbout/> : <></>}\n      </MainContentContainer>\n\n\n    </StyledMain>\n  )\n}\n\nexport default withRouter(App)\n","import styled from 'styled-components'\r\n\r\nexport const StyledLoginForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #8a8a8a;;\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n`;\r\n","import React, {useState} from \"react\";\r\nimport { FormItem, LogicControls, StyledLoginForm } from \"./LoginForm.styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getUsers, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst LoginForm = (props) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const onSubmit = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => {\r\n            const user = users.find((user) => user.login === login && user.password === password)\r\n            if(user) {\r\n                localStorage.setItem('blognellaId', user._id);\r\n                props.history.push('/');\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledLoginForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Password\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your password here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div>Zapomniales hasla? Kliknij <Link to={\"/login/forget\"}>Tutaj</Link></div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                    Login\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledLoginForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React from \"react\";\r\nimport LoginForm from \"../components/LoginForm/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n    return <LoginForm />\r\n}\r\n\r\nexport default LoginPage","import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport interface CommentProps {\r\n    _id?: string;\r\n    date: string;\r\n    text: string;\r\n    user: any;\r\n}\r\n\r\nexport const getComments = async () => {\r\n    try {\r\n      const comments = await axios.get(\r\n         '/comments'\r\n      )\r\n      return comments\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getComment = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const comment = await axios.get(\r\n        `/comment/${_id}`\r\n      )\r\n      return comment\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createComment = async (\r\n    comment: CommentProps\r\n  ) => {\r\n    try {\r\n      const savedComment = await axios.post(\r\n        `/comment`,\r\n        comment\r\n      )\r\n      return savedComment\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updateComment = async (\r\n    comment: CommentProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedComment: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/comment/${comment._id}`,\r\n        comment\r\n      )\r\n      return updatedComment;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteComment = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedComment = await axios.delete(\r\n        `/comment/${_id}`\r\n      )\r\n      return deletedComment\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport { deleteComment, updateComment } from \"../../APIRequests/Comment\";\r\n\r\nconst PostCommentComponent = (props) => {\r\n    const [isEditingMode, setIsEditingMode] = useState(false);\r\n    const [commentText, setCommentText] = useState(props.comment.text);\r\n\r\n    const canEdit = props.role !== \"guest\" && (props.comment.user === props.nick || props.role === \"admin\" )\r\n\r\n    const onEdit = () => {\r\n        setIsEditingMode(!isEditingMode);\r\n    }\r\n\r\n    const onDelete = () => {\r\n        props.updatePostToDeleteComment(props.comment._id);\r\n        deleteComment(props.comment._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Comment not deleted')\r\n            }\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    const onSaveEditedComment = () => {\r\n        setIsEditingMode(!isEditingMode);\r\n\r\n        const comment = {\r\n            _id: props.comment._id,\r\n            date: props.comment.date,\r\n            text: commentText,\r\n            user: props.comment.user\r\n        }\r\n        updateComment(comment)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n            throw new Error('Error! Comment not saved')\r\n            }\r\n        })\r\n        .catch((err) => console.log(err))\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {props.comment.user} {new Date(props.comment.date).toDateString()}\r\n                {canEdit ? <><span onClick={onEdit}>Edit</span><span onClick={onDelete}>Delete</span></> : <></>}\r\n            </div>\r\n            {/* <div>{props.comment.text}</div> */}\r\n            <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your comment here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    InputProps={{\r\n                        readOnly: !isEditingMode,\r\n                      }}\r\n                    defaultValue={commentText}\r\n                    onChange={(input) => setCommentText(input.target.value)}\r\n            />\r\n            {isEditingMode ? \r\n            <Button variant=\"contained\" color=\"primary\" onClick={onSaveEditedComment}>\r\n                Save Comment\r\n            </Button> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostCommentComponent;","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { createComment } from \"../../APIRequests/Comment\";\r\nimport { updatePost } from \"../../APIRequests/Post\";\r\nimport { getUser, UserProps } from \"../../APIRequests/User\";\r\nimport PostCommentComponent from \"./PostCommentComponent\";\r\n\r\nconst PostCommentList = (props) => {\r\n    const [nick, setNick] = useState(\"Guest\");\r\n    const [role, setRole] = useState(\"guest\");\r\n    // const [user, setUser] = useState();\r\n    const [newComment, setNewComment] = useState(\"\");\r\n\r\n    const fetchUser = (userId:string) => {\r\n        getUser(userId)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setNick(user.nick);\r\n            setRole(user.role);\r\n            // setUser(user);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('blognellaId');\r\n        if(userId) {\r\n            fetchUser(userId);\r\n        } else {\r\n            setNick(\"Guest\");\r\n            setRole(\"guest\");\r\n        }\r\n    }, [props])\r\n\r\n    const updatePostToEditComment = (commentId:string) => {\r\n        const updatedComments = props.post.comment.filter((comment) => comment !== commentId);\r\n        const post = {\r\n            date: props.post.date,\r\n            tags: props.post.tags,\r\n            title: props.post.title,\r\n            content: props.post.content[0]._id,\r\n            _id: props.post._id,\r\n            user: props.post.user,\r\n            comment: updatedComments\r\n        }\r\n        updatePost(post)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Post not saved')\r\n            }\r\n        })\r\n      .catch((err) => console.log(err))\r\n    }\r\n\r\n    const onNewCommentSave = () => {\r\n        const comment = {\r\n            text: newComment,\r\n            date: new Date().toISOString(),\r\n            user: nick\r\n        }\r\n\r\n        createComment(comment)\r\n        .then(({ status, data }) => {\r\n            if (status !== 201) {\r\n              throw new Error('Error! Comment not saved')\r\n            }\r\n            const post = {\r\n                date: props.post.date,\r\n                tags: props.post.tags,\r\n                title: props.post.title,\r\n                content: props.post.content[0]._id,\r\n                _id: props.post._id,\r\n                user: props.post.user,\r\n                comment: [...props.post.comment, data.comment._id]\r\n            }\r\n            updatePost(post)\r\n            .then(({ status}) => {\r\n                if (status !== 200) {\r\n                  throw new Error('Error! Post not saved')\r\n                }\r\n            })\r\n          })\r\n          .catch((err) => console.log(err))\r\n    }\r\n\r\n    const getComments = () => {\r\n        return props.post.comment.map((comment) => <PostCommentComponent key={comment._id} nick={nick} role={role} comment={comment} updatePostToDeleteComment={updatePostToEditComment}/>)  \r\n    }\r\n\r\n\r\n    return (\r\n    <>\r\n    {props.post.comment.length < 1 ? <div>No comments</div> : getComments()}\r\n\r\n    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Add Comment\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your comment here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={newComment}\r\n                    onChange={(input) => setNewComment(input.target.value)}\r\n    />\r\n    <Button variant=\"contained\" color=\"primary\" onClick={onNewCommentSave}>\r\n        Add Comment\r\n    </Button>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PostCommentList;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostLinkComponent = (props) => {\r\n    return <Link to={`/post/${props.post._id}`}>{props.post.title}</Link>\r\n}\r\n\r\nexport default PostLinkComponent;","import React from \"react\";\r\nimport PostCommentList from \"./PostCommentList\";\r\nimport PostLinkComponent from \"./PostLinkComponent\";\r\n// import DatePicker from 'react-date-picker';\r\n\r\nconst PostComponent = (props) => {\r\n    // const [value, onChange] = useState<any>(new Date());\r\n    // const date = new Date('2018-05-18T04:00:00Z').toLocaleString();\r\n    // const date = new Date(props.post.date).toUTCString();\r\n\r\n    // const customoldData = new Date('2021-01-19T21:41:19.169Z').toDateString()\r\n    // const customnewData = new Date('2021-02-19T21:41:19.169Z').toDateString()\r\n    // console.log(\"old\");\r\n    // console.log(customoldData);\r\n    // console.log(\"new\");\r\n    // console.log(customnewData);\r\n    // const actualDate = new Date().toDateString()\r\n\r\n    // console.log(customoldData > customnewData); //true\r\n    // console.log(customoldData > actualDate)\r\n\r\n\r\n    const date = new Date(props.post.date).toDateString();\r\n\r\n    const getTags = () => {\r\n        return props.post.tags.map((tag) => <span key={tag}>{tag}</span>)\r\n    }\r\n\r\n    const getPostChapters = () => {\r\n        return props.postChapters.map((postChapter) => <div key={postChapter._id}><PostLinkComponent post={postChapter}/></div>)\r\n    }\r\n\r\n    return (\r\n        props.post.date > new Date().toISOString() ? <div>It will be avaiable soon - {date}</div> : \r\n            <>\r\n            {/* <DatePicker\r\n            onChange={onChange}\r\n            value={value}\r\n            /> */}\r\n            <div>{date}</div>\r\n            <div>{props.post.title}</div>\r\n            <div dangerouslySetInnerHTML={{ __html: props.post.content[0].text }} />\r\n\r\n            <div>Chapters</div>\r\n            {getPostChapters()}\r\n\r\n            <div><span>Tags: </span>{getTags()}</div>\r\n            <div>Added by {props.post.user}</div>\r\n            <PostCommentList post={props.post}/>\r\n            </>\r\n        \r\n    )\r\n}\r\n\r\nexport default PostComponent;","import React, { useEffect, useState } from \"react\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostComponent from \"../PostComponent/PostComponent\";\r\n\r\nconst MainView = () => {\r\n    const [newestPost, setNewestPost] = useState();\r\n\r\n    const fetchNewestPost = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            const mainViewPost = allMainPosts.reduce((mainPost, nextPost) => {\r\n                if(JSON.stringify(mainPost) === JSON.stringify({})) return nextPost\r\n                return mainPost.date < nextPost.date ? nextPost : mainPost;\r\n            },{})\r\n            setNewestPost(mainViewPost);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchNewestPost()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {newestPost ? <PostComponent post={newestPost} postChapters={[]}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainView;","import React from \"react\";\r\nimport MainView from \"../components/MainView/MainView\";\r\n\r\nconst MainViewPage = () => {\r\n    return <MainView/>\r\n}\r\n\r\nexport default MainViewPage","import styled from 'styled-components'\r\n\r\nexport const StyledRegisterForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #8a8a8a;;\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n`;\r\n","import React, {useState} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { FormItem, LogicControls, StyledRegisterForm } from \"./RegisterForm.styles\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RegisterForm = () => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const onUserSave = () => {\r\n        console.log(nick);\r\n        console.log(login);\r\n        console.log(password);\r\n        console.log(email);\r\n        const user = {\r\n            nick:nick,\r\n            login:login,\r\n            password:password,\r\n            email:email,\r\n            role:\"loggedUser\"\r\n        }\r\n        createUser(user)\r\n        .then(({ status, data }) => {\r\n            console.log(\"zwrotna data\");\r\n            console.log(data);\r\n            if (status !== 201) {\r\n              throw new Error('Error! User not saved')\r\n            }\r\n            // setTodos(data.todos)\r\n          })\r\n          .catch((err) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <StyledRegisterForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your nickname here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setNick(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Password\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your password here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Email\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your email here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setEmail(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div>Have already account? \r\n                    <Link to={\"/login\"}>Login</Link>\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n                    Register\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledRegisterForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","import React from \"react\";\r\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n    return <RegisterForm/>\r\n}\r\n\r\nexport default RegisterPage","import axios from \"axios\"\r\n\r\nexport interface TagProps {\r\n    _id?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getTags = async () => {\r\n    try {\r\n      const tags = await axios.get(\r\n         '/tags'\r\n      )\r\n      return tags\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const createTag = async (\r\n    tag: TagProps\r\n  ) => {\r\n    try {\r\n      const saveTag = await axios.post(\r\n        '/tag',\r\n        tag\r\n      )\r\n      return saveTag\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteTag = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedTag = await axios.delete(\r\n        `/tag/${_id}`\r\n      )\r\n      return deletedTag\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { createTag, deleteTag, getTags, TagProps } from \"../../APIRequests/Tag\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst TagsPanel = () => {\r\n    const [tag, setTag] = useState(\"\");\r\n    const [allTags, setAllTags] = useState([]);\r\n\r\n    const fetchAllTags = () => {\r\n        getTags()\r\n        .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onTagSave = () => {\r\n        createTag({name: tag})\r\n        // .then(({ status, data }) => {\r\n        .then(({ status }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Tag not saved')\r\n                }\r\n                fetchAllTags();\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags()\r\n    }, [])\r\n\r\n      const onTagDelete = (tag:TagProps) => {\r\n        deleteTag(tag._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Tag not deleted')\r\n            }\r\n            fetchAllTags()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allTags.map((tag:TagProps) => \r\n          <ListItem key={tag.name}>\r\n          <ListItemText\r\n            primary={tag.name}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onTagDelete(tag)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n            <TextField\r\n            label=\"Tag\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your tag here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setTag(input.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onTagSave}>\r\n                    Add Tag\r\n            </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TagsPanel;","import React from \"react\";\r\nimport TagsPanel from \"../components/TagsPanel/TagsPanel\";\r\n\r\nconst PanelTagsPage = () => {\r\n    return <TagsPanel/>\r\n}\r\n\r\nexport default PanelTagsPage","import React, {useState, useEffect} from \"react\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst ChaptersList = (props) => {\r\n    const [mainPosts, setMainPosts] = useState<String[]>([]);\r\n    const [postTitle, setPostTitle] = useState(\"\");\r\n\r\n    const FilterAndSetMainPosts = (posts:PostProps[]) => {\r\n        const mainPosts = posts.filter((post:PostProps) => post.content[0].title === \"Main\");\r\n        const mainTitles = mainPosts.map((post) => post.title)\r\n        console.log(mainTitles);\r\n        setMainPosts(mainTitles);\r\n    }\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => FilterAndSetMainPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(postTitle === \"\" && props.storyTitle) {\r\n            setPostTitle(props.storyTitle)\r\n        }\r\n    }, [props.storyTitle])\r\n\r\n    const handlePostTitle = (event) => {\r\n        setPostTitle(event.target.value);\r\n        props.setPostTitle(event.target.value);\r\n    }\r\n\r\n    const getTitleList = () => {\r\n        return mainPosts.map((postTitle:any) => <MenuItem key={postTitle} value={postTitle}>{postTitle}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n            value={postTitle}\r\n            onChange={handlePostTitle}\r\n            >\r\n            {getTitleList()}\r\n            </Select>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChaptersList;","import axios, { AxiosResponse } from \"axios\";\r\n\r\ninterface ContentProps {\r\n    _id?: string;\r\n    text: string;\r\n    title: string;\r\n}\r\n\r\nexport const createContent = async (\r\n    content: ContentProps\r\n  ) => {\r\n    try {\r\n      const savedContent = await axios.post(\r\n        `/content`,\r\n        content\r\n      )\r\n      return savedContent\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updateContent = async (\r\n    content: ContentProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedContent: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/content/${content._id}`,\r\n        content\r\n      )\r\n      return updatedContent\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Select, useTheme } from '@material-ui/core';\r\nimport { createContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { createPost } from '../../APIRequests/Post';\r\nimport DatePicker from 'react-date-picker';\r\nimport { getUser, UserProps } from '../../APIRequests/User';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst PostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState('<p>React is really <em>nice</em>!</p>');\r\n    const [title, setTitle] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n    const [date, setDate] = useState<any>(new Date());\r\n    const [user, setUser] = useState(\"\");\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = () => {\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle\r\n        }\r\n        // const createdContent = createContent(content)\r\n        createContent(content)\r\n        .then(({ status, data }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Todo not saved')\r\n                }\r\n                setContentId(data.content._id);\r\n              })\r\n        // return createdContent;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(contentId){\r\n            onPostSave()\r\n            setContentId(undefined)\r\n        }\r\n    }, [contentId])\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const fetchUser = () => {\r\n      const userId = localStorage.getItem('blognellaId');\r\n      if(userId) {\r\n        getUser(userId)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setUser(user.nick);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n      }\r\n      \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n        fetchUser();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: date.toISOString(),\r\n            tags: tags,\r\n            title: title,\r\n            content: contentId,\r\n            user: user\r\n        }\r\n        createPost(post);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    return (\r\n        <>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Title\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your post title here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n          <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your nick here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={user}\r\n                    onChange={(input) => setUser(input.target.value)}\r\n         />\r\n\r\n        <div>date of publication</div>\r\n        <DatePicker\r\n            onChange={(val:any) => setDate(val)}\r\n            value={date}\r\n        />\r\n\r\n        <div>Add tags to post</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    Save Post\r\n         </Button>\r\n      </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default PostsPanel","import { MenuItem, Select } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport PostsPanel from \"../components/PostsPanel/PostsPanel\";\r\n\r\nconst PanelPostsAddingPage = () => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n\r\n    const handlePostType = (event) => {\r\n        setPostType(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postType}\r\n          onChange={handlePostType}\r\n        >\r\n          <MenuItem value=\"Main\">Main</MenuItem>\r\n          <MenuItem value=\"Chapter\">Chapter</MenuItem>\r\n          <MenuItem value=\"About\">About</MenuItem>\r\n        </Select>\r\n        <div></div>\r\n        {postType === \"Chapter\" ? <ChaptersList setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {postType === \"Main\" || postType === \"About\" || storyTitle ? <PostsPanel contentTitle={storyTitle || postType}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PanelPostsAddingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deletePost, getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst PostsPanelList = () => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => setAllPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n      const onPostDelete = (post:PostProps) => {\r\n        deletePost(post._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Post not deleted')\r\n            }\r\n            fetchAllPosts()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allPosts.map((post:PostProps) => \r\n          <ListItem key={post._id}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/posts/${post._id}`,\r\n                // search: `?id=${post._id}`,\r\n                state: { myId: post._id }\r\n                }}> {post.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onPostDelete(post)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n            <Link to={\"/panel/posts/add\"}>AddPost</Link>\r\n            {/* <Link to={{\r\n            pathname: '/template',\r\n            search: '?query=abc',\r\n            state: { detail: response.data }\r\n            }}> My Link </Link> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostsPanelList;","import React from \"react\";\r\nimport PostsPanelList from \"../components/PostsPanelList/PostsPanelList\";\r\n\r\nconst PanelPostsPage = () => {\r\n\r\n\r\n    return (\r\n        <PostsPanelList/>\r\n    )\r\n}\r\n\r\nexport default PanelPostsPage","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Select, useTheme } from '@material-ui/core';\r\nimport { updateContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { updatePost } from '../../APIRequests/Post';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst UpdatePostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState(props.post.content[0].text || \"\");\r\n    const [title, setTitle] = useState(props.post.title || \"\");\r\n    const [tags, setTags] = useState(props.post.tags || []);\r\n    // const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n    const [date, setDate] = useState<any>(new Date());\r\n    // const [date, setDate] = useState<any>(props.post.date);\r\n    const [user, setUser] = useState(props.post.user);\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = () => {\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle,\r\n            _id: props.post.content[0]._id\r\n        }\r\n        updateContent(content)\r\n        .then(({ status }) => {\r\n                if (status !== 200) {\r\n                  throw new Error('Error! Content not saved')\r\n                }\r\n                // setContentId(data.content._id);\r\n                onPostSave()\r\n              })\r\n    }\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: date.toISOString(),\r\n            tags: tags,\r\n            title: title,\r\n            content: props.post.content[0]._id,\r\n            _id: props.post._id,\r\n            user: user\r\n        }\r\n\r\n        updatePost(post)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Post not saved')\r\n            }\r\n          })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    return (\r\n        <>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Title\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your post title here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={title}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n        <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your nick here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={user}\r\n                    onChange={(input) => setUser(input.target.value)}\r\n        />\r\n\r\n        <div>date of publication</div>\r\n        <DatePicker\r\n            onChange={(val:any) => setDate(val)}\r\n            value={date}\r\n        />\r\n\r\n\r\n        <div>Add tags to post</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    Save Post\r\n         </Button>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default UpdatePostsPanel","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, PostProps } from \"../APIRequests/Post\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport UpdatePostsPanel from \"../components/PostsPanel/UpdatePostsPanel\";\r\n\r\nconst PanelPostsUpdatingPage = (props) => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n    const [editedPost, setEditedPost] = useState<PostProps>();\r\n\r\n    const fetchEditedPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            const postTitle = post.content[0].title;\r\n            const customPostType = postTitle === \"Main\" || postTitle === \"About\" ? postTitle : \"Chapter\";\r\n            setPostType(customPostType);\r\n            customPostType === \"Chapter\" && setStoryTitle(postTitle);\r\n            setEditedPost(post);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedPost()\r\n    }, [])\r\n\r\n    const contentTitle = postType === \"Main\" || postType === \"About\" ? postType : storyTitle;\r\n\r\n    return (\r\n        <>\r\n        <div>UPDATE PAGE</div>\r\n         {/* <Select\r\n          value={postType}\r\n          onChange={handlePostType}\r\n        >\r\n          <MenuItem value=\"Main\">Main</MenuItem>\r\n          <MenuItem value=\"Chapter\">Chapter</MenuItem>\r\n          <MenuItem value=\"About\">About</MenuItem>\r\n        </Select> */}\r\n        <div>{postType === \"Main\" ? \"STORY\" : postType === \"About\" ? \"ABOUT\" : \"CHAPTER\"}</div>\r\n        {postType === \"Chapter\" ? <ChaptersList storyTitle={storyTitle} setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {(postType === \"Main\" || postType === \"About\" || storyTitle) && editedPost ? \r\n        <UpdatePostsPanel contentTitle={contentTitle} post={editedPost}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PanelPostsUpdatingPage);\r\n// export default PanelPostsUpdatingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { BookmarkProps, deleteBookmark, getBookmarks } from \"../../APIRequests/Bookmark\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BookmarksPanel = () => {\r\n    const [allBookmarks, setAllBookmarks] = useState([]);\r\n\r\n    const fetchAllBookmarks = () => {\r\n        getBookmarks()\r\n        .then(({ data: { bookmarks } }: BookmarkProps[] | any) => setAllBookmarks(bookmarks))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllBookmarks()\r\n    }, [])\r\n\r\n      const onBookmarkDelete = (bookmark:BookmarkProps) => {\r\n        deleteBookmark(bookmark._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Bookmark not deleted')\r\n            }\r\n            fetchAllBookmarks()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allBookmarks.map((bookmark:BookmarkProps) => \r\n          <ListItem key={bookmark.title}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/bookmarks/${bookmark._id}`,\r\n                state: { myId: bookmark._id }\r\n            }}> {bookmark.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onBookmarkDelete(bookmark)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n\r\n            <Link to={\"/panel/bookmarks/add\"}>Add Bookmark</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookmarksPanel;","import React from \"react\";\r\nimport BookmarksPanel from \"../components/BookmarkPanel/BookmarksPanel\";\r\n\r\nconst PanelBookmarksPage = () => {\r\n    return <BookmarksPanel/>\r\n}\r\n\r\nexport default PanelBookmarksPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { createBookmark } from \"../../APIRequests/Bookmark\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst BookmarkPanelAdd = () => {\r\n    const [postId, setPostId] = useState(\"\");\r\n    const [allPosts, setAllPosts] = useState<PostProps[]>([]);\r\n    const [bookmarkTitle, setBookmarkTitle] = useState(\"\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n    const handlePostId = (event) => {\r\n        setPostId(event.target.value);\r\n    };\r\n\r\n    const onBookmarkSave = () => {\r\n        const bookmark = {\r\n            title: bookmarkTitle,\r\n            post: postId,\r\n        }\r\n        createBookmark(bookmark);\r\n    }\r\n\r\n    const getPostsTitles = () => {\r\n        return allPosts.map((post) => <MenuItem key={post._id} value={post._id}>{post.title}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postId}\r\n          onChange={handlePostId}\r\n        >\r\n            {getPostsTitles()}\r\n        </Select>\r\n        <div></div>\r\n        <TextField\r\n            label=\"Bookmark title\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your bookmark title here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setBookmarkTitle(input.target.value)}\r\n            />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onBookmarkSave}>\r\n            Save Bookmark\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookmarkPanelAdd;","import React from \"react\";\r\nimport BookmarkPanelAdd from \"../components/BookmarkPanel/BookmarkPanelAdd\";\r\n\r\nconst PanelBookmarkAddingPage = () => {\r\n   return <BookmarkPanelAdd/>\r\n}\r\n\r\nexport default PanelBookmarkAddingPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { updateBookmark } from \"../../APIRequests/Bookmark\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst BookmarkPanelUpdate = (props) => {\r\n    const [postId, setPostId] = useState(props.bookmark.post[0]._id || \"\");\r\n    const [allPosts, setAllPosts] = useState<PostProps[]>([]);\r\n    const [bookmarkTitle, setBookmarkTitle] = useState(props.bookmark.title || \"\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n    const handlePostId = (event) => {\r\n        setPostId(event.target.value);\r\n    };\r\n\r\n    const onBookmarkSave = () => {\r\n        const bookmark = {\r\n            _id: props.bookmark._id,\r\n            title: bookmarkTitle,\r\n            post: postId,\r\n        }\r\n        updateBookmark(bookmark)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Bookmark not saved')\r\n            }\r\n          })\r\n    }\r\n\r\n    const getPostsTitles = () => {\r\n        return allPosts.map((post) => <MenuItem  key={post._id} value={post._id}>{post.title}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postId}\r\n          onChange={handlePostId}\r\n        >\r\n            {getPostsTitles()}\r\n        </Select>\r\n        <div></div>\r\n        <TextField\r\n            label=\"Bookmark title\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your bookmark title here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={bookmarkTitle}\r\n            onChange={(input) => setBookmarkTitle(input.target.value)}\r\n            />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onBookmarkSave}>\r\n            Save Bookmark\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookmarkPanelUpdate;","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BookmarkProps, getBookmark } from \"../APIRequests/Bookmark\";\r\nimport BookmarkPanelUpdate from \"../components/BookmarkPanel/BookmarkPanelUpdate\";\r\n\r\nconst PanelBookmarkUpdatingPage = (props) => {\r\n    const [editedBookmark, setEditedBookmark] = useState<BookmarkProps>();\r\n\r\n    const fetchEditedBookmark = () => {\r\n        getBookmark(props.match.params.id)\r\n        .then(({ data: { bookmark } }: BookmarkProps | any) => {\r\n            setEditedBookmark(bookmark);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedBookmark()\r\n    }, [])\r\n\r\n    return editedBookmark ? <BookmarkPanelUpdate bookmark={editedBookmark}/> : <></>;\r\n}\r\n\r\nexport default withRouter(PanelBookmarkUpdatingPage);","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteUser, getUsers, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst UsersPanel = () => {\r\n    const [allUsers, setAllUsers] = useState([]);\r\n\r\n    const fetchAllUsers = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => setAllUsers(users))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllUsers()\r\n    }, [])\r\n\r\n      const onUserDelete = (user:UserProps) => {\r\n        deleteUser(user._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! User not deleted')\r\n            }\r\n            fetchAllUsers()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allUsers.map((user:UserProps) => \r\n          <ListItem key={user.nick}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/users/${user._id}`,\r\n                state: { myId: user._id }\r\n            }}> {user.nick} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onUserDelete(user)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n\r\n            <Link to={\"/panel/users/add\"}>Add User</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersPanel;","import React from \"react\";\r\nimport UsersPanel from \"../components/UsersPanel/UsersPanel\";\r\n\r\nconst PanelUsersPage = () => {\r\n\r\n\r\n    return (\r\n        <UsersPanel/>\r\n    )\r\n}\r\n\r\nexport default PanelUsersPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\n\r\nconst allUsersRoles = [\"loggedUser\", \"admin\"];\r\n\r\nconst UserPanelAdd = () => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const handleUserRole = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n\r\n    const onUserSave = () => {\r\n        const user = {\r\n            nick: nick,\r\n            login: login,\r\n            password: password,\r\n            role: role,\r\n            email: email,\r\n        }\r\n        createUser(user);\r\n    }\r\n\r\n    const getUsersRoles = () => {\r\n        return allUsersRoles.map((role) => <MenuItem key={role} value={role}>{role}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <TextField\r\n            label=\"Nick\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your nick here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setNick(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Login\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your login here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setLogin(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Password\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your password here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setPassword(input.target.value)}\r\n        />\r\n        <Select\r\n          value={role}\r\n          onChange={handleUserRole}\r\n        >\r\n            {getUsersRoles()}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <TextField\r\n            label=\"Email\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your email here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setEmail(input.target.value)}\r\n        />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n            Save User\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserPanelAdd;","import React from \"react\";\r\nimport UserPanelAdd from \"../components/UsersPanel/UserPanelAdd\";\r\n\r\nconst PanelUsersAddingPage = () => {\r\n   return <UserPanelAdd/>\r\n}\r\n\r\nexport default PanelUsersAddingPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { updateUser } from \"../../APIRequests/User\";\r\n\r\nconst allUsersRoles = [\"loggedUser\", \"admin\"];\r\n\r\nconst UserPanelUpdate = (props) => {\r\n    const [nick, setNick] = useState(props.user.nick);\r\n    const [login, setLogin] = useState(props.user.login);\r\n    const [password, setPassword] = useState(props.user.password);\r\n    const [role, setRole] = useState(props.user.role);\r\n    const [email, setEmail] = useState(props.user.email);\r\n\r\n    const handleUserRole = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n\r\n    const onUserSave = () => {\r\n        const user = {\r\n            _id: props.user._id,\r\n            nick: nick,\r\n            login: login,\r\n            password: password,\r\n            role: role,\r\n            email: email,\r\n        }\r\n        updateUser(user);\r\n    }\r\n\r\n    const getUsersRoles = () => {\r\n        return allUsersRoles.map((role) => <MenuItem key={role} value={role}>{role}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <TextField\r\n            label=\"Nick\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your nick here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={nick}\r\n            onChange={(input) => setNick(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Login\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your login here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={login}\r\n            onChange={(input) => setLogin(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Password\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your password here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={password}\r\n            onChange={(input) => setPassword(input.target.value)}\r\n        />\r\n        <Select\r\n          value={role}\r\n          onChange={handleUserRole}\r\n        >\r\n            {getUsersRoles()}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <TextField\r\n            label=\"Email\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your email here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={email}\r\n            onChange={(input) => setEmail(input.target.value)}\r\n        />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n            Save User\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserPanelUpdate;","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUser, UserProps } from \"../APIRequests/User\";\r\nimport UserPanelUpdate from \"../components/UsersPanel/UserPanelUpdate\";\r\n\r\nconst PanelUsersUpdatingPage = (props) => {\r\n    const [editedUser, setEditedUser] = useState<UserProps>();\r\n\r\n    const fetchEditedUser = () => {\r\n        getUser(props.match.params.id)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setEditedUser(user);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedUser()\r\n    }, [])\r\n\r\n    return editedUser ? <UserPanelUpdate user={editedUser}/> : <></>;\r\n}\r\n\r\nexport default withRouter(PanelUsersUpdatingPage);","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostComponent from \"../PostComponent/PostComponent\";\r\n\r\nconst PostView = (props) => {\r\n    const [post, setPost] = useState();\r\n    const [postChapters, setPostChapters] = useState([]);\r\n\r\n    const fetchPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            setPost(post);\r\n            fetchAllPosts(post.title)\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const fetchAllPosts = (storyTitle:string) => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allPostChapters = posts.filter((post) => post.content[0].title === storyTitle);\r\n            setPostChapters(allPostChapters || []);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n    }, [props])\r\n\r\n    return (\r\n        <>\r\n        {post ? <PostComponent post={post} postChapters={postChapters} /> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostView);","import React from \"react\";\r\nimport PostView from \"../components/PostView/PostView\";\r\n\r\nconst PostPage = () => {\r\n    return <PostView />\r\n}\r\n\r\nexport default PostPage","import React, {useState} from \"react\";\r\nimport { FormItem, LogicControls, StyledLoginForm } from \"./LoginForm.styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUsers, updateUser, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst LoginForgetForm = (props) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const updateUserPassword = (user) => {\r\n        const updatedSser = {\r\n            _id: user._id,\r\n            nick: user.nick,\r\n            login: user.login,\r\n            password: password,\r\n            role: user.role,\r\n            email: user.email,\r\n        }\r\n        updateUser(updatedSser);\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => {\r\n            const user = users.find((user) => user.login === login && user.email === email)\r\n            if(user) {\r\n                updateUserPassword(user)\r\n                localStorage.setItem('blognellaId', user._id);\r\n                props.history.push('/');\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledLoginForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Email\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your email here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setEmail(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"New Password\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your new password here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div></div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                    Update Password\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledLoginForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForgetForm);","import React from \"react\";\r\nimport LoginForgetForm from \"../components/LoginForm/LoginForgetForm\";\r\n\r\nconst LoginForgetPage = () => {\r\n    return <LoginForgetForm />\r\n}\r\n\r\nexport default LoginForgetPage","import { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst SearchList = (props) => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.title === props.search || post.tags.includes(props.search));\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [props.search])\r\n\r\n    const getListItems = () => {\r\n        return allPosts.map((post:PostProps) => \r\n        <ListItem key={post._id}>\r\n        <ListItemText\r\n           primary={ <Link to={{\r\n            pathname: `/post/${post._id}`,\r\n            }}> {post.title} </Link> }\r\n        />\r\n      </ListItem>\r\n      );\r\n    }\r\n\r\n    return (\r\n        allPosts.length === 0 ? <div>There is no post that meets the expected criteria</div> :\r\n        <List>\r\n            {getListItems()}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default SearchList;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SearchList from \"../components/SearchComponent/SearchList\";\r\n\r\nconst SearchPage = (props) => {\r\n    return <SearchList search={props.location.state.search}/>\r\n}\r\n\r\nexport default withRouter(SearchPage);","// @ts-nocheck\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n// import App from \"./App\";\r\nimport LoginPage from \"./pages/loginPage\";\r\nimport MainViewPage from \"./pages/mainViewPage\";\r\n\r\nimport RegisterPage from \"./pages/registerPage\";\r\nimport PanelTagsPage from \"./pages/panelTagsPage\";\r\nimport PanelPostsAddingPage from \"./pages/panelPostsAddingPage\";\r\nimport PanelPostsPage from \"./pages/panelPostsPage\";\r\nimport PanelPostsUpdatingPage from \"./pages/panelPostsUpdatingPage\";\r\nimport PanelBookmarksPage from \"./pages/panelBookmarkPage\";\r\nimport PanelBookmarkAddingPage from \"./pages/panelBookmarkAddingPage\";\r\nimport PanelBookmarkUpdatingPage from \"./pages/panelBookmarkUpdatingPage\";\r\nimport PanelUsersPage from \"./pages/panelUsersPage\";\r\nimport PanelUsersAddingPage from \"./pages/panelUsersAddingPage\";\r\nimport PanelUsersUpdatingPage from \"./pages/panelUsersUpdatingPage\";\r\nimport PostPage from \"./pages/postPage\";\r\nimport LoginForgetPage from \"./pages/loginForgetPage\";\r\nimport SearchPage from \"./pages/searchPage\";\r\n\r\n// export default <Router history={hashHistory}>\r\n//   <Route path=\"/\" component={App}>\r\n//     <IndexRoute component={AppSplash}/>\r\n//     <Route path=\"demo\" component={AppDemo}/>\r\n//   </Route>\r\n// </Router>\r\n\r\nexport default function BasicExample() {\r\n    return (\r\n      <Router>\r\n          <Switch>\r\n             <Route exact path=\"/\"> <App page={MainViewPage} /> </Route>\r\n             {/* <Route\r\n              exact path='/'\r\n              render={(props) => (\r\n                <App page={MainViewPage} />\r\n              )}\r\n            /> */}\r\n\r\n             <Route path=\"/register\"><App page={RegisterPage} /></Route>\r\n             <Route path=\"/login/forget\"><App page={LoginForgetPage}/></Route>\r\n             <Route path=\"/login\"><App page={LoginPage}/></Route>\r\n             <Route path=\"/search\"><App page={SearchPage}/></Route>\r\n             <Route path=\"/post/:id\"><App page={PostPage}/></Route>\r\n             <Route path=\"/panel/tags\"><App page={PanelTagsPage}/></Route>\r\n             <Route path=\"/panel/posts/add\"><App page={PanelPostsAddingPage}/></Route>\r\n             <Route path=\"/panel/posts/:id\"><App page={PanelPostsUpdatingPage}/></Route>\r\n             <Route path=\"/panel/posts\"><App page={PanelPostsPage}/></Route>\r\n             <Route path=\"/panel/bookmarks/add\"><App page={PanelBookmarkAddingPage}/></Route>\r\n             <Route path=\"/panel/bookmarks/:id\"><App page={PanelBookmarkUpdatingPage}/></Route>\r\n             <Route path=\"/panel/bookmarks\"><App page={PanelBookmarksPage}/></Route>\r\n             <Route path=\"/panel/users/add\"><App page={PanelUsersAddingPage}/></Route>\r\n             <Route path=\"/panel/users/:id\"><App page={PanelUsersUpdatingPage}/></Route>\r\n             <Route path=\"/panel/users\"><App page={PanelUsersPage}/></Route>\r\n           </Switch>\r\n      </Router>\r\n    );\r\n  }","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import App from './App'\nimport './index.css'\nimport App from './router';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)"],"sourceRoot":""}