{"version":3,"sources":["APIRequests/Layout.tsx","APIRequests/User.tsx","App.styles.tsx","components/AdminPanel/AdminPanel.styles.tsx","components/AdminPanel/AdminPanel.tsx","components/DefaultView/DefaultView.styles.tsx","APIRequests/Bookmark.tsx","components/DefaultView/DefaultViewTabs.tsx","components/SearchComponent/SearchComponent.styles.tsx","components/SearchComponent/SearchComponent.tsx","components/DefaultView/DefaultViewLinks.tsx","components/DefaultView/DefaultView.tsx","APIRequests/Post.tsx","components/PostComponent/PostAboutComponent.tsx","components/DefaultView/DefaultViewAbout.tsx","components/MainView/MainView.styles.tsx","App.tsx","components/LoginForm/LoginForm.styles.tsx","components/validators/validation.tsx","components/validators/validatorMsg.tsx","components/fieldValidators/userLoginValidator.tsx","components/fieldValidators/userPasswordValidator.tsx","components/fieldValidators/fieldValidators.styles.tsx","components/LoginForm/LoginForm.tsx","pages/loginPage.tsx","APIRequests/Comment.tsx","components/validators/commentValidator.tsx","components/PostComponent/PostComment.styles.tsx","components/PostComponent/PostCommentComponent.tsx","components/PostComponent/PostCommentList.tsx","components/PostComponent/PostLinkComponent.tsx","components/PostComponent/PostComponent.styles.tsx","components/PostComponent/PostComponent.tsx","components/MainView/MainView.tsx","pages/mainViewPage.tsx","components/RegisterForm/RegisterForm.styles.tsx","components/validators/userValidator.tsx","components/fieldValidators/userNickValidator.tsx","components/fieldValidators/userEmailValidator.tsx","components/RegisterForm/RegisterForm.tsx","pages/registerPage.tsx","APIRequests/Tag.tsx","components/TagsPanel/TagsPanel.styled.tsx","components/validators/tagValidator.tsx","components/fieldValidators/tagNameValidator.tsx","components/TagsPanel/TagsPanel.tsx","pages/panelTagsPage.tsx","components/LayoutsPanel/LayoutsPanel.styled.tsx","components/LayoutsPanel/LayoutPanel.data.ts","components/LayoutsPanel/LayoutsPanel.tsx","pages/PanelLayoutsPage.tsx","components/ChaptersList/ChaptersList.tsx","APIRequests/Content.tsx","components/PostsPanel/PostsPanel.styles.tsx","components/validators/postValidator.tsx","components/fieldValidators/postTitleValidator.tsx","components/fieldValidators/postUserValidator.tsx","components/PostsPanel/PostsPanel.tsx","pages/panelPostsAddingPage.tsx","components/PostsPanelList/PostsPanelList.tsx","pages/panelPostsPage.tsx","components/PostsPanel/UpdatePostsPanel.tsx","pages/panelPostsUpdatingPage.tsx","components/BookmarkPanel/BookmarksPanel.tsx","pages/panelBookmarkPage.tsx","components/fieldValidators/bookmarkTitleValidator.tsx","components/validators/bookmarkValidator.tsx","components/BookmarkPanel/BookmarkPanel.Styles.tsx","components/BookmarkPanel/BookmarkPanelAdd.tsx","pages/panelBookmarkAddingPage.tsx","components/BookmarkPanel/BookmarkPanelUpdate.tsx","pages/panelBookmarkUpdatingPage.tsx","components/UsersPanel/UsersPanel.tsx","pages/panelUsersPage.tsx","components/UsersPanel/UserPanel.styles.tsx","components/UsersPanel/UserPanelAdd.tsx","pages/panelUsersAddingPage.tsx","components/UsersPanel/UserPanelUpdate.tsx","pages/panelUsersUpdatingPage.tsx","components/PostView/PostView.tsx","pages/postPage.tsx","components/LoginForm/LoginForgetForm.tsx","pages/loginForgetPage.tsx","components/SearchComponent/SearchList.tsx","pages/searchPage.tsx","router.tsx","index.tsx"],"names":["getLayouts","a","axios","get","layouts","Error","updateLayout","layout","put","_id","updatedLayout","response","status","data","keyValue","getUsers","users","getUser","user","createUser","post","savedUser","errors","updateUser","updatedUser","deleteUser","delete","deletedUser","StyledMain","styled","main","props","inputColor","StyledPanelContent","div","width","iconColor","theme","root","default","white","purple","red","page","bookmarks","text","decoratedText","comments","inputText","StyledAdminPanel","StyledAdminPanelItem","StyledText","span","CenteredSpan","AdminPanel","lang","localStorage","getItem","to","Logo","LogoContainer","LinksContainer","LinkElement","LinkLoginElement","SearchElement","LoginRegisterContainer","MainViewTabsContainer","MainViewTabsContainerWrapper","AboutSection","color","MainContentContainer","StyledAdminPanelContainer","decoratedColor","getBookmarks","getBookmark","bookmark","createBookmark","savedBookmark","updateBookmark","updatedBookmark","deleteBookmark","deletedBookmark","DefaultViewTabs","useState","allBookmarks","setAllBookmarks","length","then","catch","err","console","log","style","backgroundColor","map","key","title","StyledSearch","withRouter","searchValue","setSearchValue","TextField","id","label","margin","placeholder","fullWidth","InputLabelProps","shrink","onChange","input","target","value","Button","variant","onClick","history","push","pathname","state","search","nick","setNick","role","setRole","availablePages","includes","pageName","removeItem","match","path","window","location","reload","fontWeight","setItem","DefaultView","getPosts","posts","getPost","createPost","savedPost","updatePost","updatedPost","deletePost","deletedPost","PostAboutComponent","date","Date","toDateString","toISOString","overflow","dangerouslySetInnerHTML","__html","content","DefaultViewAbout","aboutPost","setAboutPost","useEffect","allAboutPosts","filter","MainViewContainer","minWidth","isAbout","mainWidth","Number","userId","fetchUser","rootComponent","document","getElementById","minHeight","name","Content","StyledLoginForm","FormItem","LogicControls","validateOrRejectExample","validateOrReject","getPolishEntity","entity","getValidationMsg","englishConstraintMsg","constraint","getFirstWord","string","replace","getAllValidationMsg","validation","language","Object","keys","con","getValidatorMsg","messages","message","getUniqueValidatorMsg","field","UserValidator","IsAlphanumeric","IsNotEmpty","IsString","NotContains","MinLength","this","login","userLoginValidate","allValidationMsg","constraints","password","userPasswordValidate","StyledErrorMessage","setLogin","setPassword","anchorEl","setAnchorEl","errorMsg","setErrorMsg","setErrors","touched","setTouched","onInput","trim","onBlur","type","event","persist","find","Popover","Boolean","undefined","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","LoginPage","createComment","comment","savedComment","updateComment","updatedComment","deleteComment","deletedComment","CommentValidator","IsDateString","commentValidate","StyledComponentTextField","StyledCommentAuthor","StyledCommentButton","isEditingMode","setIsEditingMode","commentText","setCommentText","canEdit","updatePostToDeleteComment","InputProps","readOnly","defaultValue","padding","borderBottom","wordBreak","PostCommentList","newComment","setNewComment","updatePostToEditComment","commentId","updatedComments","tags","PostLinkComponent","StyledDate","StyledTitle","StyledChaptersContainer","StyledChapters","StyledTagsLabel","StyledTags","StyledAuthorContainer","StyledAuthor","StyledBottomPageContainer","PostComponent","toLocaleDateString","weekday","year","month","day","postChapters","postChapter","tag","marginRight","MainView","newestPost","setNewestPost","mainViewPost","reduce","mainPost","nextPost","JSON","stringify","customNewPost","shouldShowPost","MainViewPage","USER_ROLES","StyledRegisterForm","IsEnum","IsEmail","email","userValidate","userNickValidate","userEmailValidate","setEmail","RegisterPage","getTags","createTag","saveTag","deleteTag","deletedTag","StyledTagsPanel","TagValidator","tagValidate","tagNameValidate","setTag","allTags","setAllTags","fetchAllTags","List","ListItem","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","onTagDelete","PanelTagsPage","StyledLayoutsPanel","textColor","StyledLayoutColorsContainer","StyledCenterText","allLayoutNames","plName","colors","allLayouts","chosenLayout","setChosenLayout","marks","Math","round","cursor","border","borderRadius","layoutName","height","Slider","aria-labelledby","step","valueLabelDisplay","min","max","newValue","PanelLayoutsPage","ChaptersList","mainPosts","setMainPosts","postTitle","setPostTitle","fetchAllPosts","mainTitles","FilterAndSetMainPosts","storyTitle","StyledSelect","Select","MenuItem","createContent","savedContent","updateContent","updatedContent","deleteContent","deletedContent","StyledPanel","PostValidator","IsArray","postValidate","postTitleValidate","postUserValidate","useStyles","makeStyles","chips","display","flexWrap","chip","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","getStyles","personName","indexOf","typography","fontWeightRegular","fontWeightMedium","classes","useTheme","setData","setTitle","setTags","contentId","setContentId","setDate","setUser","onPostSave","theme2","initialValue","init","plugins","toolbar","e","getContent","handleEditorChange","val","labelId","multiple","Input","renderValue","selected","className","Chip","contentTitle","PanelPostsAddingPage","postType","setPostType","setStoryTitle","allPosts","setAllPosts","myId","onPostDelete","PanelPostsPage","editedPost","setEditedPost","params","customPostType","fetchAllBookmarks","onBookmarkDelete","PanelBookmarksPage","BookmarkValidator","bookmarkTitleValidate","bookmarkValidate","postId","setPostId","bookmarkTitle","setBookmarkTitle","allMainPosts","PanelBookmarkAddingPage","editedBookmark","setEditedBookmark","allUsers","setAllUsers","actualAdminNick","setActualAdminNick","fetchAllUsers","blognellaUser","actualAdmin","getBlognellaUser","onUserDelete","PanelUsersPage","allUsersRoles","PanelUsersAddingPage","editedUser","setEditedUser","setPost","setPostChapters","allPostChapters","PostPage","updatedSser","updateUserPassword","LoginForgetPage","SearchList","BasicExample","exact","SearchPage","PanelPostsUpdatingPage","PanelBookmarkUpdatingPage","PanelUsersUpdatingPage","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3a045c95.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport interface LayoutProps {\r\n    _id?: string;\r\n    name: string;\r\n    mainWidth: number;\r\n}\r\n\r\nexport const getLayouts = async () => {\r\n    try {\r\n      const layouts = await axios.get(\r\n         '/layouts'\r\n      )\r\n      return layouts\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const createLayout = async (\r\n    layout: LayoutProps\r\n  ) => {\r\n    try {\r\n      const saveLayout = await axios.post(\r\n        '/layout',\r\n        layout\r\n      )\r\n      return saveLayout\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.errors, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const updateLayout = async (\r\n    layout: LayoutProps\r\n  ) => {\r\n    try {\r\n      const updatedLayout = await axios.put(\r\n        `/layout/${layout._id}`,\r\n        layout\r\n      )\r\n      return updatedLayout;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.keyValue, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const deleteLayout = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedLayout = await axios.delete(\r\n        `/layout/${_id}`\r\n      )\r\n      return deletedLayout\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import axios from \"axios\";\r\n\r\nexport interface UserProps {\r\n    _id?: string;\r\n    nick: string;\r\n    login: string;\r\n    password: string;\r\n    email: string;\r\n    role?: string;\r\n}\r\n\r\nexport const getUsers = async () => {\r\n    try {\r\n      const users = await axios.get(\r\n         '/users'\r\n      )\r\n      return users\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getUser = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const user = await axios.get(\r\n        `/user/${_id}`\r\n      )\r\n      return user\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createUser = async (\r\n    user: UserProps\r\n  ) => {\r\n    try {\r\n      const savedUser = await axios.post(\r\n        `/user`,\r\n        user\r\n      )\r\n      return savedUser\r\n    } catch (error) {\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.errors, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const updateUser = async (\r\n    user: UserProps\r\n  ) => {\r\n    try {\r\n      const updatedUser = await axios.put(\r\n        `/user/${user._id}`,\r\n        user\r\n      )\r\n      return updatedUser;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.keyValue, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const deleteUser = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedUser = await axios.delete(\r\n        `/user/${_id}`\r\n      )\r\n      return deletedUser;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import styled from 'styled-components'\r\n\r\nexport const StyledMain = styled.main<{inputColor: string}>`\r\n    max-width: 930px;\r\n    margin: 0rem auto 0rem auto;\r\n    .MuiInputBase-input {\r\n        color: ${props => props.inputColor};\r\n    }\r\n    /* background-color: #333333; */\r\n`\r\n\r\nexport const StyledPanelContent = styled.div<{width: string, iconColor: string}>`\r\n    /* width: 100%; */\r\n    width: ${props => props.width};\r\n    .MuiSvgIcon-root {\r\n        color: ${props => props.iconColor}\r\n    }\r\n    a{\r\n        text-decoration: underline !important;\r\n    }\r\n    .MuiFormControl-root label{\r\n        color: ${props => props.iconColor};\r\n    }\r\n`;\r\n\r\nexport const theme = {\r\n    root: {\r\n        default: \"#292929\",\r\n        white: \"#f9f9f9\",\r\n        purple: \"#3d1340\",\r\n        red: \"#580000\",\r\n    },\r\n    page: {\r\n        default: \"#333333\",\r\n        white: \"white\",\r\n        purple: \"#602a67\",\r\n        red: \"#7d0000\",\r\n    },\r\n    bookmarks: {\r\n        default: \"#222222\",\r\n        white: \"#e2c1d7\",\r\n        purple: \"#431a52\",\r\n        red: \"#320000\",\r\n    },\r\n    text: {\r\n        default: \"white\",\r\n        white: \"black\",\r\n        purple: \"white\",\r\n        red: \"white\",\r\n    },\r\n    decoratedText: {\r\n        default: \"#00cccb\",\r\n        white: \"#75176a\",\r\n        purple: \"#ffeb00\",\r\n        red: \"#d0de59\",\r\n    },\r\n    comments: {\r\n        default: \"#303030\",\r\n        white: \"#be64ab\",\r\n        purple: \"#7d4085\",\r\n        // purple: \"#fce8fd\",\r\n        red: \"#610505\",\r\n        // red: \"#cddb56\",\r\n    },\r\n    inputText: {\r\n        default: \" #dfdfdf\",\r\n        white: \"black\",\r\n        purple: \"white\",\r\n        red: \"white\"\r\n    }\r\n}","import styled from 'styled-components'\r\n\r\nexport const StyledAdminPanel = styled.div`\r\n  border-right: 1px solid black;\r\n  margin-right: 1rem;\r\n  height: 100%;\r\n`;\r\n\r\nexport const StyledAdminPanelItem = styled.div`\r\n    padding-top: 1.8rem;\r\n    padding-right: 0.5rem;\r\n`;\r\n\r\nexport const StyledText = styled.span`\r\n    border-bottom: 1px solid black;\r\n`;\r\n\r\nexport const CenteredSpan = styled.span`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CenteredSpan, StyledAdminPanel, StyledAdminPanelItem, StyledText } from \"./AdminPanel.styles\";\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\n\r\nconst AdminPanel = () => {\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    return (\r\n        <StyledAdminPanel>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/posts\"}><CenteredSpan><NotesIcon/>{lang === \"en\" ? \"POSTS\" : \"WPISY\"}</CenteredSpan></Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/bookmarks\"}><CenteredSpan><BookmarksIcon/>{lang === \"en\" ? \"BOOKMARKS\" : \"ZAKŁADKI\"}</CenteredSpan></Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/users\"}><CenteredSpan><PersonIcon/>{lang === \"en\" ? \"USERS\" : \"UŻYTKOWNICY\"}</CenteredSpan></Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/tags\"}><CenteredSpan><LocalOfferIcon/>{lang === \"en\" ? \"TAGS\" : \"ETYKIETY\"}</CenteredSpan></Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/layouts\"}><CenteredSpan><ColorLensIcon/>{lang === \"en\" ? \"LAYOUTS\" : \"WYGLĄD STRONY\"}</CenteredSpan></Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n        </StyledAdminPanel>\r\n    )\r\n}\r\n\r\nexport default AdminPanel;","import styled from 'styled-components'\r\n\r\nexport const Logo = styled.div`\r\n    font-family: Roboto;\r\n    font-size: 3.5rem;\r\n    padding: 22px 30px;\r\n`;\r\n\r\nexport const LogoContainer = styled.div`\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n    /* background: #333333; */\r\n`;\r\n\r\nexport const LinksContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const LinkElement = styled.div`\r\n    color: #ffffff;\r\n    padding: 1rem;\r\n    float: left;\r\n    padding-bottom: 0.5rem;\r\n    padding-top: 0.5rem;\r\n    border-left: 1px solid #404040;\r\n    border-right: 0 solid #404040;\r\n\r\n    a{\r\n        text-decoration: underline;\r\n    }\r\n\r\n    &:hover{\r\n        color: #ffffff;\r\n        background-color: #000000;\r\n        text-decoration: none;\r\n    }\r\n\r\n    &>a:hover{\r\n        color: #ffffff;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport const LinkLoginElement = styled.div`\r\n    color: #ffffff;\r\n    padding: 1rem;\r\n    float: left;\r\n    padding-bottom: 0.5rem;\r\n    padding-top: 0.5rem;\r\n    border-left: 1px solid #404040;\r\n    border-right: 0 solid #404040;\r\n    height: fit-content;\r\n\r\n    &:hover{\r\n        color: #ffffff;\r\n        background-color: #000000;\r\n        text-decoration: none;\r\n    }\r\n\r\n    &>a:hover{\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nexport const SearchElement = styled.div`\r\n    color: #ffffff;\r\n    padding: 1rem;\r\n    float: left;\r\n    padding-bottom: 0rem;\r\n    padding-top: 0.5rem;\r\n    border-left: 1px solid #404040;\r\n    border-right: 0 solid #404040;\r\n`;\r\n\r\nexport const LoginRegisterContainer = styled.div`\r\n    display:flex;\r\n    justify-content: flex-end;\r\n    /* background: #333333; */\r\n    align-items: flex-end;\r\n`;\r\n\r\nexport const MainViewTabsContainer = styled.div`\r\n    display:flex;\r\n    /* background-color:#222222; */\r\n    flex-wrap: wrap;\r\n    border-top: 1px solid #404040;\r\n    border-bottom: 1px solid #404040;\r\n    border-left: 0 solid #404040;\r\n    border-right: 0 solid #404040;\r\n    margin: 0 10px;\r\n    padding: 10px 0;\r\n`;\r\n\r\nexport const MainViewTabsContainerWrapper = styled.div`\r\n    width: 100%;\r\n    /* background: #333333; */\r\n`\r\n\r\n// export const AboutSection = styled.div<{width: string, color: string}>`\r\nexport const AboutSection = styled.div<{color: string}>`\r\n    border-left: 1px solid #404040;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0rem 1rem;\r\n    /* color: #00cccb; */\r\n    overflow: auto;\r\n    overflow-wrap: break-word;\r\n    color: ${props => props.color}\r\n`;\r\n\r\nexport const MainContentContainer = styled.div`\r\n    display: flex;\r\n    min-height: 40rem;\r\n    /* background-color: #333333; */\r\n    justify-content: space-between;\r\n    flex-grow: 1;\r\n    padding-top: 1rem;\r\n    padding-bottom: 2rem;\r\n`;\r\n\r\nexport const StyledAdminPanelContainer = styled.div<{color:string, decoratedColor:string}>`\r\n    display:flex;\r\n    height: 100%;\r\n    /* flex-direction: column; */\r\n    a{\r\n        text-decoration:none;\r\n        color: ${props => props.color};\r\n    }\r\n    a:hover{\r\n        color: ${props => props.decoratedColor};\r\n        /* color: #00cccb; */\r\n    }\r\n`;\r\n","import axios from \"axios\";\r\n\r\nexport interface BookmarkProps {\r\n    _id?: string;\r\n    title: string;\r\n    post: any;\r\n}\r\n\r\nexport const getBookmarks = async () => {\r\n    try {\r\n      const bookmarks = await axios.get(\r\n         '/bookmarks'\r\n      )\r\n      return bookmarks\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getBookmark = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const bookmark = await axios.get(\r\n        `/bookmark/${_id}`\r\n      )\r\n      return bookmark\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createBookmark = async (\r\n    bookmark: BookmarkProps\r\n  ) => {\r\n    try {\r\n      const savedBookmark = await axios.post(\r\n        `/bookmark`,\r\n        bookmark\r\n      )\r\n      return savedBookmark\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.errors, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const updateBookmark = async (\r\n    bookmark: BookmarkProps\r\n  ) => {\r\n    try {\r\n      const updatedBookmark = await axios.put(\r\n        `/bookmark/${bookmark._id}`,\r\n        bookmark\r\n      )\r\n      return updatedBookmark;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.keyValue, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const deleteBookmark = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedBookmark = await axios.delete(\r\n        `/bookmark/${_id}`\r\n      )\r\n      return deletedBookmark;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import React, { useState } from \"react\";\r\nimport { LinkElement, MainViewTabsContainer, MainViewTabsContainerWrapper } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BookmarkProps, getBookmarks } from \"../../APIRequests/Bookmark\";\r\nimport { theme } from \"../../App.styles\";\r\n\r\nconst DefaultViewTabs = () => {\r\n    const [allBookmarks, setAllBookmarks] = useState<BookmarkProps[]>([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const layout = localStorage.getItem(\"blognellaTheme\") || \"default\";\r\n\r\n    const fetchAllBookmarks = () => {\r\n        getBookmarks()\r\n        .then(({ data: { bookmarks } }: BookmarkProps[] | any) => {if(bookmarks.length !== allBookmarks.length) setAllBookmarks(bookmarks)})\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    if(allBookmarks.length === 0) fetchAllBookmarks();\r\n\r\n    const getAllLinks = () => {\r\n        return allBookmarks.map((bookmark) => <LinkElement key={bookmark._id}><Link to={bookmark.post.length > 0 ? `/ui/post/${bookmark.post[0]._id}` : '/'}>{bookmark.title}</Link></LinkElement>) || []\r\n    }\r\n\r\n    return (\r\n        <MainViewTabsContainerWrapper>\r\n            <MainViewTabsContainer style={{backgroundColor: theme.bookmarks[layout]}}>\r\n                <LinkElement><Link to={\"/\"}>{lang === \"en\" ? \"Home\" : \"Główna\"}</Link></LinkElement>\r\n                {getAllLinks()}\r\n                {/* <LinkElement><Link to={\"/\"}>Home</Link></LinkElement> */}\r\n            </MainViewTabsContainer>\r\n        </MainViewTabsContainerWrapper>\r\n    )\r\n}\r\n\r\nexport default DefaultViewTabs;","import styled from 'styled-components';\r\n\r\nexport const StyledSearch = styled.div`\r\n    label{\r\n        color: white;\r\n    }\r\n    .MuiInputBase-input{\r\n        /* color: #dfdfdf; */\r\n    }\r\n    button{\r\n        height: 30px;\r\n        margin-top: 25px;\r\n    }\r\n    \r\n    display: flex;\r\n    flex-direction: row;\r\n`","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { StyledSearch } from \"./SearchComponent.styles\";\r\n\r\nconst SearchComponent = (props) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const onSearch = () => {\r\n        props.history.push({\r\n            pathname: '/search',\r\n            state: { search: searchValue }\r\n          })\r\n    }\r\n\r\n    return (\r\n        <StyledSearch>\r\n            <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Search\" : \"Wyszukaj\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Type in tag or title here\" : \"Wpisz etykietę lub tytuł\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setSearchValue(input.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onSearch}>\r\n                {lang === \"en\" ? \"Search\" : \"Wyszukaj\"}\r\n            </Button>\r\n        </StyledSearch>\r\n    ) \r\n}\r\n\r\nexport default withRouter(SearchComponent);","import React, { useState } from \"react\";\r\nimport { LinkElement, LinkLoginElement, LoginRegisterContainer, SearchElement } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getUser, UserProps } from \"../../APIRequests/User\";\r\nimport DefaultViewTabs from \"./DefaultViewTabs\";\r\nimport { availablePages } from \"../../App\";\r\nimport SearchComponent from \"../SearchComponent/SearchComponent\";\r\nimport { theme } from \"../../App.styles\";\r\n\r\nconst DefaultViewLinks = (props) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const lang = localStorage.getItem('blognellaLang');\r\n    const layout = localStorage.getItem('blognellaTheme') || \"default\";\r\n\r\n    const fetchUser = () => {\r\n        getUser(localStorage.getItem('blognellaId') || \"\")\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            if(!nick) {setNick(user.nick);}\r\n            if(!role) {setRole(user.role);}\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onLogout = () => {\r\n        localStorage.removeItem('blognellaId');\r\n        if(props.match.path === \"/\"){\r\n            window.location.reload();\r\n        } else {\r\n            props.history.push('/');\r\n        }\r\n    }\r\n\r\n    if(localStorage.getItem('blognellaId')) fetchUser();\r\n\r\n    const changeLanguage = () => {\r\n        const actualLang = localStorage.getItem('blognellaLang') || \"en\";\r\n        actualLang === \"en\" ? localStorage.setItem(\"blognellaLang\", \"pl\") : localStorage.setItem(\"blognellaLang\", \"en\");\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LoginRegisterContainer style={{backgroundColor: theme.comments[layout]}}>\r\n                <SearchElement><SearchComponent/></SearchElement>\r\n                {availablePages.includes(props.pageName) && role === \"admin\" ? <LinkElement><Link to={\"/panel/posts\"}>Panel</Link></LinkElement> : <></>}\r\n                { nick ? <LinkElement onClick={onLogout} ><Link to={\"/\"}>{lang === \"en\" ? \"Logout\" : \"Wyloguj\"} <span style={{fontWeight: \"bold\"}}>{nick}</span></Link></LinkElement> : \r\n                <LinkLoginElement ><Link to={\"/login\"}>{lang === \"en\" ? \"Login\" : \"Zaloguj\"}</Link></LinkLoginElement> } \r\n                { !nick ? <LinkLoginElement><Link to={\"/register\"}>{lang === \"en\" ? \"Register\" : \"Zarejestruj\"}</Link></LinkLoginElement> : <></>}\r\n                <LinkElement onClick={changeLanguage}><a>{localStorage.getItem('blognellaLang') || \"en\"}</a></LinkElement>\r\n            </LoginRegisterContainer>\r\n            <DefaultViewTabs/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(DefaultViewLinks);","import React from \"react\";\r\nimport { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\nimport DefaultViewLinks from \"./DefaultViewLinks\";\r\n// import { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\n\r\nconst DefaultView = (props) => {\r\n    return (\r\n        <>\r\n        <LogoContainer>\r\n            <Logo>Blognella</Logo>\r\n            <LinksContainer>\r\n                    <div>\r\n                    {/* <LinkElement><Link color=\"white\" to={\"/login\"}>Login</Link></LinkElement>\r\n                    <LinkElement><Link to={\"/register\"}>Register</Link></LinkElement> */}\r\n                    </div>\r\n            </LinksContainer>\r\n        </LogoContainer>\r\n        <DefaultViewLinks {...props}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultView;","import axios from \"axios\";\r\n\r\nexport interface PostProps {\r\n    _id?: string;\r\n    date: Date;\r\n    tags: string[];\r\n    title: string;\r\n    content: any;\r\n    user: string;\r\n}\r\n\r\nexport const getPosts = async () => {\r\n    try {\r\n      const posts = await axios.get(\r\n         '/posts'\r\n      )\r\n      return posts\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getPost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const post = await axios.get(\r\n        `/post/${_id}`\r\n      )\r\n      return post\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createPost = async (\r\n    post: PostProps\r\n  ) => {\r\n    try {\r\n      const savedPost = await axios.post(\r\n        `/post`,\r\n        post\r\n      )\r\n      return savedPost\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            console.log(\"dat\");\r\n            console.log(error.response);\r\n            return {data: error.response.data.errors, status: 403}\r\n        } else if(error.response.status === 409) {\r\n            return {data: {}, status: 409}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const updatePost = async (\r\n    post: PostProps\r\n  ) => {\r\n    try {\r\n      const updatedPost = await axios.put(\r\n        `/post/${post._id}`,\r\n        post\r\n      )\r\n      return updatedPost;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.keyValue, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const deletePost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedPost = await axios.delete(\r\n        `/post/${_id}`\r\n      )\r\n      return deletedPost\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import React from \"react\";\r\n\r\nconst PostAboutComponent = (props) => {\r\n    const date = new Date(props.post.date).toDateString();\r\n\r\n    return (\r\n        props.post.date > new Date().toISOString() ? <div>It will be avaiable soon - {date}</div> : \r\n            <>\r\n            <div style={{overflow: \"hidden\"}}dangerouslySetInnerHTML={{ __html: props.post.content[0].text }} />\r\n            </>\r\n    )\r\n}\r\n\r\nexport default PostAboutComponent;","import React, { useEffect, useState } from \"react\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostAboutComponent from \"../PostComponent/PostAboutComponent\";\r\n\r\nconst DefaultViewAbout = () => {\r\n    const [aboutPost, setAboutPost] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allAboutPosts = posts.filter((post) => post.content[0].title === \"About\");\r\n            setAboutPost(allAboutPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(aboutPost.length === 0) fetchAllPosts();\r\n    }, [])\r\n\r\n    return (\r\n        // <AboutSection>\r\n            aboutPost.length > 0 ? <PostAboutComponent post={aboutPost[0]} /> : <div>{lang === \"en\" ? \"There is no About post\" : \"Brak wpisu o mnie\"}</div>\r\n        // </AboutSection>\r\n    )\r\n}\r\n\r\nexport default DefaultViewAbout;","import styled from 'styled-components'\r\n\r\nexport const MainViewContainer = styled.div<{minWidth: string, width: string, isAbout: boolean}>`\r\n    /* display: flex; */\r\n    /* justify-content: space-between; */\r\n    margin: 0rem 1rem;\r\n    /* width:100%; */\r\n    min-width: ${props => props.minWidth};\r\n    width: ${props => props.width};\r\n\r\n    @media (max-width: 872px) {\r\n    width: ${props => props.isAbout ? \"710px\" : \"100%\"};\r\n    min-width: ${props => props.isAbout ? \"710px\" : \"unset\"};\r\n    }\r\n\r\n    @media (max-width: 791px) {\r\n        width: ${props => props.isAbout ? \"550px\" : \"100%\"};\r\n    min-width: ${props => props.isAbout ? \"550px\" : \"unset\"};\r\n    }\r\n\r\n    @media (max-width: 652px) {\r\n        width: ${props => props.isAbout ? \"400px\" : \"100%\"};\r\n    min-width: ${props => props.isAbout ? \"400px\" : \"unset\"};\r\n    }\r\n\r\n    @media (max-width: 513px) {\r\n        width: ${props => props.isAbout ? \"250px\" : \"100%\"};\r\n    min-width: ${props => props.isAbout ? \"250px\" : \"unset\"};\r\n    }\r\n`;","import React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getLayouts, LayoutProps } from './APIRequests/Layout';\r\nimport { getUser, UserProps } from './APIRequests/User';\r\nimport { StyledMain, StyledPanelContent, theme } from './App.styles';\r\nimport AdminPanel from './components/AdminPanel/AdminPanel';\r\nimport DefaultView from './components/DefaultView/DefaultView'\r\nimport { AboutSection, MainContentContainer, StyledAdminPanelContainer } from './components/DefaultView/DefaultView.styles';\r\nimport DefaultViewAbout from './components/DefaultView/DefaultViewAbout';\r\n\r\nimport './components/globalStyles/globalStyles.css';\r\nimport { MainViewContainer } from './components/MainView/MainView.styles';\r\n\r\nexport const availablePages = [\"/register\", \"/login/forget\", \"/login\", \"/ui/post/:id\", \"/search\", \"/\"]\r\n\r\nconst App: React.FC = (props:any) => {\r\n  const [role, setRole] = useState(\"\");\r\n  const layout = localStorage.getItem('blognellaTheme') || \"default\";\r\n  const mainWidth = localStorage.getItem('blognellaWidth') ? Number(localStorage.getItem('blognellaWidth')) : 80;\r\n\r\n  const fetchUser = () => {\r\n      const userId = localStorage.getItem('blognellaId') || \"\";\r\n      if(userId) {\r\n        getUser(userId)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            if(role !== user.role) {setRole(user.role);}\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n      } else {\r\n        setRole(\"guest\");\r\n      }\r\n  }\r\n\r\n  const fetchLayout = () => {\r\n      getLayouts()\r\n      .then(({ data: { layouts } }: LayoutProps[] | any) => {\r\n        const rootComponent = document.getElementById(\"root\")\r\n        if(layouts.length > 0) {\r\n          if(rootComponent !== null) {\r\n            rootComponent.style.minHeight = \"100vh\";\r\n            rootComponent.style.backgroundColor = theme.root[layouts[0].name];\r\n            localStorage.setItem('blognellaTheme', layouts[0].name);\r\n            localStorage.setItem('blognellaWidth', layouts[0].mainWidth);\r\n          }\r\n        } \r\n      })\r\n      .catch((err: Error) => console.log(err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUser()\r\n    if(!localStorage.getItem('blognellaLang')) {\r\n      localStorage.setItem('blognellaLang', \"en\");\r\n    }\r\n    fetchLayout()\r\n  }, [props])\r\n\r\n\r\n  if(props.match.path === \"/login\" &&  localStorage.getItem('blognellaId')) {props.history.push(\"/\")};\r\n  if(!availablePages.includes(props.match.path) && role !== \"admin\" && role) {props.history.push(\"/\")};\r\n\r\n  const Content = props.page;\r\n  return (\r\n    <StyledMain inputColor={theme.inputText[layout]} style={{backgroundColor: theme.page[layout], color: theme.text[layout]}}>\r\n      <DefaultView pageName={props.match.path}/>\r\n      <MainContentContainer>\r\n        <MainViewContainer minWidth={availablePages.includes(props.match.path) ? `${mainWidth*9.3}px` : \"unset\"}\r\n        width={availablePages.includes(props.match.path) ? `${mainWidth*9.3}px` : \"100%\"} isAbout={availablePages.includes(props.match.path)}>\r\n          <StyledAdminPanelContainer color={theme.text[layout]} decoratedColor={theme.decoratedText[layout]}>\r\n\r\n          {role && \r\n            <>\r\n           {!availablePages.includes(props.match.path) ? <AdminPanel/> : <></>}\r\n           <StyledPanelContent width=\"100%\" iconColor={theme.text[layout]}><Content/></StyledPanelContent>\r\n           </>\r\n           }\r\n          </StyledAdminPanelContainer>\r\n        </MainViewContainer>\r\n        {/* {availablePages.includes(props.match.path) ? <AboutSection width={`${100 - mainWidth}%`} color={theme.decoratedText[layout]}><DefaultViewAbout/></AboutSection> : <></>} */}\r\n        {availablePages.includes(props.match.path) ? <AboutSection color={theme.decoratedText[layout]}><DefaultViewAbout/></AboutSection> : <></>}\r\n      </MainContentContainer>\r\n\r\n\r\n    </StyledMain>\r\n  )\r\n}\r\n\r\nexport default withRouter(App)\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledLoginForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* background: #333333; */\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n\r\n    .MuiInputBase-root{\r\n      color: #d8d8d8;\r\n    }\r\n\r\n    label{\r\n      color: white;\r\n    }\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n    .MuiButton-containedPrimary{\r\n      margin: 0 0.5rem;\r\n    }\r\n`;\r\n\r\n","import { validateOrReject } from \"class-validator\";\r\n\r\nexport async function validateOrRejectExample(input) {\r\n    try {\r\n      await validateOrReject(input)\r\n      return []\r\n    } catch (errors) {\r\n    //   console.log('Caught promise rejection (validation failed). Errors: ', errors);\r\n    //   throw errors;\r\n    return errors;\r\n    }\r\n}\r\n\r\nexport const getPolishEntity = (entity) => {\r\n    if(entity === \"password\") {\r\n        return \"hasło\"\r\n    } else if(entity === \"role\") {\r\n        return \"rola\"\r\n    } else if(entity === \"date\") {\r\n        return \"data\"\r\n    } else if(entity === \"tags\") {\r\n        return \"etykiety\"\r\n    } else if(entity === \"title\") {\r\n        return \"tytuł\"\r\n    } else if(entity === \"content\") {\r\n        return \"treść\"\r\n    } else if(entity === \"comment\") {\r\n        return \"komentarz\"\r\n    } else if(entity === \"user\") {\r\n        return \"użytkownik\"\r\n    } else if(entity === \"post\") {\r\n        return \"wpis\"\r\n    } else if(entity === \"name\") {\r\n        return \"nazwa\"\r\n    } else if(entity === \"text\") {\r\n        return \"tekst\"\r\n    }\r\n    \r\n    return entity;\r\n}\r\n\r\nconst getValidationMsg = (englishConstraintMsg, constraint) => {\r\n    const entity = getPolishEntity(getFirstWord(englishConstraintMsg));\r\n    if(constraint === \"isAlphanumeric\") {\r\n        return `pole ${entity} musi zawierać tylko litery i liczby`\r\n    } else if(constraint === \"isNotEmpty\") {\r\n        return `pole ${entity} nie jest dozwole puste`\r\n    } else if(constraint === \"isString\") {\r\n        return `pole ${entity} musi być tekstem`\r\n    } else if(constraint === \"notContains\") {\r\n        return `pole ${entity} nie może zawierać spacji`\r\n    } else if(constraint === \"minLength\") {\r\n        return `pole ${entity} musi zawierać co najmniej wymaganą liczbę znaków`\r\n    } else if(constraint === \"isEmail\") {\r\n        return `pole ${entity} musi być prawidłowym emailem`\r\n    } else if(constraint === \"isArray\") {\r\n        return `pole ${entity} musi być zbiorem etykiet`\r\n    }else if(constraint === \"isDateString\") {\r\n        return `pole ${entity} musi być w poprawnym formacie daty`\r\n    }\r\n    return \"\";\r\n}\r\n\r\nconst getFirstWord = (string) => {\r\n    return string.replace(/ .*/, '');\r\n}\r\n\r\nexport const getAllValidationMsg = (validation:any, language:string ) => {\r\n    const allValidationMsg = Object.keys(validation).map((con:any) => {\r\n        if(con === \"isAlphanumeric\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"isNotEmpty\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"isString\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"notContains\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"minLength\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"isEmail\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"isArray\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"isDateString\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        }\r\n        return \"\";\r\n    })\r\n    return allValidationMsg;\r\n}\r\n","import React from \"react\"\r\nimport { getPolishEntity } from \"./validation\"\r\n\r\nexport const getValidatorMsg = (messages) => {\r\n    return messages.map((message) => <div key={message}>{message}</div>)\r\n}\r\n\r\nexport const getUniqueValidatorMsg = (messages, lang) => {\r\n    return Object.keys(messages).map((field) => lang === \"en\" ? `${field} should be unique` : `pole ${getPolishEntity(field)} musi byc unikalne`)\r\n}","import {\r\n    IsAlphanumeric,\r\n    IsNotEmpty,\r\n      IsString,\r\n      MinLength,\r\n      NotContains,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from '../validators/validation';\r\n\r\n    class UserValidator {\r\n      constructor(user) {\r\n        this.login = user.login;\r\n      }\r\n      @IsAlphanumeric()\r\n      @IsNotEmpty()\r\n      @IsString()\r\n      @NotContains(' ')\r\n      @MinLength(2)\r\n      login: string;\r\n    }\r\n\r\n    const userLoginValidate = (user, language) => {\r\n        const userValidator = new UserValidator(user);\r\n        const val = validateOrRejectExample(userValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                const allValidationMsg = getAllValidationMsg(data[0].constraints, language);\r\n                return allValidationMsg.length > 0 ? allValidationMsg[0] : \"\";\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default userLoginValidate;","import {\r\n    IsNotEmpty,\r\n      IsString,\r\n      MinLength,\r\n      NotContains,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from '../validators/validation';\r\n\r\n    class UserValidator {\r\n      constructor(user) {\r\n        this.password = user.password;\r\n      }\r\n      @IsNotEmpty()\r\n      @IsString()\r\n      @MinLength(7)\r\n      @NotContains(' ')\r\n      password: string;\r\n    }\r\n\r\n    const userPasswordValidate = (user, language) => {\r\n        const userValidator = new UserValidator(user);\r\n        const val = validateOrRejectExample(userValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                const allValidationMsg = getAllValidationMsg(data[0].constraints, language);\r\n                return allValidationMsg.length > 0 ? allValidationMsg[0] : \"\";\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default userPasswordValidate;","import styled from 'styled-components';\r\n\r\nexport const StyledErrorMessage = styled.div`\r\n    padding: 0.2rem 0 0.5rem 0.5rem;\r\n`","import React, {useState} from \"react\";\r\nimport { FormItem, LogicControls, StyledLoginForm } from \"./LoginForm.styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Popover, Typography } from \"@material-ui/core\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getUsers, UserProps } from \"../../APIRequests/User\";\r\nimport { getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport userLoginValidate from \"../fieldValidators/userLoginValidator\";\r\nimport userPasswordValidate from \"../fieldValidators/userPasswordValidator\";\r\nimport { StyledErrorMessage } from \"../fieldValidators/fieldValidators.styles\";\r\n\r\nconst LoginForm = (props) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n    const [errors, setErrors] = useState({login: \"\", password: \"\"});\r\n    const [touched, setTouched] = useState<any>({});\r\n\r\n    const onSubmit = (event) => {\r\n        event.persist();\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => {\r\n            const user = users.find((user) => user.login === login && user.password === password)\r\n            if(user) {\r\n                localStorage.setItem('blognellaId', user._id);\r\n                props.history.push('/');\r\n            } else {\r\n                setErrorMsg([lang === \"en\" ? \"Invalid login or password\" : \"Nieprawidłowy login lub hasło\"])\r\n                setAnchorEl(event.target);\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onInputLogin = (value:string) => {\r\n    touched.login && userLoginValidate({login: value.trim()}, lang).then((data) => {setErrors({...errors, login: data})});\r\n    }\r\n\r\n    const onBlurLogin = (value:string) => {\r\n    userLoginValidate({login: value.trim()}, lang).then((data) => {setErrors({...errors, login: data}); setTouched({...touched, login: true})});\r\n    }\r\n    \r\n    const onInputPassword = (value:string) => {\r\n    touched.password && userPasswordValidate({password: value.trim()}, lang).then((data) => {setErrors({...errors, password: data})});\r\n    }\r\n\r\n    const onBlurPassword = (value:string) => {\r\n    userPasswordValidate({password: value.trim()}, lang).then((data) => {setErrors({...errors, password: data}); setTouched({...touched, password: true})});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledLoginForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    onInput={(input:any) => onInputLogin(input.target.value)}\r\n                    onBlur={(input:any) => onBlurLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <StyledErrorMessage>{errors.login}</StyledErrorMessage>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Password\" : \"Hasło\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your password here\" : \"Proszę wpisz swoje hasło\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    type=\"password\"\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    onInput={(input:any) => onInputPassword(input.target.value)}\r\n                    onBlur={(input:any) => onBlurPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <StyledErrorMessage>{errors.password}</StyledErrorMessage>\r\n                <LogicControls>\r\n                    <div>{lang === \"en\" ? \"Forgot password? Click \" : \"Zapomniałes hasła? Kliknij \"}<Link to={\"/login/forget\"}>{lang === \"en\" ? \"here\" : \"tutaj\"}</Link></div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                        {lang === \"en\" ? \"Login\" : \"Zaloguj\"}\r\n                    </Button>\r\n                    <Popover\r\n                    id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                    open={Boolean(anchorEl)}\r\n                    anchorEl={anchorEl}\r\n                    onClose={() => setAnchorEl(null)}\r\n                    anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    >\r\n                        <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n                    </Popover>\r\n                </LogicControls>\r\n            </StyledLoginForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React from \"react\";\r\nimport LoginForm from \"../components/LoginForm/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n    return <LoginForm />\r\n}\r\n\r\nexport default LoginPage","import axios from \"axios\";\r\n\r\nexport interface CommentProps {\r\n    _id?: string;\r\n    date: string;\r\n    text: string;\r\n    user: any;\r\n}\r\n\r\nexport const getComments = async () => {\r\n    try {\r\n      const comments = await axios.get(\r\n         '/comments'\r\n      )\r\n      return comments\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getComment = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const comment = await axios.get(\r\n        `/comment/${_id}`\r\n      )\r\n      return comment\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createComment = async (\r\n    comment: CommentProps\r\n  ) => {\r\n    try {\r\n      const savedComment = await axios.post(\r\n        `/comment`,\r\n        comment\r\n      )\r\n      return savedComment\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.errors, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const updateComment = async (\r\n    comment: CommentProps\r\n  ) => {\r\n    try {\r\n      const updatedComment = await axios.put(\r\n        `/comment/${comment._id}`,\r\n        comment\r\n      )\r\n      return updatedComment;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.keyValue, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const deleteComment = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedComment = await axios.delete(\r\n        `/comment/${_id}`\r\n      )\r\n      return deletedComment\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import {\r\n    IsDateString,\r\n    IsNotEmpty,\r\n    IsString,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from './validation';\r\n\r\n    export class CommentValidator {\r\n    constructor(comment) {\r\n      this.date = comment.date;\r\n      this.text = comment.text;\r\n      this.user = comment.user;\r\n    }\r\n    @IsDateString()\r\n    date: string;\r\n\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    text: string[];\r\n\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    user: string;\r\n  }\r\n\r\n    const commentValidate = (user, language) => {\r\n        const commentValidator = new CommentValidator(user);\r\n        const val = validateOrRejectExample(commentValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                // console.log(data);\r\n                return getAllValidationMsg(data[0].constraints, language)\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default commentValidate;","import styled from 'styled-components';\r\n\r\nexport const StyledComponentTextField = styled.div`\r\n    label{\r\n        color: white;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .MuiInputBase-input{\r\n        /* color: #dfdfdf; */\r\n    }\r\n`;\r\n\r\nexport const StyledCommentAuthor = styled.span`\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const StyledCommentButton = styled.span<{color:string}>`\r\n    margin-left: 1rem;\r\n    color: ${props => props.color};\r\n    font-weight: 600;\r\n    /* color: #00cccb; */\r\n    cursor: pointer;\r\n\r\n    &:hover{\r\n        color: white;\r\n    }\r\n\r\n    &:active{\r\n        color: #dfdfdf;\r\n    }\r\n`;","import { Popover, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { deleteComment, updateComment } from \"../../APIRequests/Comment\";\r\nimport { theme } from \"../../App.styles\";\r\nimport commentValidate from \"../validators/commentValidator\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { StyledComponentTextField, StyledCommentAuthor, StyledCommentButton} from \"./PostComment.styles\";\r\n\r\nconst PostCommentComponent = (props) => {\r\n    const [isEditingMode, setIsEditingMode] = useState(false);\r\n    const [commentText, setCommentText] = useState(props.comment.text);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const layout = localStorage.getItem(\"blognellaTheme\") || \"default\";\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n    const canEdit = props.role !== \"guest\" && (props.comment.user === props.nick || props.role === \"admin\" )\r\n\r\n    const onEdit = () => {\r\n        if(isEditingMode){\r\n            setCommentText(props.comment.text);\r\n        }\r\n        setIsEditingMode(!isEditingMode);\r\n    }\r\n\r\n    const onDelete = () => {\r\n        props.updatePostToDeleteComment(props.comment._id);\r\n        deleteComment(props.comment._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Comment not deleted')\r\n            }\r\n            window.location.reload();\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    const onSaveEditedComment = (event) => {\r\n        event.persist();\r\n\r\n        const comment = {\r\n            _id: props.comment._id,\r\n            date: props.comment.date,\r\n            text: commentText.trim(),\r\n            user: props.comment.user\r\n        }\r\n        commentValidate(comment, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                updateComment(comment)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        setIsEditingMode(!isEditingMode);\r\n                        window.location.reload();\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        // updateComment(comment)\r\n        // .then(({ status}) => {\r\n        //     if (status !== 200) {\r\n        //     throw new Error('Error! Comment not saved')\r\n        //     }\r\n        // })\r\n        // .catch((err) => console.log(err))\r\n        // window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <StyledCommentAuthor>{props.comment.user} </StyledCommentAuthor> {new Date(props.comment.date).toDateString()}\r\n                {canEdit ? <><StyledCommentButton color={theme.decoratedText[layout]} onClick={onEdit}>{lang === \"en\" ? \"Edit\" : \"Edytuj\"}</StyledCommentButton>\r\n                <StyledCommentButton color={theme.decoratedText[layout]} onClick={onDelete}>{lang === \"en\" ? \"Delete\" : \"Usuń\"}</StyledCommentButton></> : <></>}\r\n            </div>\r\n            {/* <div>{props.comment.text}</div> */}\r\n            <StyledComponentTextField>\r\n                {isEditingMode ?\r\n                     <TextField\r\n                     id=\"standard-full-width\"\r\n                     label=\"\"\r\n                     style={{ margin: 8 }}\r\n                     placeholder={lang === \"en\" ? \"Please type in your comment here\" : \"Proszę wpisz komentarz\"}\r\n                     fullWidth\r\n                     margin=\"normal\"\r\n                     InputLabelProps={{\r\n                         shrink: true,\r\n                     }}\r\n                     InputProps={{\r\n                         readOnly: !isEditingMode,\r\n                     }}\r\n                     defaultValue={commentText}\r\n                     onChange={(input) => setCommentText(input.target.value)}\r\n             /> : \r\n            //  <div style={{padding: \"1rem 0\", backgroundColor: \"#333333\", borderBottom: \"2px solid #404040\", wordBreak: \"break-word\"}}>\r\n             <div style={{padding: \"1rem 0\", borderBottom: \"2px solid #404040\", wordBreak: \"break-word\"}}>\r\n                {commentText}\r\n             </div>\r\n                }\r\n                {/* <TextField\r\n                        id=\"standard-full-width\"\r\n                        label=\"\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder={lang === \"en\" ? \"Please type in your comment here\" : \"Proszę wpisz komentarz\"}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: !isEditingMode,\r\n                        }}\r\n                        defaultValue={commentText}\r\n                        onChange={(input) => setCommentText(input.target.value)}\r\n                /> */}\r\n                {isEditingMode ? \r\n                <Button variant=\"contained\" color=\"primary\" onClick={onSaveEditedComment}>\r\n                    {lang === \"en\" ? \"Save Comment\" : \"Zapisz Komentarz\"}\r\n                </Button> : <></>}\r\n                <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n                >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n                </Popover>\r\n            </StyledComponentTextField>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostCommentComponent);","import { Popover, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { createComment } from \"../../APIRequests/Comment\";\r\nimport { updatePost } from \"../../APIRequests/Post\";\r\nimport { getUser, UserProps } from \"../../APIRequests/User\";\r\nimport commentValidate from \"../validators/commentValidator\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { StyledComponentTextField } from \"./PostComment.styles\";\r\nimport PostCommentComponent from \"./PostCommentComponent\";\r\n\r\nconst PostCommentList = (props) => {\r\n    const [nick, setNick] = useState(\"Guest\");\r\n    const [role, setRole] = useState(\"guest\");\r\n    // const [user, setUser] = useState();\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n    const fetchUser = (userId:string) => {\r\n        getUser(userId)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setNick(user.nick);\r\n            setRole(user.role);\r\n            // setUser(user);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('blognellaId');\r\n        if(userId) {\r\n            fetchUser(userId);\r\n        } else {\r\n            setNick(\"Guest\");\r\n            setRole(\"guest\");\r\n        }\r\n    }, [props])\r\n\r\n    const updatePostToEditComment = (commentId:string) => {\r\n        const updatedComments = props.post.comment.filter((comment) => comment !== commentId);\r\n        const post = {\r\n            date: props.post.date,\r\n            tags: props.post.tags,\r\n            title: props.post.title,\r\n            content: props.post.content[0]._id,\r\n            _id: props.post._id,\r\n            user: props.post.user,\r\n            comment: updatedComments\r\n        }\r\n        updatePost(post)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Post not saved')\r\n            }\r\n        })\r\n      .catch((err) => console.log(err))\r\n    }\r\n\r\n    const onNewCommentSave = (event) => {\r\n        event.persist();\r\n        const comment = {\r\n            text: newComment.trim(),\r\n            date: new Date().toISOString(),\r\n            user: nick\r\n        }\r\n\r\n        commentValidate(comment, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                createComment(comment)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        const post = {\r\n                            date: props.post.date,\r\n                            tags: props.post.tags,\r\n                            title: props.post.title,\r\n                            content: props.post.content[0]._id,\r\n                            _id: props.post._id,\r\n                            user: props.post.user,\r\n                            comment: [...props.post.comment, data.comment._id]\r\n                        }\r\n                        updatePost(post)\r\n                        .then(({data, status}: any) => {\r\n                            if(status !== 403 && status !== 500) {\r\n                                window.location.reload();\r\n                            }\r\n                            else if(status === 403) {\r\n                                setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                                setAnchorEl(event.target);\r\n                            } else {\r\n                                setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                                setAnchorEl(event.target);\r\n                            }\r\n                        });\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getComments = () => {\r\n        return props.post.comment.map((comment) => <PostCommentComponent key={comment._id} nick={nick} role={role} comment={comment} updatePostToDeleteComment={updatePostToEditComment}/>)  \r\n    }\r\n\r\n\r\n    return (\r\n    <>\r\n    {props.post.comment.length < 1 ? <div>{lang === \"en\" ? \"No comments\" : \"Brak komentarzy\"}</div> : getComments()}\r\n    \r\n    <StyledComponentTextField>\r\n        <TextField\r\n                        id=\"standard-full-width\"\r\n                        label={lang === \"en\" ? \"Add Comment\" : \"Dodaj komentarz\"}\r\n                        style={{ margin: 8 }}\r\n                        placeholder={lang === \"en\" ? \"Please type in your comment here\" : \"Proszę wpisz komentarz\"}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        defaultValue={newComment}\r\n                        onChange={(input) => setNewComment(input.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onNewCommentSave}>\r\n            {lang === \"en\" ? \"Add Comment\" : \"Dodaj Komentarz\"}\r\n        </Button>\r\n        <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n        </Popover>\r\n    </StyledComponentTextField>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PostCommentList;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostLinkComponent = (props) => {\r\n    return <Link to={`/ui/post/${props.post._id}`}>{props.post.title}</Link>\r\n}\r\n\r\nexport default PostLinkComponent;","import styled from 'styled-components';\r\n\r\nexport const StyledDate = styled.div`\r\n    font-size: 0.7rem;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const StyledTitle = styled.div`\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n    margin: 0.2rem 0;\r\n`;\r\n\r\nexport const StyledText = styled.div`\r\n    margin: 0.2rem 0;\r\n    /* overflow: auto; */\r\n    overflow: hidden;\r\n    max-width: 46rem;\r\n    word-break: break-all;\r\n`;\r\n\r\nexport const StyledChaptersContainer = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 3rem;\r\n`;\r\n\r\nexport const StyledChapters = styled.div`\r\n    font-size: 1.6rem;\r\n    margin-top: 1rem;\r\n    \r\n`;\r\n\r\nexport const StyledTagsLabel = styled.div<{color:string}>`\r\n    margin-top: 0.5rem;\r\n    font-weight: bold;\r\n    color: ${props => props.color};\r\n    /* color: #00cccb; */\r\n`;\r\n\r\nexport const StyledTags = styled.div<{color:string}>`\r\n    /* color: #00cccb; */\r\n    color: ${props => props.color};\r\n    font-size: 0.92rem;\r\n    font-style: oblique;\r\n    margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const StyledAuthorContainer = styled.div`\r\n    margin-bottom: 2rem;\r\n    font-size: 0.7rem;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const StyledAuthor = styled.span`\r\n    margin-bottom: 2rem;\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const StyledBottomPageContainer = styled.div`\r\n    width: 100%;\r\n    /* background-color: #303030; */\r\n    padding: 0.2rem 0.75rem;\r\n    border-bottom: 2px solid #404040;\r\n    margin-top: 2rem;\r\n`;\r\n","import React from \"react\";\r\nimport PostCommentList from \"./PostCommentList\";\r\nimport PostLinkComponent from \"./PostLinkComponent\";\r\nimport {StyledDate, StyledText, StyledTitle, StyledChapters,\r\n    StyledTags, StyledTagsLabel, StyledAuthor, StyledChaptersContainer, StyledBottomPageContainer, StyledAuthorContainer} from \"./PostComponent.styles\";\r\nimport { theme } from \"../../App.styles\";\r\n// import DatePicker from 'react-date-picker';\r\n\r\nconst PostComponent = (props) => {\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const layout = localStorage.getItem(\"blognellaTheme\") || \"default\";\r\n    const options = {weekday: 'long',  year: \"numeric\", month: \"long\", day: \"numeric\", };  \r\n    const date = new Date(props.post.date).toLocaleDateString(lang === \"en\" ? \"en-GB\" : \"pl-GB\", options);\r\n\r\n    const getTags = () => {\r\n        return props.post.tags.map((tag) => <span key={tag} style={{marginRight: \"1.2rem\"}}>{tag}</span>)\r\n    }\r\n\r\n    const getPostChapters = () => {\r\n        return props.postChapters.map((postChapter) => <div key={postChapter._id}><PostLinkComponent post={postChapter}/></div>)\r\n    }\r\n\r\n    return (\r\n        props.post.date > new Date().toISOString() ? <div>{lang === \"en\" ? \"It will be avaiable soon - \" : \"Dostępne wkrótce - \"}{date}</div> : \r\n            <>\r\n            {/* <DatePicker\r\n            onChange={onChange}\r\n            value={value}\r\n            /> */}\r\n            <StyledDate>{date}</StyledDate>\r\n            <StyledTitle>{props.post.title}</StyledTitle>\r\n            <StyledText dangerouslySetInnerHTML={{ __html: props.post.content[0].text }} />\r\n            \r\n            <StyledChaptersContainer>\r\n                {props.postChapters.length > 0 ? <StyledChapters>{lang === \"en\" ? \"Chapters\" : \"Rozdziały\"}</StyledChapters> : <></>}\r\n                {getPostChapters()}\r\n            </StyledChaptersContainer>\r\n\r\n            <StyledBottomPageContainer style={{backgroundColor: theme.comments[layout]}}>\r\n                <StyledTags color={theme.decoratedText[layout]}>\r\n                    <StyledTagsLabel color={theme.decoratedText[layout]}>{lang === \"en\" ? \"Tags: \" : \"Etykiety: \"}</StyledTagsLabel>\r\n                    {getTags()}\r\n                </StyledTags>\r\n            </StyledBottomPageContainer>\r\n                <StyledAuthorContainer>{lang === \"en\" ? \"Added by \" : \"Dodane przez \"}<StyledAuthor>{props.post.user}</StyledAuthor></StyledAuthorContainer>\r\n            <StyledBottomPageContainer style={{backgroundColor: theme.comments[layout]}}>\r\n                <PostCommentList post={props.post}/>\r\n            </StyledBottomPageContainer>\r\n                \r\n            \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default PostComponent;","import React, { useEffect, useState } from \"react\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostComponent from \"../PostComponent/PostComponent\";\r\n\r\nconst MainView = () => {\r\n    const [newestPost, setNewestPost] = useState();\r\n\r\n    const fetchNewestPost = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            const mainViewPost = allMainPosts.reduce((mainPost, nextPost) => {\r\n                if(JSON.stringify(mainPost) === JSON.stringify({})) return nextPost\r\n                return mainPost.date < nextPost.date ? nextPost : mainPost;\r\n            },{})\r\n            setNewestPost(mainViewPost);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchNewestPost()\r\n    }, [])\r\n\r\n    const shouldShowPost = () => {\r\n        const customNewPost = newestPost || {content: []};\r\n        return customNewPost.content && customNewPost.content.length > 0;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {shouldShowPost() ? <PostComponent post={newestPost} postChapters={[]}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainView;","import React from \"react\";\r\nimport MainView from \"../components/MainView/MainView\";\r\n\r\nconst MainViewPage = () => {\r\n    return <MainView/>\r\n}\r\n\r\nexport default MainViewPage","import styled from 'styled-components'\r\n\r\nexport const StyledRegisterForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* background: #333333; */\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n\r\n    label{\r\n      color: white;\r\n    }\r\n\r\n    .MuiInputBase-root{\r\n      color: #dfdfdf;\r\n    }\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n    .MuiButton-containedPrimary{\r\n      margin: 0 0.5rem;\r\n    }\r\n`;\r\n","import {\r\n    IsAlphanumeric,\r\n      IsEmail,\r\n      IsEnum,\r\n    IsNotEmpty,\r\n      IsString,\r\n      MinLength,\r\n      NotContains,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from './validation';\r\n\r\nenum USER_ROLES {\r\n    GUEST = \"guest\",\r\n    LOOGED_USER = \"loggedUser\",\r\n    ADMIN = \"admin\"\r\n}\r\n\r\n    class UserValidator {\r\n      constructor(user) {\r\n        this.nick = user.nick;\r\n        this.login = user.login;\r\n        this.password = user.password;\r\n        this.role = user.role;\r\n        this.email = user.email;\r\n      }\r\n      @IsAlphanumeric()\r\n      @IsNotEmpty()\r\n      @IsString()\r\n      @NotContains(' ')\r\n      nick: string;\r\n    \r\n      @IsAlphanumeric()\r\n      @IsNotEmpty()\r\n      @IsString()\r\n      @NotContains(' ')\r\n      @MinLength(2)\r\n      login: string;\r\n    \r\n      @IsNotEmpty()\r\n      @IsString()\r\n      @MinLength(7)\r\n      @NotContains(' ')\r\n      password: string;\r\n    \r\n      @IsEnum(USER_ROLES)\r\n      role: string;\r\n    \r\n      @IsEmail()\r\n      @NotContains(' ')\r\n      @IsString()\r\n      @IsNotEmpty()\r\n      email: string;\r\n    }\r\n\r\n    const userValidate = (user, language) => {\r\n        const userValidator = new UserValidator(user);\r\n        const val = validateOrRejectExample(userValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                // console.log(data);\r\n                return getAllValidationMsg(data[0].constraints, language)\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default userValidate;","import {\r\n    IsAlphanumeric,\r\n    IsNotEmpty,\r\n      IsString,\r\n      NotContains,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from '../validators/validation';\r\n\r\n    class UserValidator {\r\n      constructor(user) {\r\n        this.nick = user.nick;\r\n      }\r\n      @IsAlphanumeric()\r\n      @IsNotEmpty()\r\n      @IsString()\r\n      @NotContains(' ')\r\n      nick: string;\r\n    }\r\n\r\n    const userNickValidate = (user, language) => {\r\n        const userValidator = new UserValidator(user);\r\n        const val = validateOrRejectExample(userValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                const allValidationMsg = getAllValidationMsg(data[0].constraints, language);\r\n                return allValidationMsg.length > 0 ? allValidationMsg[0] : \"\";\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default userNickValidate;","import {\r\n      IsEmail,\r\n    IsNotEmpty,\r\n      IsString,\r\n      NotContains,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from '../validators/validation';\r\n\r\n    class UserValidator {\r\n      constructor(user) {\r\n        this.email = user.email;\r\n      }\r\n      @IsEmail()\r\n      @NotContains(' ')\r\n      @IsString()\r\n      @IsNotEmpty()\r\n      email: string;\r\n    }\r\n\r\n    const userEmailValidate = (user, language) => {\r\n        const userValidator = new UserValidator(user);\r\n        const val = validateOrRejectExample(userValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                // console.log(data);\r\n                const allValidationMsg = getAllValidationMsg(data[0].constraints, language);\r\n                return allValidationMsg.length > 0 ? allValidationMsg[0] : \"\";\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default userEmailValidate;","import React, {useState} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Popover, Typography } from \"@material-ui/core\";\r\nimport { FormItem, LogicControls, StyledRegisterForm } from \"./RegisterForm.styles\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport userValidate from \"../validators/userValidator\";\r\nimport userNickValidate from \"../fieldValidators/userNickValidator\";\r\nimport userLoginValidate from \"../fieldValidators/userLoginValidator\";\r\nimport userPasswordValidate from \"../fieldValidators/userPasswordValidator\";\r\nimport userEmailValidate from \"../fieldValidators/userEmailValidator\";\r\nimport { StyledErrorMessage } from \"../fieldValidators/fieldValidators.styles\";\r\n\r\nconst RegisterForm = (props) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n    const [errors, setErrors] = useState({nick: \"\", login: \"\", password: \"\", email: \"\"});\r\n    const [touched, setTouched] = useState<any>({});\r\n    \r\n\r\n    const onUserSave = (event) => {\r\n        event.persist();\r\n        const user = {\r\n            nick:nick.trim(),\r\n            login:login.trim(),\r\n            password:password.trim(),\r\n            email:email.trim(),\r\n            role:\"loggedUser\"\r\n        }\r\n        userValidate(user, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                createUser(user)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        props.history.push(\"/\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const onInputNick = (value:string) => {\r\n        touched.nick && userNickValidate({nick: value.trim()}, lang).then((data) => {setErrors({...errors, nick: data})});\r\n    }\r\n\r\n    const onBlurNick = (value:string) => {\r\n    userNickValidate({nick: value.trim()}, lang).then((data) => {setErrors({...errors, nick: data}); setTouched({...touched, nick: true})});\r\n    }\r\n\r\n    const onInputLogin = (value:string) => {\r\n    touched.login && userLoginValidate({login: value.trim()}, lang).then((data) => {setErrors({...errors, login: data})});\r\n    }\r\n\r\n    const onBlurLogin = (value:string) => {\r\n    userLoginValidate({login: value.trim()}, lang).then((data) => {setErrors({...errors, login: data}); setTouched({...touched, login: true})});\r\n    }\r\n    \r\n    const onInputPassword = (value:string) => {\r\n    touched.password && userPasswordValidate({password: value.trim()}, lang).then((data) => {setErrors({...errors, password: data})});\r\n    }\r\n\r\n    const onBlurPassword = (value:string) => {\r\n    userPasswordValidate({password: value.trim()}, lang).then((data) => {setErrors({...errors, password: data}); setTouched({...touched, password: true})});\r\n    }\r\n\r\n    const onInputEmail = (value:string) => {\r\n    touched.email && userEmailValidate({email: value.trim()}, lang).then((data) => {setErrors({...errors, email: data})});\r\n    }\r\n\r\n    const onBlurEmail = (value:string) => {\r\n    userEmailValidate({email: value.trim()}, lang).then((data) => {setErrors({...errors, email: data}); setTouched({...touched, email: true})});\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <StyledRegisterForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your nickname here\" : \"Proszę wpisz nick\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setNick(input.target.value)}\r\n                    onInput={(input:any) => onInputNick(input.target.value)}\r\n                    onBlur={(input:any) => onBlurNick(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <StyledErrorMessage>{errors.nick}</StyledErrorMessage>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    onInput={(input:any) => onInputLogin(input.target.value)}\r\n                    onBlur={(input:any) => onBlurLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <StyledErrorMessage>{errors.login}</StyledErrorMessage>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Password\" : \"Hasło\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your password here\" : \"Proszę wpisz swoje hasło\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    type=\"password\"\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    onInput={(input:any) => onInputPassword(input.target.value)}\r\n                    onBlur={(input:any) => onBlurPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <StyledErrorMessage>{errors.password}</StyledErrorMessage>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Email\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your email here\" : \"Proszę wpisz swój email\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setEmail(input.target.value)}\r\n                    onInput={(input:any) => onInputEmail(input.target.value)}\r\n                    onBlur={(input:any) => onBlurEmail(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <StyledErrorMessage>{errors.email}</StyledErrorMessage>\r\n                <LogicControls>\r\n                    <div>{lang === \"en\" ? \"Have already account? \" : \"Masz już konto? \"}\r\n                    <Link to={\"/login\"}>{lang === \"en\" ? \"Login\" : \"Zaloguj się\"}</Link>\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n                        {lang === \"en\" ? \"Register\" : \"Zarejestruj się\"}\r\n                    </Button>\r\n                    <Popover\r\n                    id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                    open={Boolean(anchorEl)}\r\n                    anchorEl={anchorEl}\r\n                    onClose={() => setAnchorEl(null)}\r\n                    anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    >\r\n                        <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n                    </Popover>\r\n                </LogicControls>\r\n            </StyledRegisterForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(RegisterForm);","import React from \"react\";\r\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n    return <RegisterForm/>\r\n}\r\n\r\nexport default RegisterPage","import axios from \"axios\"\r\n\r\nexport interface TagProps {\r\n    _id?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getTags = async () => {\r\n    try {\r\n      const tags = await axios.get(\r\n         '/tags'\r\n      )\r\n      return tags\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const createTag = async (\r\n    tag: TagProps\r\n  ) => {\r\n    try {\r\n      const saveTag = await axios.post(\r\n        '/tag',\r\n        tag\r\n      )\r\n      return saveTag\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.errors, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const deleteTag = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedTag = await axios.delete(\r\n        `/tag/${_id}`\r\n      )\r\n      return deletedTag\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import styled from 'styled-components';\r\n\r\nexport const StyledTagsPanel = styled.div`\r\n    label{\r\n        color: white;\r\n    }\r\n    .MuiInputBase-input{\r\n        /* color: #dfdfdf; */\r\n    }\r\n`","import {\r\n    IsNotEmpty,\r\n    IsString,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from './validation';\r\n\r\n    class TagValidator {\r\n    constructor(tag) {\r\n      this.name = tag.name;\r\n    }\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    name: string;\r\n  }\r\n\r\n    const tagValidate = (user, language) => {\r\n        const tagValidator = new TagValidator(user);\r\n        const val = validateOrRejectExample(tagValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                // console.log(data);\r\n                return getAllValidationMsg(data[0].constraints, language)\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default tagValidate;","import {\r\n    IsNotEmpty,\r\n    IsString,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from '../validators/validation';\r\n\r\n    class TagValidator {\r\n    constructor(tag) {\r\n      this.name = tag.name;\r\n    }\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    name: string;\r\n  }\r\n\r\n    const tagNameValidate = (user, language) => {\r\n        const tagValidator = new TagValidator(user);\r\n        const val = validateOrRejectExample(tagValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                const allValidationMsg = getAllValidationMsg(data[0].constraints, language);\r\n                return allValidationMsg.length > 0 ? allValidationMsg[0] : \"\";\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default tagNameValidate;","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, Popover, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { createTag, deleteTag, getTags, TagProps } from \"../../APIRequests/Tag\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { StyledTagsPanel } from \"./TagsPanel.styled\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport tagValidate from \"../validators/tagValidator\";\r\nimport tagNameValidate from \"../fieldValidators/tagNameValidator\";\r\nimport { StyledErrorMessage } from \"../fieldValidators/fieldValidators.styles\";\r\n\r\nconst TagsPanel = (props) => {\r\n    const [tag, setTag] = useState(\"\");\r\n    const [allTags, setAllTags] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n    const [errors, setErrors] = useState({name: \"\"});\r\n    const [touched, setTouched] = useState<any>({});\r\n\r\n    const fetchAllTags = () => {\r\n        getTags()\r\n        .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onTagSave = (event) => {\r\n        event.persist();\r\n        tagValidate({name: tag.trim()}, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                createTag({name: tag})\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        fetchAllTags();\r\n                        props.history.push(\"/panel/tags\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        // createTag({name: tag})\r\n        // .then(({ status }) => {\r\n        //         if (status !== 201) {\r\n        //           throw new Error('Error! Tag not saved')\r\n        //         }\r\n        //         fetchAllTags();\r\n        // })\r\n        // props.history.push(\"/panel/tags\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags()\r\n    }, [])\r\n\r\n      const onTagDelete = (tag:TagProps) => {\r\n        deleteTag(tag._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Tag not deleted')\r\n            }\r\n            fetchAllTags()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allTags.map((tag:TagProps) => \r\n          <ListItem key={tag.name}>\r\n          <ListItemText\r\n            primary={tag.name}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton style={{color: \"white\"}} edge=\"end\" aria-label=\"delete\" onClick={() => onTagDelete(tag)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n    const onInputName = (value:string) => {\r\n    touched.name && tagNameValidate({name: value.trim()}, lang).then((data) => {setErrors({...errors, name: data})});\r\n    }\r\n\r\n    const onBlurName = (value:string) => {\r\n        tagNameValidate({name: value.trim()}, lang).then((data) => {setErrors({...errors, name: data}); setTouched({...touched, name: true})});\r\n    }\r\n\r\n    return (\r\n        <StyledTagsPanel>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n            <TextField\r\n            label={lang === \"en\" ? \"Tag\" : \"Etykieta\"}\r\n            style={{ margin: 8}}\r\n            placeholder={lang === \"en\" ? \"Please type in your tag here\" : \"Proszę wpisz etykietę\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setTag(input.target.value)}\r\n            onInput={(input:any) => onInputName(input.target.value)}\r\n            onBlur={(input:any) => onBlurName(input.target.value)}\r\n            />\r\n            <StyledErrorMessage>{errors.name}</StyledErrorMessage>\r\n\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onTagSave}>\r\n                    {lang === \"en\" ? \"Add Tag\" : \"Dodaj etykietę\"}\r\n            </Button>\r\n            <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n            </Popover>\r\n            </div>\r\n        </StyledTagsPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(TagsPanel);","import React from \"react\";\r\nimport TagsPanel from \"../components/TagsPanel/TagsPanel\";\r\n\r\nconst PanelTagsPage = () => {\r\n    return <TagsPanel/>\r\n}\r\n\r\nexport default PanelTagsPage","import styled from 'styled-components';\r\n\r\nexport const StyledLayoutsPanel = styled.div<{textColor:string}>`\r\n    label{\r\n        color: white;\r\n    }\r\n    .MuiInputBase-input{\r\n        /* color: #dfdfdf; */\r\n    }\r\n\r\n    .MuiListItem-root{\r\n        &:hover {\r\n            background-color: #292929;\r\n            color: white !important;\r\n        }\r\n    }\r\n    \r\n    .MuiSlider-markActive {\r\n        background-color: unset;\r\n    }\r\n\r\n    .MuiSlider-mark {\r\n        background-color: unset;\r\n    }\r\n\r\n    .MuiSlider-markLabel {\r\n        color: ${props => props.textColor};\r\n        /* color: white; */\r\n    }\r\n\r\n    .MuiSlider-root {\r\n        padding-top: 3.5rem;\r\n    }\r\n`\r\n\r\nexport const StyledLayoutColorsContainer = styled.div`\r\n    width: 35rem;\r\n    height: 2rem;\r\n`\r\n\r\nexport const StyledCenterText = styled.div`\r\n    /* color: white; */\r\n    text-align: center;\r\n    font-weight: 600;\r\n    font-size: larger;\r\n    padding: 1rem 0;\r\n`\r\n","export const allLayoutNames = [\r\n    {\r\n        name: \"default\",\r\n        plName: \"domyślny\",\r\n        colors: [\"#292929\",\"white\",\"#00cccb\"]\r\n    },\r\n    {\r\n        name: \"white\",\r\n        plName: \"biały\",\r\n        colors: [\"#f9f9f9\",\"black\",\"#c127ae\"]\r\n    },\r\n    {\r\n        name: \"purple\",\r\n        plName: \"purpurowy\",\r\n        colors: [\"#3d1340\",\"white\",\"#ffeb00\"]\r\n    },\r\n    {\r\n        name: \"red\",\r\n        plName: \"czerwony\",\r\n        colors: [\"#580000\",\"white\",\"#d0de59\"]\r\n    },\r\n]","import { List, ListItem, ListItemText, Popover, Slider, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { StyledCenterText, StyledLayoutColorsContainer, StyledLayoutsPanel } from \"./LayoutsPanel.styled\";\r\nimport { getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { getLayouts, LayoutProps, updateLayout } from \"../../APIRequests/Layout\";\r\nimport { allLayoutNames } from \"./LayoutPanel.data\";\r\nimport { theme } from \"../../App.styles\";\r\n\r\nconst LayoutsPanel = () => {\r\n    const [allLayouts, setAllLayouts] = useState(allLayoutNames);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const layout = localStorage.getItem(\"blognellaTheme\") || \"default\";\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n    const [chosenLayout, setChosenLayout] = useState({_id: \"\", name: \"\", mainWidth: 400})\r\n\r\n    const marks = [\r\n        {\r\n          value: 500,\r\n          label: lang === \"en\" ? `Main Post Width ${chosenLayout.mainWidth}px` : \"Szerokość Głównego Wpisu\",\r\n        },\r\n        {\r\n          value: 690,\r\n          label: lang === \"en\" ? `About Post Width ${930 - chosenLayout.mainWidth}px` : \"Szerokość Sekcji 'O mnie'\",\r\n        },\r\n      ];\r\n\r\n    const handleMainWidthChange = (event, newValue) => {\r\n        false && event.persist();\r\n        setChosenLayout({...chosenLayout, mainWidth: newValue});\r\n    };\r\n\r\n    const fetchAllLayouts = () => {\r\n        getLayouts()\r\n        .then(({ data: { layouts } }: LayoutProps[] | any) => layouts.length > 0 && setChosenLayout({...layouts[0], mainWidth: Math.round(layouts[0].mainWidth*9.3)}))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onLayoutSave = (event) => {\r\n        event.persist();\r\n        updateLayout({...chosenLayout, mainWidth: chosenLayout.mainWidth/9.3})\r\n        .then(({status}: any) => {\r\n            if(status !== 403 && status !== 500) {\r\n                setErrorMsg([lang === \"en\" ? \" Saved layout \" : \" Zapisano układ strony \"])\r\n                setAnchorEl(event.target);\r\n                window.location.reload();\r\n            } else {\r\n                setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                setAnchorEl(event.target);\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllLayouts()\r\n        false && setAllLayouts(allLayoutNames);\r\n    }, [])\r\n\r\n    const onLayoutClick = (layoutName: string) => {\r\n        setChosenLayout({...chosenLayout, name: layoutName});\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allLayouts.map((layout:any) => \r\n          <ListItem key={layout.name} style={{cursor: \"pointer\", color: chosenLayout.name === layout.name ? layout.colors[2] : \"inherit\",\r\n           border: chosenLayout.name === layout.name && layout.name !== \"white\" ? \"1px solid rgba(223, 223, 223, 0.2)\" \r\n           : chosenLayout.name === layout.name ? \"1px solid rgba(0, 0, 0, 0.2)\" : \"unset\", borderRadius: \"1rem\"}} \r\n          onClick={() => onLayoutClick(layout.name)}>\r\n          <ListItemText\r\n            primary={lang === \"en\" ? layout.name : layout.plName}\r\n          />\r\n            <StyledLayoutColorsContainer>\r\n                <div style={{backgroundColor: layout.colors[0], height: \"0.66rem\"}}></div>\r\n                <div style={{backgroundColor: layout.colors[1], height: \"0.66rem\"}}></div>\r\n                <div style={{backgroundColor: layout.colors[2], height: \"0.66rem\"}}></div>\r\n            </StyledLayoutColorsContainer>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <StyledLayoutsPanel textColor={theme.text[layout]}>\r\n                <StyledCenterText>{lang === \"en\" ? \"Theme Name\" : \"Nazwa Motywu\"}</StyledCenterText>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n            <StyledCenterText>{lang === \"en\" ? \"Sections Width\" : \"Szerokość Sekcji\"}</StyledCenterText>\r\n            <Slider\r\n                    aria-labelledby=\"discrete-slider-custom\"\r\n                    step={1}\r\n                    valueLabelDisplay=\"auto\"\r\n                    marks={marks}\r\n                    min={400}\r\n                    max={790}\r\n                    value={chosenLayout.mainWidth}\r\n                    onChange={handleMainWidthChange}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onLayoutSave}>\r\n                    {lang === \"en\" ? \"Save Layout\" : \"Zapisz Układ Strony\"}\r\n            </Button>\r\n            <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n            </Popover>\r\n            </div>\r\n        </StyledLayoutsPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(LayoutsPanel);","import React from \"react\";\r\nimport LayoutsPanel from \"../components/LayoutsPanel/LayoutsPanel\";\r\n\r\nconst PanelLayoutsPage = () => {\r\n    return <LayoutsPanel/>\r\n}\r\n\r\nexport default PanelLayoutsPage","import React, {useState, useEffect} from \"react\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ChaptersList = (props) => {\r\n    const [mainPosts, setMainPosts] = useState<String[]>([]);\r\n    const [postTitle, setPostTitle] = useState(\"\");\r\n\r\n    const FilterAndSetMainPosts = (posts:PostProps[]) => {\r\n        const mainPosts = posts.filter((post:PostProps) => post.content[0].title === \"Main\");\r\n        const mainTitles = mainPosts.map((post) => post.title)\r\n        setMainPosts(mainTitles);\r\n    }\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => FilterAndSetMainPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(postTitle === \"\" && props.storyTitle) {\r\n            setPostTitle(props.storyTitle)\r\n        }\r\n    }, [props.storyTitle])\r\n\r\n    const handlePostTitle = (event) => {\r\n        setPostTitle(event.target.value);\r\n        props.setPostTitle(event.target.value);\r\n    }\r\n\r\n    const getTitleList = () => {\r\n        return mainPosts.map((postTitle:any) => <MenuItem key={postTitle} value={postTitle}>{postTitle}</MenuItem>)\r\n    }\r\n\r\n    const StyledSelect = styled.div`\r\n    .MuiInputBase-root{\r\n        color: white;\r\n      }\r\n    `\r\n\r\n    return (\r\n        <StyledSelect>\r\n            <Select\r\n            value={postTitle}\r\n            onChange={handlePostTitle}\r\n            >\r\n            {getTitleList()}\r\n            </Select>\r\n        </StyledSelect>\r\n    )\r\n}\r\n\r\nexport default ChaptersList;","import axios from \"axios\";\r\n\r\ninterface ContentProps {\r\n    _id?: string;\r\n    text: string;\r\n    title: string;\r\n}\r\n\r\nexport const createContent = async (\r\n    content: ContentProps\r\n  ) => {\r\n    try {\r\n      const savedContent = await axios.post(\r\n        `/content`,\r\n        content\r\n      )\r\n      return savedContent\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const updateContent = async (\r\n    content: ContentProps\r\n  ) => {\r\n    try {\r\n      const updatedContent = await axios.put(\r\n        `/content/${content._id}`,\r\n        content\r\n      )\r\n      return updatedContent\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const deleteContent = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedContent = await axios.delete(\r\n        `/content/${_id}`\r\n      )\r\n      return deletedContent\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import styled from 'styled-components';\r\n\r\nexport const StyledPanel = styled.div<{inputColor: string}>`\r\n    label{\r\n        /* color: white; */\r\n    }\r\n    .MuiInputBase-input{\r\n        /* color: #dfdfdf; */\r\n    }\r\n    input{\r\n        color: ${props => props.inputColor};\r\n    }\r\n`","import {\r\n    IsArray,\r\n    IsDateString,\r\n    IsNotEmpty,\r\n      IsString,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from './validation';\r\n\r\nexport class PostValidator {\r\n    constructor(post) {\r\n      this.date = post.date;\r\n      this.tags = post.tags;\r\n      this.title = post.title;\r\n      this.content = post.content;\r\n      this.comment = post.comment;\r\n      this.user = post.user;\r\n    }\r\n\r\n    @IsDateString()\r\n    date: string;\r\n        \r\n    @IsArray()\r\n    tags: string[];\r\n\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    title: string[];\r\n\r\n    content: any;\r\n\r\n    comment: any;\r\n\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    user: string;\r\n  }\r\n\r\n    const postValidate = (post, language) => {\r\n        const postValidator = new PostValidator(post);\r\n        const val = validateOrRejectExample(postValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                // console.log(data);\r\n                return getAllValidationMsg(data[0].constraints, language)\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default postValidate;","import {\r\n    IsNotEmpty,\r\n      IsString,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from '../validators/validation';\r\n\r\nexport class PostValidator {\r\n    constructor(post) {\r\n      this.title = post.title;\r\n    }\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    title: string[];\r\n  }\r\n\r\n    const postTitleValidate = (post, language) => {\r\n        const postValidator = new PostValidator(post);\r\n        const val = validateOrRejectExample(postValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                const allValidationMsg = getAllValidationMsg(data[0].constraints, language);\r\n                return allValidationMsg.length > 0 ? allValidationMsg[0] : \"\";\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default postTitleValidate;","import {\r\n    IsNotEmpty,\r\n      IsString,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from '../validators/validation';\r\n\r\nexport class PostValidator {\r\n    constructor(post) {\r\n      this.user = post.user;\r\n    }\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    user: string;\r\n  }\r\n\r\n    const postUserValidate = (post, language) => {\r\n        const postValidator = new PostValidator(post);\r\n        const val = validateOrRejectExample(postValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                const allValidationMsg = getAllValidationMsg(data[0].constraints, language);\r\n                return allValidationMsg.length > 0 ? allValidationMsg[0] : \"\";\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default postUserValidate;","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Popover, Select, Typography, useTheme } from '@material-ui/core';\r\nimport { createContent, deleteContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { createPost } from '../../APIRequests/Post';\r\nimport DatePicker from 'react-date-picker';\r\nimport { getUser, UserProps } from '../../APIRequests/User';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { StyledPanel } from './PostsPanel.styles';\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from '../validators/validatorMsg';\r\nimport postValidate from '../validators/postValidator';\r\nimport { theme as theme2 } from '../../App.styles';\r\nimport postTitleValidate from '../fieldValidators/postTitleValidator';\r\nimport postUserValidate from '../fieldValidators/postUserValidator';\r\nimport { StyledErrorMessage } from '../fieldValidators/fieldValidators.styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst PostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState('<p>...</p>');\r\n    const [title, setTitle] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n    const [date, setDate] = useState<any>(new Date());\r\n    const [user, setUser] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const layout = localStorage.getItem(\"blognellaTheme\") || \"default\";\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n    const [errors, setErrors] = useState({title: \"\", user: \"\"});\r\n    const [touched, setTouched] = useState<any>({});\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = (event) => {\r\n        event.persist();\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle\r\n        }\r\n        // const createdContent = createContent(content)\r\n        createContent(content)\r\n        .then(({ status, data }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Content not saved')\r\n                }\r\n                setContentId(data.content._id);\r\n                setAnchorEl(event.target);\r\n              })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(contentId){\r\n            onPostSave()\r\n            setContentId(undefined)\r\n        }\r\n    }, [contentId])\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const fetchUser = () => {\r\n      const userId = localStorage.getItem('blognellaId');\r\n      if(userId) {\r\n        getUser(userId)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setUser(user.nick);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n      }\r\n      \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n        fetchUser();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: date.toISOString(),\r\n            tags: tags,\r\n            title: title.trim(),\r\n            content: contentId,\r\n            user: user.trim()\r\n        }\r\n        postValidate(post, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                deleteContent(contentId || \"\")\r\n            } else {\r\n                createPost(post)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 409 && status !== 500) {\r\n                        props.history.push(\"/panel/posts\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        deleteContent(contentId || \"\")\r\n                    } else if(status === 409){\r\n                        setErrorMsg([lang === \"en\" ? \"Only one post of type 'About' is allowed\" : \"Tylko jeden wpis typu 'O mnie' jest dozwolony\"])\r\n                        deleteContent(contentId || \"\")\r\n                    } else {\r\n                      setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                      deleteContent(contentId || \"\")\r\n                  }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n    };\r\n\r\n    const onInputTitle = (value:string) => {\r\n      touched.title && postTitleValidate({title: value.trim()}, lang).then((data) => {setErrors({...errors, title: data})});\r\n    }\r\n\r\n    const onBlurTitle = (value:string) => {\r\n      postTitleValidate({title: value.trim()}, lang).then((data) => {setErrors({...errors, title: data}); setTouched({...touched, title: true})});\r\n    }\r\n\r\n    const onInputUser = (value:string) => {\r\n      touched.user && postUserValidate({user: value.trim()}, lang).then((data) => {setErrors({...errors, user: data})});\r\n    }\r\n\r\n    const onBlurUser = (value:string) => {\r\n      postUserValidate({user: value.trim()}, lang).then((data) => {setErrors({...errors, user: data}); setTouched({...touched, user: true})});\r\n    }\r\n\r\n    return (\r\n      <StyledPanel inputColor={theme2.text[layout]}>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Title\" : \"Tytuł\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your post title here\" : \"Proszę wpisz tytuł wpisu\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n                    onInput={(input:any) => onInputTitle(input.target.value)}\r\n                    onBlur={(input:any) => onBlurTitle(input.target.value)}\r\n         />\r\n         <StyledErrorMessage>{errors.title}</StyledErrorMessage>\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code',\r\n          height: 450\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n          <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your nick here\" : \"Proszę wpisz nick\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={user}\r\n                    onChange={(input) => setUser(input.target.value)}\r\n                    onInput={(input:any) => onInputUser(input.target.value)}\r\n                    onBlur={(input:any) => onBlurUser(input.target.value)}\r\n         />\r\n         <StyledErrorMessage>{errors.user}</StyledErrorMessage>\r\n\r\n        <div>{lang === \"en\" ? \"Date of publication\" : \"Data publikacji\"}</div>\r\n        <DatePicker\r\n            onChange={(val:any) => setDate(val)}\r\n            value={date}\r\n        />\r\n\r\n        <div>{lang === \"en\" ? \"Add tags to post\" : \"Dodaj etykiety do wpisu\"}</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <br/>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    {lang === \"en\" ? \"Save Post\" : \"Zapisz Wpis\"}\r\n         </Button>\r\n         <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => {setAnchorEl(null); setErrorMsg([]);}}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n          </Popover>\r\n      </StyledPanel>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(PostsPanel);","import { MenuItem, Select } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport PostsPanel from \"../components/PostsPanel/PostsPanel\";\r\nimport styled from 'styled-components';\r\n\r\nconst PanelPostsAddingPage = () => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const handlePostType = (event) => {\r\n        setPostType(event.target.value);\r\n    };\r\n\r\n    const StyledSelect = styled.div`\r\n    .MuiInputBase-root{\r\n        color: white;\r\n      }\r\n    `\r\n\r\n    return (\r\n        <>\r\n        <StyledSelect>\r\n          <Select\r\n            value={postType}\r\n            onChange={handlePostType}\r\n          >\r\n            <MenuItem value=\"Main\">{lang === \"en\" ? \"Main\" : \"Wpis\"}</MenuItem>\r\n            <MenuItem value=\"Chapter\">{lang === \"en\" ? \"Chapter\" : \"Rozdział\"}</MenuItem>\r\n            <MenuItem value=\"About\">{lang === \"en\" ? \"About\" : \"O mnie\"}</MenuItem>\r\n          </Select>\r\n        </StyledSelect>\r\n        <div></div>\r\n        {postType === \"Chapter\" ? <ChaptersList setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {postType === \"Main\" || postType === \"About\" || storyTitle ? <PostsPanel contentTitle={storyTitle || postType}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PanelPostsAddingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { deletePost, getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst PostsPanelList = (props) => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => setAllPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [props])\r\n\r\n      const onPostDelete = (post:PostProps) => {\r\n        deletePost(post._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Post not deleted')\r\n            }\r\n            fetchAllPosts()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allPosts.map((post:PostProps) => \r\n          <ListItem key={post._id}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/posts/${post._id}`,\r\n                // search: `?id=${post._id}`,\r\n                state: { myId: post._id }\r\n                }}> {post.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton style={{color: \"white\"}} edge=\"end\" aria-label=\"delete\" onClick={() => onPostDelete(post)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n            <Link to={\"/panel/posts/add\"}>{lang === \"en\" ? \"Add Post\" : \"Dodaj Wpis\"}</Link>\r\n            {/* <Link to={{\r\n            pathname: '/template',\r\n            search: '?query=abc',\r\n            state: { detail: response.data }\r\n            }}> My Link </Link> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostsPanelList);","import React from \"react\";\r\nimport PostsPanelList from \"../components/PostsPanelList/PostsPanelList\";\r\n\r\nconst PanelPostsPage = () => {\r\n\r\n\r\n    return (\r\n        <PostsPanelList/>\r\n    )\r\n}\r\n\r\nexport default PanelPostsPage","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Popover, Select, Typography, useTheme } from '@material-ui/core';\r\nimport { updateContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { updatePost } from '../../APIRequests/Post';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { StyledPanel } from './PostsPanel.styles';\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from '../validators/validatorMsg';\r\nimport postValidate from '../validators/postValidator';\r\nimport { theme as theme2 } from '../../App.styles';\r\nimport postTitleValidate from '../fieldValidators/postTitleValidator';\r\nimport postUserValidate from '../fieldValidators/postUserValidator';\r\nimport { StyledErrorMessage } from '../fieldValidators/fieldValidators.styles';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst UpdatePostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState(props.post.content[0].text || \"\");\r\n    const [title, setTitle] = useState(props.post.title || \"\");\r\n    const [tags, setTags] = useState(props.post.tags || []);\r\n    const [allTags, setAllTags] = useState([])\r\n    const [date, setDate] = useState<any>(new Date());\r\n    const [user, setUser] = useState(props.post.user);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const layout = localStorage.getItem(\"blognellaTheme\") || \"default\";\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n    const [errors, setErrors] = useState({title: \"\", user: \"\"});\r\n    const [touched, setTouched] = useState<any>({});\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = (event) => {\r\n        event.persist();\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle,\r\n            _id: props.post.content[0]._id\r\n        }\r\n        updateContent(content)\r\n        .then(({ status }) => {\r\n                if (status !== 200) {\r\n                  throw new Error('Error! Content not saved')\r\n                }\r\n                // setContentId(data.content._id);\r\n                setAnchorEl(event.target);\r\n                onPostSave()\r\n              })\r\n    }\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: date.toISOString(),\r\n            tags: tags,\r\n            title: title.trim(),\r\n            content: props.post.content[0]._id,\r\n            _id: props.post._id,\r\n            user: user.trim()\r\n        }\r\n\r\n        postValidate(post, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n            } else {\r\n                updatePost(post)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        props.history.push(\"/panel/posts\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                    } else {\r\n                      setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                  }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    const onInputTitle = (value:string) => {\r\n      touched.title && postTitleValidate({title: value.trim()}, lang).then((data) => {setErrors({...errors, title: data})});\r\n    }\r\n\r\n    const onBlurTitle = (value:string) => {\r\n      postTitleValidate({title: value.trim()}, lang).then((data) => {setErrors({...errors, title: data}); setTouched({...touched, title: true})});\r\n    }\r\n\r\n    const onInputUser = (value:string) => {\r\n      touched.user && postUserValidate({user: value.trim()}, lang).then((data) => {setErrors({...errors, user: data})});\r\n    }\r\n\r\n    const onBlurUser = (value:string) => {\r\n      postUserValidate({user: value.trim()}, lang).then((data) => {setErrors({...errors, user: data}); setTouched({...touched, user: true})});\r\n    }\r\n\r\n    return (\r\n        <StyledPanel inputColor={theme2.text[layout]}>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Title\" : \"Tytuł\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your post title here\" : \"Proszę wpisz tytuł wpisu\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={title}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n                    onInput={(input:any) => onInputTitle(input.target.value)}\r\n                    onBlur={(input:any) => onBlurTitle(input.target.value)}\r\n         />\r\n        <StyledErrorMessage>{errors.title}</StyledErrorMessage>\r\n\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code',\r\n          height: 450\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n        <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your nick here\" : \"Proszę wpisz nick\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={user}\r\n                    onChange={(input) => setUser(input.target.value)}\r\n                    onInput={(input:any) => onInputUser(input.target.value)}\r\n                    onBlur={(input:any) => onBlurUser(input.target.value)}\r\n        />\r\n        <StyledErrorMessage>{errors.user}</StyledErrorMessage>\r\n\r\n        <div>{lang === \"en\" ? \"Date of publication\" : \"Data publikacji\"}</div>\r\n        <DatePicker\r\n            onChange={(val:any) => setDate(val)}\r\n            value={date}\r\n        />\r\n\r\n\r\n        <div>{lang === \"en\" ? \"Add tags to post\" : \"Dodaj etykiety do wpisu\"}</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <br/>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    {lang === \"en\" ? \"Save Post\" : \"Zapisz post\"}\r\n         </Button>\r\n         <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => {setAnchorEl(null); setErrorMsg([]);}}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n          </Popover>\r\n      </StyledPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdatePostsPanel);","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, PostProps } from \"../APIRequests/Post\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport UpdatePostsPanel from \"../components/PostsPanel/UpdatePostsPanel\";\r\n\r\nconst PanelPostsUpdatingPage = (props) => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n    const [editedPost, setEditedPost] = useState<PostProps>();\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchEditedPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            const postTitle = post.content[0].title;\r\n            const customPostType = postTitle === \"Main\" || postTitle === \"About\" ? postTitle : \"Chapter\";\r\n            setPostType(customPostType);\r\n            customPostType === \"Chapter\" && setStoryTitle(postTitle);\r\n            setEditedPost(post);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedPost()\r\n    }, [])\r\n\r\n    const contentTitle = postType === \"Main\" || postType === \"About\" ? postType : storyTitle;\r\n\r\n    return (\r\n        <>\r\n        {/* <div>UPDATE PAGE</div> */}\r\n         {/* <Select\r\n          value={postType}\r\n          onChange={handlePostType}\r\n        >\r\n          <MenuItem value=\"Main\">Main</MenuItem>\r\n          <MenuItem value=\"Chapter\">Chapter</MenuItem>\r\n          <MenuItem value=\"About\">About</MenuItem>\r\n        </Select> */}\r\n        <div>{postType === \"Main\" ? (lang === \"en\" ? \"STORY\" : \"WPIS\") : postType === \"About\" ? (lang === \"en\" ? \"ABOUT\" : \"O MNIE\") : (lang === \"en\" ? \"CHAPTER\" : \"ROZDZIAŁ\")}</div>\r\n        {postType === \"Chapter\" ? <ChaptersList storyTitle={storyTitle} setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {(postType === \"Main\" || postType === \"About\" || storyTitle) && editedPost ? \r\n        <UpdatePostsPanel contentTitle={contentTitle} post={editedPost}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PanelPostsUpdatingPage);\r\n// export default PanelPostsUpdatingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { BookmarkProps, deleteBookmark, getBookmarks } from \"../../APIRequests/Bookmark\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst BookmarksPanel = (props) => {\r\n    const [allBookmarks, setAllBookmarks] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllBookmarks = () => {\r\n        getBookmarks()\r\n        .then(({ data: { bookmarks } }: BookmarkProps[] | any) => setAllBookmarks(bookmarks))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllBookmarks()\r\n    }, [props])\r\n\r\n      const onBookmarkDelete = (bookmark:BookmarkProps) => {\r\n        deleteBookmark(bookmark._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Bookmark not deleted')\r\n            }\r\n            fetchAllBookmarks()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allBookmarks.map((bookmark:BookmarkProps) => \r\n          <ListItem key={bookmark.title}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/bookmarks/${bookmark._id}`,\r\n                state: { myId: bookmark._id }\r\n            }}> {bookmark.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton style={{color: \"white\"}} edge=\"end\" aria-label=\"delete\" onClick={() => onBookmarkDelete(bookmark)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n\r\n            <Link to={\"/panel/bookmarks/add\"}>{lang === \"en\" ? \"Add Bookmark\" : \"Dodaj Zakładkę\"}</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(BookmarksPanel);","import React from \"react\";\r\nimport BookmarksPanel from \"../components/BookmarkPanel/BookmarksPanel\";\r\n\r\nconst PanelBookmarksPage = () => {\r\n    return <BookmarksPanel/>\r\n}\r\n\r\nexport default PanelBookmarksPage","import {\r\n    IsNotEmpty,\r\n    IsString,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from '../validators/validation';\r\n\r\n    class BookmarkValidator {\r\n    constructor(bookmark) {\r\n      this.title = bookmark.title;\r\n    }\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    title: string;\r\n  }\r\n\r\n    const bookmarkTitleValidate = (user, language) => {\r\n        const bookmarkValidator = new BookmarkValidator(user);\r\n        const val = validateOrRejectExample(bookmarkValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                const allValidationMsg = getAllValidationMsg(data[0].constraints, language);\r\n                return allValidationMsg.length > 0 ? allValidationMsg[0] : \"\";\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default bookmarkTitleValidate;","import {\r\n    IsNotEmpty,\r\n    IsString,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from './validation';\r\n\r\n    class BookmarkValidator {\r\n    constructor(bookmark) {\r\n      this.title = bookmark.title;\r\n    }\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    title: string;\r\n\r\n    post: any;\r\n  }\r\n\r\n    const bookmarkValidate = (user, language) => {\r\n        const bookmarkValidator = new BookmarkValidator(user);\r\n        const val = validateOrRejectExample(bookmarkValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                console.log(data);\r\n                return getAllValidationMsg(data[0].constraints, language)\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default bookmarkValidate;","import styled from 'styled-components';\r\n\r\nexport const StyledPanel = styled.div`\r\n    label{\r\n        /* color: white; */\r\n    }\r\n    .MuiInputBase-input{\r\n        /* color: #dfdfdf; */\r\n    }\r\n    input{\r\n        color: white;\r\n    }\r\n`","import { Button, MenuItem, Popover, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { createBookmark } from \"../../APIRequests/Bookmark\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport bookmarkTitleValidate from \"../fieldValidators/bookmarkTitleValidator\";\r\nimport { StyledErrorMessage } from \"../fieldValidators/fieldValidators.styles\";\r\nimport bookmarkValidate from \"../validators/bookmarkValidator\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { StyledPanel } from \"./BookmarkPanel.Styles\";\r\n\r\nconst BookmarkPanelAdd = (props) => {\r\n    const [postId, setPostId] = useState(\"\");\r\n    const [allPosts, setAllPosts] = useState<PostProps[]>([]);\r\n    const [bookmarkTitle, setBookmarkTitle] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n    const [errors, setErrors] = useState({title: \"\"});\r\n    const [touched, setTouched] = useState<any>({});\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n    const handlePostId = (event) => {\r\n        setPostId(event.target.value);\r\n    };\r\n\r\n    const onBookmarkSave = (event) => {\r\n        event.persist();\r\n        const bookmark = {\r\n            title: bookmarkTitle.trim(),\r\n            post: postId,\r\n        }\r\n        bookmarkValidate(bookmark, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                createBookmark(bookmark)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        props.history.push(\"/panel/bookmarks\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getPostsTitles = () => {\r\n        return allPosts.map((post) => <MenuItem key={post._id} value={post._id}>{post.title}</MenuItem>)\r\n    }\r\n\r\n    const StyledSelect = styled.div`\r\n    .MuiInputBase-root{\r\n        color: white;\r\n      }\r\n    `\r\n\r\n    const onInputTitle = (value:string) => {\r\n        touched.title && bookmarkTitleValidate({title: value.trim()}, lang).then((data) => {setErrors({...errors, title: data})});\r\n    }\r\n\r\n    const onBlurTitle = (value:string) => {\r\n        bookmarkTitleValidate({title: value.trim()}, lang).then((data) => {setErrors({...errors, title: data}); setTouched({...touched, title: true})});\r\n    }\r\n\r\n    return (\r\n        <StyledPanel>\r\n            <StyledSelect>\r\n                <Select\r\n                value={postId}\r\n                onChange={handlePostId}\r\n                >\r\n                    {getPostsTitles()}\r\n                </Select>\r\n            </StyledSelect>\r\n        \r\n            <div></div>\r\n            <TextField\r\n                label={lang === \"en\" ? \"Bookmark title\" : \"Tytuł zakładki\"}\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your bookmark title here\" : \"Proszę wpisz tytuł zakładki\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={(input) => setBookmarkTitle(input.target.value)}\r\n                onInput={(input:any) => onInputTitle(input.target.value)}\r\n                onBlur={(input:any) => onBlurTitle(input.target.value)}\r\n                />\r\n                <StyledErrorMessage>{errors.title}</StyledErrorMessage>\r\n                \r\n            <Button variant=\"contained\" color=\"primary\" onClick={onBookmarkSave}>\r\n                {lang === \"en\" ? \"Save Bookmark\" : \"Zapisz Zakładkę\"}\r\n            </Button>\r\n            <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n            </Popover>\r\n        </StyledPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(BookmarkPanelAdd);","import React from \"react\";\r\nimport BookmarkPanelAdd from \"../components/BookmarkPanel/BookmarkPanelAdd\";\r\n\r\nconst PanelBookmarkAddingPage = () => {\r\n   return <BookmarkPanelAdd/>\r\n}\r\n\r\nexport default PanelBookmarkAddingPage","import { Button, MenuItem, Popover, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { updateBookmark } from \"../../APIRequests/Bookmark\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport bookmarkTitleValidate from \"../fieldValidators/bookmarkTitleValidator\";\r\nimport { StyledErrorMessage } from \"../fieldValidators/fieldValidators.styles\";\r\nimport bookmarkValidate from \"../validators/bookmarkValidator\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { StyledPanel } from \"./BookmarkPanel.Styles\";\r\n\r\nconst BookmarkPanelUpdate = (props) => {\r\n    const [postId, setPostId] = useState(props.bookmark.post.length > 0 ? props.bookmark.post[0]._id : \"\");\r\n    const [allPosts, setAllPosts] = useState<PostProps[]>([]);\r\n    const [bookmarkTitle, setBookmarkTitle] = useState(props.bookmark.title || \"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n    const [errors, setErrors] = useState({title: \"\"});\r\n    const [touched, setTouched] = useState<any>({});\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n    const handlePostId = (event) => {\r\n        setPostId(event.target.value);\r\n    };\r\n\r\n    const onBookmarkSave = (event) => {\r\n        event.persist();\r\n        const bookmark = {\r\n            _id: props.bookmark._id,\r\n            title: bookmarkTitle.trim(),\r\n            post: postId,\r\n        }\r\n        bookmarkValidate(bookmark, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                updateBookmark(bookmark)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        props.history.push(\"/panel/bookmarks\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getPostsTitles = () => {\r\n        return allPosts.map((post) => <MenuItem  key={post._id} value={post._id}>{post.title}</MenuItem>)\r\n    }\r\n\r\n    const onInputTitle = (value:string) => {\r\n        touched.title && bookmarkTitleValidate({title: value.trim()}, lang).then((data) => {setErrors({...errors, title: data})});\r\n    }\r\n\r\n    const onBlurTitle = (value:string) => {\r\n        bookmarkTitleValidate({title: value.trim()}, lang).then((data) => {setErrors({...errors, title: data}); setTouched({...touched, title: true})});\r\n    }\r\n\r\n    return (\r\n        <StyledPanel>\r\n         <Select\r\n          value={postId}\r\n          onChange={handlePostId}\r\n        >\r\n            {getPostsTitles()}\r\n        </Select>\r\n        <div></div>\r\n        <TextField\r\n            label={lang === \"en\" ? \"Bookmark title\" : \"Tytuł zakladki\"}\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your bookmark title here\" : \"Proszę wpisz tytuł zakładki\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={bookmarkTitle}\r\n            onChange={(input) => setBookmarkTitle(input.target.value)}\r\n            onInput={(input:any) => onInputTitle(input.target.value)}\r\n            onBlur={(input:any) => onBlurTitle(input.target.value)}\r\n        />\r\n        <StyledErrorMessage>{errors.title}</StyledErrorMessage>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onBookmarkSave}>\r\n            {lang === \"en\" ? \"Save Bookmark\" : \"Zapisz Zakładkę\"}\r\n        </Button>\r\n        <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n        </Popover>\r\n        </StyledPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(BookmarkPanelUpdate);","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BookmarkProps, getBookmark } from \"../APIRequests/Bookmark\";\r\nimport BookmarkPanelUpdate from \"../components/BookmarkPanel/BookmarkPanelUpdate\";\r\n\r\nconst PanelBookmarkUpdatingPage = (props) => {\r\n    const [editedBookmark, setEditedBookmark] = useState<BookmarkProps>();\r\n\r\n    const fetchEditedBookmark = () => {\r\n        getBookmark(props.match.params.id)\r\n        .then(({ data: { bookmark } }: BookmarkProps | any) => {\r\n            setEditedBookmark(bookmark);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedBookmark()\r\n    }, [])\r\n\r\n    return editedBookmark ? <BookmarkPanelUpdate bookmark={editedBookmark}/> : <></>;\r\n}\r\n\r\nexport default withRouter(PanelBookmarkUpdatingPage);","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { deleteUser, getUsers, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst UsersPanel = (props) => {\r\n    const [allUsers, setAllUsers] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [actualAdminNick, setActualAdminNick] = useState(\"\");\r\n    \r\n    \r\n    const getBlognellaUser = () => {\r\n        if(allUsers.length > 0) {\r\n            const blognellaUser = localStorage.getItem(\"blognellaId\");\r\n            const actualAdmin:any = allUsers.find((user:any) => user._id === blognellaUser);\r\n            if(actualAdmin) {\r\n                setActualAdminNick(actualAdmin.nick || \"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const fetchAllUsers = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => setAllUsers(users))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBlognellaUser()\r\n    }, [allUsers])\r\n\r\n    useEffect(() => {\r\n        fetchAllUsers()\r\n    }, [props])\r\n\r\n      const onUserDelete = (user:UserProps) => {\r\n        deleteUser(user._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! User not deleted')\r\n            }\r\n            fetchAllUsers()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allUsers.map((user:UserProps) => \r\n          <ListItem key={user.nick}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/users/${user._id}`,\r\n                state: { myId: user._id }\r\n            }}> {user.nick} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            {user.nick !== actualAdminNick ? \r\n            <IconButton style={{color: \"white\"}} edge=\"end\" aria-label=\"delete\" onClick={() => onUserDelete(user)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n            : <div/>}\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n\r\n            <Link to={\"/panel/users/add\"}>{lang === \"en\" ? \"Add User\" : \"Dodaj użytkownika\"}</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UsersPanel);","import React from \"react\";\r\nimport UsersPanel from \"../components/UsersPanel/UsersPanel\";\r\n\r\nconst PanelUsersPage = () => {\r\n\r\n\r\n    return (\r\n        <UsersPanel/>\r\n    )\r\n}\r\n\r\nexport default PanelUsersPage","import styled from 'styled-components';\r\n\r\nexport const StyledPanel = styled.div`\r\n    label{\r\n        /* color: white; */\r\n    }\r\n    .MuiInputBase-input{\r\n        /* color: #dfdfdf; */\r\n    }\r\n    input{\r\n        color: white;\r\n    }\r\n`;","import { Button, MenuItem, Popover, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\nimport { StyledErrorMessage } from \"../fieldValidators/fieldValidators.styles\";\r\nimport userEmailValidate from \"../fieldValidators/userEmailValidator\";\r\nimport userLoginValidate from \"../fieldValidators/userLoginValidator\";\r\nimport userNickValidate from \"../fieldValidators/userNickValidator\";\r\nimport userPasswordValidate from \"../fieldValidators/userPasswordValidator\";\r\nimport userValidate from \"../validators/userValidator\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { StyledPanel } from \"./UserPanel.styles\";\r\n\r\nconst allUsersRoles = [\"loggedUser\", \"admin\"];\r\n\r\nconst UserPanelAdd = (props) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n    const [errors, setErrors] = useState({nick: \"\", login: \"\", password: \"\", email: \"\"});\r\n    const [touched, setTouched] = useState<any>({});\r\n\r\n    const handleUserRole = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n    const onUserSave = (event) => {\r\n        event.persist();\r\n        const user = {\r\n            nick: nick.trim(),\r\n            login: login.trim(),\r\n            password: password.trim(),\r\n            role: role,\r\n            email: email.trim(),\r\n        }\r\n        userValidate(user, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                createUser(user)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        props.history.push(\"/panel/users\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getUsersRoles = () => {\r\n        return allUsersRoles.map((role) => <MenuItem key={role} value={role}>{role}</MenuItem>)\r\n    }\r\n\r\n    const onInputNick = (value:string) => {\r\n        touched.nick && userNickValidate({nick: value.trim()}, lang).then((data) => {setErrors({...errors, nick: data})});\r\n    }\r\n\r\n    const onBlurNick = (value:string) => {\r\n    userNickValidate({nick: value.trim()}, lang).then((data) => {setErrors({...errors, nick: data}); setTouched({...touched, nick: true})});\r\n    }\r\n\r\n    const onInputLogin = (value:string) => {\r\n    touched.login && userLoginValidate({login: value.trim()}, lang).then((data) => {setErrors({...errors, login: data})});\r\n    }\r\n\r\n    const onBlurLogin = (value:string) => {\r\n    userLoginValidate({login: value.trim()}, lang).then((data) => {setErrors({...errors, login: data}); setTouched({...touched, login: true})});\r\n    }\r\n    \r\n    const onInputPassword = (value:string) => {\r\n    touched.password && userPasswordValidate({password: value.trim()}, lang).then((data) => {setErrors({...errors, password: data})});\r\n    }\r\n\r\n    const onBlurPassword = (value:string) => {\r\n    userPasswordValidate({password: value.trim()}, lang).then((data) => {setErrors({...errors, password: data}); setTouched({...touched, password: true})});\r\n    }\r\n\r\n    const onInputEmail = (value:string) => {\r\n    touched.email && userEmailValidate({email: value.trim()}, lang).then((data) => {setErrors({...errors, email: data})});\r\n    }\r\n\r\n    const onBlurEmail = (value:string) => {\r\n    userEmailValidate({email: value.trim()}, lang).then((data) => {setErrors({...errors, email: data}); setTouched({...touched, email: true})});\r\n    }\r\n\r\n\r\n    return (\r\n        <StyledPanel>\r\n            <TextField\r\n                label=\"Nick\"\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your nickname here\" : \"Proszę wpisz nick\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={(input) => setNick(input.target.value)}\r\n                onInput={(input:any) => onInputNick(input.target.value)}\r\n                onBlur={(input:any) => onBlurNick(input.target.value)}\r\n            />\r\n            <StyledErrorMessage>{errors.nick}</StyledErrorMessage>\r\n            <TextField\r\n                label=\"Login\"\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={(input) => setLogin(input.target.value)}\r\n                onInput={(input:any) => onInputLogin(input.target.value)}\r\n                onBlur={(input:any) => onBlurLogin(input.target.value)}\r\n            />\r\n            <StyledErrorMessage>{errors.login}</StyledErrorMessage>\r\n            <TextField\r\n                label={lang === \"en\" ? \"Password\" : \"Hasło\"}\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your password here\" : \"Proszę wpisz swoje hasło\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                type=\"password\"\r\n                onChange={(input) => setPassword(input.target.value)}\r\n                onInput={(input:any) => onInputPassword(input.target.value)}\r\n                onBlur={(input:any) => onBlurPassword(input.target.value)}\r\n            />\r\n            <StyledErrorMessage>{errors.password}</StyledErrorMessage>\r\n            <Select\r\n            value={role}\r\n            onChange={handleUserRole}\r\n            >\r\n                {getUsersRoles()}\r\n            </Select>\r\n\r\n            <div></div>\r\n            <TextField\r\n                label=\"Email\"\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your email here\" : \"Proszę wpisz swój email\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={(input) => setEmail(input.target.value)}\r\n                onInput={(input:any) => onInputEmail(input.target.value)}\r\n                onBlur={(input:any) => onBlurEmail(input.target.value)}\r\n            />\r\n            <StyledErrorMessage>{errors.email}</StyledErrorMessage>\r\n\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n                {lang === \"en\" ? \"Save User\" : \"Zapisz Użytkownika\"}\r\n            </Button>\r\n            <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n            </Popover>\r\n        </StyledPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(UserPanelAdd);","import React from \"react\";\r\nimport UserPanelAdd from \"../components/UsersPanel/UserPanelAdd\";\r\n\r\nconst PanelUsersAddingPage = () => {\r\n   return <UserPanelAdd/>\r\n}\r\n\r\nexport default PanelUsersAddingPage","import { Button, MenuItem, Popover, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { updateUser } from \"../../APIRequests/User\";\r\nimport { StyledErrorMessage } from \"../fieldValidators/fieldValidators.styles\";\r\nimport userEmailValidate from \"../fieldValidators/userEmailValidator\";\r\nimport userLoginValidate from \"../fieldValidators/userLoginValidator\";\r\nimport userNickValidate from \"../fieldValidators/userNickValidator\";\r\nimport userPasswordValidate from \"../fieldValidators/userPasswordValidator\";\r\nimport userValidate from \"../validators/userValidator\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { StyledPanel } from \"./UserPanel.styles\";\r\n\r\nconst allUsersRoles = [\"loggedUser\", \"admin\"];\r\n\r\nconst UserPanelUpdate = (props) => {\r\n    const [nick, setNick] = useState(props.user.nick);\r\n    const [login, setLogin] = useState(props.user.login);\r\n    const [password, setPassword] = useState(props.user.password);\r\n    const [role, setRole] = useState(props.user.role);\r\n    const [email, setEmail] = useState(props.user.email);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n    const [errors, setErrors] = useState({nick: \"\", login: \"\", password: \"\", email: \"\"});\r\n    const [touched, setTouched] = useState<any>({});\r\n\r\n    const handleUserRole = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n\r\n    const onUserSave = (event) => {\r\n        event.persist();\r\n        const user = {\r\n            _id: props.user._id,\r\n            nick: nick.trim(),\r\n            login: login.trim(),\r\n            password: password.trim(),\r\n            role: role,\r\n            email: email.trim(),\r\n        }\r\n        userValidate(user, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                updateUser(user)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        props.history.push(\"/panel/users\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getUsersRoles = () => {\r\n        return allUsersRoles.map((role) => <MenuItem key={role} value={role}>{role}</MenuItem>)\r\n    }\r\n\r\n    const onInputNick = (value:string) => {\r\n        touched.nick && userNickValidate({nick: value.trim()}, lang).then((data) => {setErrors({...errors, nick: data})});\r\n    }\r\n\r\n    const onBlurNick = (value:string) => {\r\n    userNickValidate({nick: value.trim()}, lang).then((data) => {setErrors({...errors, nick: data}); setTouched({...touched, nick: true})});\r\n    }\r\n\r\n    const onInputLogin = (value:string) => {\r\n    touched.login && userLoginValidate({login: value.trim()}, lang).then((data) => {setErrors({...errors, login: data})});\r\n    }\r\n\r\n    const onBlurLogin = (value:string) => {\r\n    userLoginValidate({login: value.trim()}, lang).then((data) => {setErrors({...errors, login: data}); setTouched({...touched, login: true})});\r\n    }\r\n    \r\n    const onInputPassword = (value:string) => {\r\n    touched.password && userPasswordValidate({password: value.trim()}, lang).then((data) => {setErrors({...errors, password: data})});\r\n    }\r\n\r\n    const onBlurPassword = (value:string) => {\r\n    userPasswordValidate({password: value.trim()}, lang).then((data) => {setErrors({...errors, password: data}); setTouched({...touched, password: true})});\r\n    }\r\n\r\n    const onInputEmail = (value:string) => {\r\n    touched.email && userEmailValidate({email: value.trim()}, lang).then((data) => {setErrors({...errors, email: data})});\r\n    }\r\n\r\n    const onBlurEmail = (value:string) => {\r\n    userEmailValidate({email: value.trim()}, lang).then((data) => {setErrors({...errors, email: data}); setTouched({...touched, email: true})});\r\n    }\r\n\r\n    return (\r\n        <StyledPanel>\r\n            <TextField\r\n                label=\"Nick\"\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your nickname here\" : \"Proszę wpisz nick\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                defaultValue={nick}\r\n                onChange={(input) => setNick(input.target.value)}\r\n                onInput={(input:any) => onInputNick(input.target.value)}\r\n                onBlur={(input:any) => onBlurNick(input.target.value)}\r\n            />\r\n            <StyledErrorMessage>{errors.nick}</StyledErrorMessage>\r\n            <TextField\r\n                label=\"Login\"\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                defaultValue={login}\r\n                onChange={(input) => setLogin(input.target.value)}\r\n                onInput={(input:any) => onInputLogin(input.target.value)}\r\n                onBlur={(input:any) => onBlurLogin(input.target.value)}\r\n            />\r\n            <StyledErrorMessage>{errors.login}</StyledErrorMessage>\r\n            <TextField\r\n                label={lang === \"en\" ? \"Password\" : \"Hasło\"}\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your password here\" : \"Proszę wpisz swoje hasło\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                type=\"password\"\r\n                defaultValue={password}\r\n                onChange={(input) => setPassword(input.target.value)}\r\n                onInput={(input:any) => onInputPassword(input.target.value)}\r\n                onBlur={(input:any) => onBlurPassword(input.target.value)}\r\n            />\r\n            <StyledErrorMessage>{errors.password}</StyledErrorMessage>\r\n            <Select\r\n            value={role}\r\n            onChange={handleUserRole}\r\n            >\r\n                {getUsersRoles()}\r\n            </Select>\r\n\r\n            <div></div>\r\n            <TextField\r\n                label=\"Email\"\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your email here\" : \"Proszę wpisz swój email\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                defaultValue={email}\r\n                onChange={(input) => setEmail(input.target.value)}\r\n                onInput={(input:any) => onInputEmail(input.target.value)}\r\n                onBlur={(input:any) => onBlurEmail(input.target.value)}\r\n            />\r\n            <StyledErrorMessage>{errors.email}</StyledErrorMessage>\r\n\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n                {lang === \"en\" ? \"Save User\" : \"Zapisz Użytkownika\"}\r\n            </Button>\r\n            <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n            </Popover>\r\n        </StyledPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(UserPanelUpdate);","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUser, UserProps } from \"../APIRequests/User\";\r\nimport UserPanelUpdate from \"../components/UsersPanel/UserPanelUpdate\";\r\n\r\nconst PanelUsersUpdatingPage = (props) => {\r\n    const [editedUser, setEditedUser] = useState<UserProps>();\r\n\r\n    const fetchEditedUser = () => {\r\n        getUser(props.match.params.id)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setEditedUser(user);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedUser()\r\n    }, [])\r\n\r\n    return editedUser ? <UserPanelUpdate user={editedUser}/> : <></>;\r\n}\r\n\r\nexport default withRouter(PanelUsersUpdatingPage);","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostComponent from \"../PostComponent/PostComponent\";\r\n\r\nconst PostView = (props) => {\r\n    const [post, setPost] = useState();\r\n    const [postChapters, setPostChapters] = useState([]);\r\n\r\n    const fetchPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            if(JSON.stringify(post) !== JSON.stringify({})) {\r\n                setPost(post);\r\n                fetchAllPosts(post.title)\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const fetchAllPosts = (storyTitle:string) => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allPostChapters = posts.filter((post) => post.content[0].title === storyTitle);\r\n            setPostChapters(allPostChapters || []);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n    }, [props])\r\n\r\n    return (\r\n        <>\r\n        {post ? <PostComponent post={post} postChapters={postChapters} /> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostView);","import React from \"react\";\r\nimport PostView from \"../components/PostView/PostView\";\r\n\r\nconst PostPage = () => {\r\n    return <PostView />\r\n}\r\n\r\nexport default PostPage","import React, {useState} from \"react\";\r\nimport { FormItem, LogicControls, StyledLoginForm } from \"./LoginForm.styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Popover, Typography } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUsers, updateUser, UserProps } from \"../../APIRequests/User\";\r\nimport { getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport userLoginValidate from \"../fieldValidators/userLoginValidator\";\r\nimport userPasswordValidate from \"../fieldValidators/userPasswordValidator\";\r\nimport userEmailValidate from \"../fieldValidators/userEmailValidator\";\r\nimport { StyledErrorMessage } from \"../fieldValidators/fieldValidators.styles\";\r\n\r\nconst LoginForgetForm = (props) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n    const [errors, setErrors] = useState({nick: \"\", login: \"\", password: \"\", email: \"\"});\r\n    const [touched, setTouched] = useState<any>({});\r\n\r\n    const updateUserPassword = (user) => {\r\n        const updatedSser = {\r\n            _id: user._id,\r\n            nick: user.nick,\r\n            login: user.login,\r\n            password: password.trim(),\r\n            role: user.role,\r\n            email: user.email,\r\n        }\r\n        updateUser(updatedSser);\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.persist();\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => {\r\n            const user = users.find((user) => user.login === login && user.email === email)\r\n            if(user && errors.password === \"\") {\r\n                updateUserPassword(user)\r\n                localStorage.setItem('blognellaId', user._id);\r\n                props.history.push('/');\r\n            } else {\r\n                setErrorMsg([lang === \"en\" ? \"Invalid data\" : \"Niepoprawne dane\"])\r\n                setAnchorEl(event.target);\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onInputLogin = (value:string) => {\r\n    touched.login && userLoginValidate({login: value.trim()}, lang).then((data) => {setErrors({...errors, login: data})});\r\n    }\r\n\r\n    const onBlurLogin = (value:string) => {\r\n    userLoginValidate({login: value.trim()}, lang).then((data) => {setErrors({...errors, login: data}); setTouched({...touched, login: true})});\r\n    }\r\n    \r\n    const onInputPassword = (value:string) => {\r\n    touched.password && userPasswordValidate({password: value.trim()}, lang).then((data) => {setErrors({...errors, password: data})});\r\n    }\r\n\r\n    const onBlurPassword = (value:string) => {\r\n    userPasswordValidate({password: value.trim()}, lang).then((data) => {setErrors({...errors, password: data}); setTouched({...touched, password: true})});\r\n    }\r\n\r\n    const onInputEmail = (value:string) => {\r\n    touched.email && userEmailValidate({email: value.trim()}, lang).then((data) => {setErrors({...errors, email: data})});\r\n    }\r\n\r\n    const onBlurEmail = (value:string) => {\r\n    userEmailValidate({email: value.trim()}, lang).then((data) => {setErrors({...errors, email: data}); setTouched({...touched, email: true})});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledLoginForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Email\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your email here\" : \"Proszę wpisz swój email\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setEmail(input.target.value)}\r\n                    onInput={(input:any) => onInputEmail(input.target.value)}\r\n                onBlur={(input:any) => onBlurEmail(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <StyledErrorMessage>{errors.email}</StyledErrorMessage>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    onInput={(input:any) => onInputLogin(input.target.value)}\r\n                    onBlur={(input:any) => onBlurLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <StyledErrorMessage>{errors.login}</StyledErrorMessage>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"New Password\" : \"Nowe hasło\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your new password here\" : \"Proszę wpisz swoje nowe hasło\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    type=\"password\"\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    onInput={(input:any) => onInputPassword(input.target.value)}\r\n                    onBlur={(input:any) => onBlurPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <StyledErrorMessage>{errors.password}</StyledErrorMessage>\r\n                <LogicControls>\r\n                    <div></div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                        {lang === \"en\" ? \"Update Password\" : \"Aktualizuj Hasło\"}\r\n                    </Button>\r\n                    <Popover\r\n                    id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                    open={Boolean(anchorEl)}\r\n                    anchorEl={anchorEl}\r\n                    onClose={() => setAnchorEl(null)}\r\n                    anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    >\r\n                        <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n                    </Popover>\r\n                </LogicControls>\r\n            </StyledLoginForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForgetForm);","import React from \"react\";\r\nimport LoginForgetForm from \"../components/LoginForm/LoginForgetForm\";\r\n\r\nconst LoginForgetPage = () => {\r\n    return <LoginForgetForm />\r\n}\r\n\r\nexport default LoginForgetPage","import { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst SearchList = (props) => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.title === props.search || post.tags.includes(props.search));\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [props.search])\r\n\r\n    const getListItems = () => {\r\n        return allPosts.map((post:PostProps) => \r\n        <ListItem key={post._id}>\r\n        <ListItemText\r\n           primary={ <Link to={{\r\n            pathname: `/ui/post/${post._id}`,\r\n            }}> {post.title} </Link> }\r\n        />\r\n      </ListItem>\r\n      );\r\n    }\r\n\r\n    return (\r\n        allPosts.length === 0 ? <div>{lang === \"en\" ? \"There is no post that meets the expected criteria\" : \"Nie ma wpisów spełniających podane kryteria\"}</div> :\r\n        <List>\r\n            {getListItems()}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default SearchList;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SearchList from \"../components/SearchComponent/SearchList\";\r\n\r\nconst SearchPage = (props) => {\r\n    return (props.location.state && props.location.state.search) ? <SearchList search={props.location.state.search}/> : <div>Nothing to search</div>\r\n}\r\n\r\nexport default withRouter(SearchPage);","// @ts-nocheck\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n// import App from \"./App\";\r\nimport LoginPage from \"./pages/loginPage\";\r\nimport MainViewPage from \"./pages/mainViewPage\";\r\n\r\nimport RegisterPage from \"./pages/registerPage\";\r\nimport PanelTagsPage from \"./pages/panelTagsPage\";\r\nimport PanelLayoutsPage from \"./pages/PanelLayoutsPage\";\r\nimport PanelPostsAddingPage from \"./pages/panelPostsAddingPage\";\r\nimport PanelPostsPage from \"./pages/panelPostsPage\";\r\nimport PanelPostsUpdatingPage from \"./pages/panelPostsUpdatingPage\";\r\nimport PanelBookmarksPage from \"./pages/panelBookmarkPage\";\r\nimport PanelBookmarkAddingPage from \"./pages/panelBookmarkAddingPage\";\r\nimport PanelBookmarkUpdatingPage from \"./pages/panelBookmarkUpdatingPage\";\r\nimport PanelUsersPage from \"./pages/panelUsersPage\";\r\nimport PanelUsersAddingPage from \"./pages/panelUsersAddingPage\";\r\nimport PanelUsersUpdatingPage from \"./pages/panelUsersUpdatingPage\";\r\nimport PostPage from \"./pages/postPage\";\r\nimport LoginForgetPage from \"./pages/loginForgetPage\";\r\nimport SearchPage from \"./pages/searchPage\";\r\n\r\n// export default <Router history={hashHistory}>\r\n//   <Route path=\"/\" component={App}>\r\n//     <IndexRoute component={AppSplash}/>\r\n//     <Route path=\"demo\" component={AppDemo}/>\r\n//   </Route>\r\n// </Router>\r\n\r\nexport default function BasicExample() {\r\n    return (\r\n      <Router>\r\n          <Switch>\r\n             <Route exact path=\"/\"> <App page={MainViewPage} /> </Route>\r\n             <Route path=\"/register\"><App page={RegisterPage} /></Route>\r\n             <Route path=\"/login/forget\"><App page={LoginForgetPage}/></Route>\r\n             <Route path=\"/login\"><App page={LoginPage}/></Route>\r\n             <Route path=\"/search\"><App page={SearchPage}/></Route>\r\n             <Route path=\"/ui/post/:id\"><App page={PostPage}/></Route>\r\n             <Route path=\"/panel/tags\"><App page={PanelTagsPage}/></Route>\r\n             <Route path=\"/panel/posts/add\"><App page={PanelPostsAddingPage}/></Route>\r\n             <Route path=\"/panel/posts/:id\"><App page={PanelPostsUpdatingPage}/></Route>\r\n             <Route path=\"/panel/posts\"><App page={PanelPostsPage}/></Route>\r\n             <Route path=\"/panel/bookmarks/add\"><App page={PanelBookmarkAddingPage}/></Route>\r\n             <Route path=\"/panel/bookmarks/:id\"><App page={PanelBookmarkUpdatingPage}/></Route>\r\n             <Route path=\"/panel/bookmarks\"><App page={PanelBookmarksPage}/></Route>\r\n             <Route path=\"/panel/users/add\"><App page={PanelUsersAddingPage}/></Route>\r\n             <Route path=\"/panel/users/:id\"><App page={PanelUsersUpdatingPage}/></Route>\r\n             <Route path=\"/panel/users\"><App page={PanelUsersPage}/></Route>\r\n             <Route path=\"/panel/layouts\"><App page={PanelLayoutsPage}/></Route>\r\n           </Switch>\r\n      </Router>\r\n    );\r\n  }","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import App from './App'\nimport './index.css'\nimport App from './router';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)"],"sourceRoot":""}