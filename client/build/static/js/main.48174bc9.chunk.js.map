{"version":3,"sources":["App.styles.tsx","components/DefaultView/DefaultView.styles.tsx","components/DefaultView/DefaultViewLinks.tsx","components/DefaultView/DefaultView.tsx","components/DefaultView/DefaultViewAbout.tsx","components/MainView/MainView.styles.tsx","App.tsx","components/LoginForm/LoginForm.styles.tsx","components/LoginForm/LoginForm.tsx","pages/loginPage.tsx","components/MainView/MainView.tsx","pages/mainViewPage.tsx","components/RegisterForm/RegisterForm.styles.tsx","APIRequests/User.tsx","components/RegisterForm/RegisterForm.tsx","pages/registerPage.tsx","APIRequests/Content.tsx","APIRequests/Post.tsx","APIRequests/Tag.tsx","pages/testPage.tsx","components/TagsPanel/TagsPanel.tsx","pages/panelTagsPage.tsx","components/ChaptersList/ChaptersList.tsx","components/PostsPanel/PostsPanel.tsx","pages/panelPostsAddingPage.tsx","components/PostsPanelList/PostsPanelList.tsx","pages/panelPostsPage.tsx","components/PostsPanel/UpdatePostsPanel.tsx","pages/panelPostsUpdatingPage.tsx","router.tsx","index.tsx"],"names":["StyledMain","styled","main","Logo","div","LogoContainer","LinksContainer","LinkElement","LoginRegisterContainer","MainViewTabsContainer","AboutSection","MainContentContainer","DefaultViewLinks","to","DefaultView","DefaultViewAbout","MainViewContainer","App","props","Content","page","StyledLoginForm","FormItem","LogicControls","LoginForm","useState","login","setLogin","password","setPassword","TextField","id","label","style","margin","placeholder","fullWidth","InputLabelProps","shrink","onChange","input","target","value","Button","variant","color","onClick","console","log","LoginPage","MainView","MainViewPage","StyledRegisterForm","createUser","user","a","axios","post","savedUser","Error","RegisterForm","nick","setNick","email","setEmail","role","then","status","data","catch","err","RegisterPage","createContent","content","savedContent","getPosts","get","posts","getPost","_id","createPost","savedPost","deletePost","delete","deletedPost","getTags","tags","createTag","tag","saveTag","deleteTag","deletedTag","useStyles","makeStyles","chips","display","flexWrap","chip","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","TestPage","classes","useTheme","setData","title","setTitle","setTags","undefined","contentId","setContentId","allTags","setAllTags","useEffect","onPostSave","date","Date","initialValue","init","plugins","toolbar","e","getContent","handleEditorChange","Select","labelId","multiple","event","Input","renderValue","selected","className","map","Chip","key","MenuItem","text","TagsPanel","setTag","fetchAllTags","List","ListItem","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","onTagDelete","PanelTagsPage","ChaptersList","mainPosts","setMainPosts","postTitle","setPostTitle","fetchAllPosts","storyTitle","FilterAndSetMainPosts","mainTitles","filter","PostsPanel","contentTitle","PanelPostsAddingPage","postType","setPostType","setStoryTitle","PostsPanelList","allPosts","setAllPosts","pathname","state","myId","onPostDelete","PanelPostsPage","UpdatePostsPanel","withRouter","editedPost","setEditedPost","match","params","customPostType","BasicExample","exact","path","PanelPostsUpdatingPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48174bc9.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const StyledMain = styled.main`\r\n    max-width: 824px;\r\n    margin: 0rem auto 0rem auto;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Logo = styled.div`\r\n    font-family: Roboto;\r\n    font-size: 3.5rem;\r\n`;\r\n\r\nexport const LogoContainer = styled.div`\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n`;\r\n\r\nexport const LinksContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const LinkElement = styled.div`\r\n    color: #ffffff;\r\n    margin: 1rem;\r\n`;\r\n\r\nexport const LoginRegisterContainer = styled.div`\r\n    display:flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const MainViewTabsContainer = styled.div`\r\n    display:flex;\r\n    background-color:#292929;\r\n`;\r\n\r\nexport const AboutSection = styled.div`\r\n    width:20%;\r\n    border-left: 1px solid black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0rem 1rem;\r\n`;\r\n\r\nexport const MainContentContainer = styled.div`\r\n    display: flex;\r\n    min-height: 40rem;\r\n    background-color: grey;\r\n    justify-content: space-between;\r\n    flex-grow: 1;\r\n    padding-top: 1rem;\r\n`;","import React from \"react\";\r\nimport { LinkElement, LoginRegisterContainer, MainViewTabsContainer } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DefaultViewLinks = () => {\r\n\r\n    return (\r\n        <>\r\n            <LoginRegisterContainer>\r\n                <LinkElement><Link to={\"/login\"}>Login</Link></LinkElement>\r\n                <LinkElement><Link to={\"/register\"}>Register</Link></LinkElement>\r\n            </LoginRegisterContainer>\r\n\r\n            <MainViewTabsContainer>\r\n                <LinkElement><Link to={\"/\"}>Home</Link></LinkElement>\r\n                <LinkElement><Link to={\"/\"}>Home</Link></LinkElement>\r\n            </MainViewTabsContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultViewLinks;","import React from \"react\";\r\nimport { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\nimport DefaultViewLinks from \"./DefaultViewLinks\";\r\n// import { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\n\r\nconst DefaultView = () => {\r\n    return (\r\n        <>\r\n        <LogoContainer>\r\n            <Logo>Kiranella</Logo>\r\n            <LinksContainer>\r\n                    <div>\r\n                    {/* <LinkElement><Link color=\"white\" to={\"/login\"}>Login</Link></LinkElement>\r\n                    <LinkElement><Link to={\"/register\"}>Register</Link></LinkElement> */}\r\n                    </div>\r\n            </LinksContainer>\r\n        </LogoContainer>\r\n        <DefaultViewLinks/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultView;","import React from \"react\";\r\nimport { AboutSection } from \"./DefaultView.styles\";\r\n\r\n\r\nconst DefaultViewAbout = () => {\r\n    return (\r\n        <AboutSection>\r\n            <div>About</div>\r\n            <div>Example</div>\r\n            \r\n        </AboutSection>\r\n    )\r\n}\r\n\r\nexport default DefaultViewAbout;","import styled from 'styled-components'\r\n\r\nexport const MainViewContainer = styled.div`\r\n    /* display: flex; */\r\n    /* justify-content: space-between; */\r\n    margin: 0rem 1rem;\r\n    width:80%;\r\n`;","import React from 'react'\nimport { StyledMain } from './App.styles';\nimport DefaultView from './components/DefaultView/DefaultView'\nimport { MainContentContainer } from './components/DefaultView/DefaultView.styles';\nimport DefaultViewAbout from './components/DefaultView/DefaultViewAbout';\n// import TodoItem from './components/TodoItem'\n// import AddTodo from './components/AddTodo'\n// import { getTodos, addTodo, updateTodo, deleteTodo } from './API'\n// import LoginPage from './pages/loginPage'\n// import RegisterForm from './components/RegisterForm/RegisterForm'\n\n// import Content from './router';\n\nimport './components/globalStyles/globalStyles.css';\nimport { MainViewContainer } from './components/MainView/MainView.styles';\n\nconst App: React.FC = (props:any) => {\n//   const [todos, setTodos] = useState<ITodo[]>([])\n\n//   useEffect(() => {\n//     fetchTodos()\n//   }, [])\n\n//   const fetchTodos = (): void => {\n//     getTodos()\n//     .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\n//     .catch((err: Error) => console.log(err))\n//   }\n\n//  const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\n//    e.preventDefault()\n//    addTodo(formData)\n//    .then(({ status, data }) => {\n//     if (status !== 201) {\n//       throw new Error('Error! Todo not saved')\n//     }\n//     setTodos(data.todos)\n//   })\n//   .catch((err) => console.log(err))\n// }\n\n//   const handleUpdateTodo = (todo: ITodo): void => {\n//     updateTodo(todo)\n//     .then(({ status, data }) => {\n//         if (status !== 200) {\n//           throw new Error('Error! Todo not updated')\n//         }\n//         setTodos(data.todos)\n//       })\n//       .catch((err) => console.log(err))\n//   }\n\n//   const handleDeleteTodo = (_id: string): void => {\n//     deleteTodo(_id)\n//     .then(({ status, data }) => {\n//         if (status !== 200) {\n//           throw new Error('Error! Todo not deleted')\n//         }\n//         setTodos(data.todos)\n//       })\n//       .catch((err) => console.log(err))\n//   }\n  // const Content = props.page;\n  const Content = props.page;\n  return (\n    <StyledMain>\n      {/* <LoginPage/> */}\n      <DefaultView/>\n      <MainContentContainer>\n        <MainViewContainer>\n          <Content/>\n        </MainViewContainer>\n        <DefaultViewAbout/>\n      </MainContentContainer>\n\n      \n\n      {/* <RegisterForm/> */}\n\n      {/* <h1>My Todos</h1>\n      <AddTodo saveTodo={handleSaveTodo} />\n      {todos.map((todo: ITodo) => (\n        <TodoItem\n          key={todo._id}\n          updateTodo={handleUpdateTodo}\n          deleteTodo={handleDeleteTodo}\n          todo={todo}\n        />\n      ))} */}\n    </StyledMain>\n  )\n}\n\nexport default App\n","import styled from 'styled-components'\r\n\r\nexport const StyledLoginForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #8a8a8a;;\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n`;\r\n","import React, {useState} from \"react\";\r\nimport { FormItem, LogicControls, StyledLoginForm } from \"./LoginForm.styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst LoginForm = () => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const onSubmit = () => {\r\n        console.log(login);\r\n        console.log(password);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledLoginForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Password\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your password here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div>Zapomniales hasla?</div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                    Login\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledLoginForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport LoginForm from \"../components/LoginForm/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n    return <LoginForm/>\r\n}\r\n\r\nexport default LoginPage","import React from \"react\";\r\n\r\nconst MainView = () => {\r\n\r\n    return (\r\n        <>\r\n            <div>Tutaj posty</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainView;","import React from \"react\";\r\nimport MainView from \"../components/MainView/MainView\";\r\n\r\nconst MainViewPage = () => {\r\n    return <MainView/>\r\n}\r\n\r\nexport default MainViewPage","import styled from 'styled-components'\r\n\r\nexport const StyledRegisterForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #8a8a8a;;\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n`;\r\n","import axios, { AxiosResponse } from \"axios\";\r\n\r\ninterface UserProps {\r\n    _id?: string;\r\n    nick: string;\r\n    login: string;\r\n    password: string;\r\n    email: string;\r\n    role?: string;\r\n}\r\n\r\nexport const createUser = async (\r\n    user: UserProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const savedUser: AxiosResponse<ApiDataType> = await axios.post(\r\n        `/user`,\r\n        user\r\n      )\r\n      return savedUser\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import React, {useState} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { FormItem, LogicControls, StyledRegisterForm } from \"./RegisterForm.styles\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RegisterForm = () => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const onUserSave = () => {\r\n        console.log(nick);\r\n        console.log(login);\r\n        console.log(password);\r\n        console.log(email);\r\n        const user = {\r\n            nick:nick,\r\n            login:login,\r\n            password:password,\r\n            email:email,\r\n            role:\"loggedUser\"\r\n        }\r\n        createUser(user)\r\n        .then(({ status, data }) => {\r\n            console.log(\"zwrotna data\");\r\n            console.log(data);\r\n            if (status !== 201) {\r\n              throw new Error('Error! User not saved')\r\n            }\r\n            // setTodos(data.todos)\r\n          })\r\n          .catch((err) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <StyledRegisterForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your nickname here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setNick(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Password\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your password here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Email\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your email here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setEmail(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div>Have already account? \r\n                    <Link to={\"/login\"}>Login</Link>\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n                    Register\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledRegisterForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","import React from \"react\";\r\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n    return <RegisterForm/>\r\n}\r\n\r\nexport default RegisterPage","import axios from \"axios\";\r\n\r\ninterface ContentProps {\r\n    _id?: string;\r\n    text: string;\r\n    title: string;\r\n}\r\n\r\nexport const createContent = async (\r\n    content: ContentProps\r\n  ) => {\r\n    try {\r\n      const savedContent = await axios.post(\r\n        `/content`,\r\n        content\r\n      )\r\n      return savedContent\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport interface PostProps {\r\n    _id?: string;\r\n    date: Date;\r\n    tags: string[];\r\n    title: string;\r\n    content: any;\r\n}\r\n\r\nexport const getPosts = async () => {\r\n    try {\r\n      const posts = await axios.get(\r\n         '/posts'\r\n      )\r\n      return posts\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getPost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const post = await axios.get(\r\n        `/post/${_id}`\r\n      )\r\n      return post\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createPost = async (\r\n    post: PostProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const savedPost: AxiosResponse<ApiDataType> = await axios.post(\r\n        `/post`,\r\n        post\r\n      )\r\n      return savedPost\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deletePost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedPost = await axios.delete(\r\n        `/post/${_id}`\r\n      )\r\n      return deletedPost\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import axios from \"axios\"\r\n\r\nexport interface TagProps {\r\n    _id?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getTags = async () => {\r\n    try {\r\n      const tags = await axios.get(\r\n         '/tags'\r\n      )\r\n      return tags\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const createTag = async (\r\n    tag: TagProps\r\n  ) => {\r\n    try {\r\n      const saveTag = await axios.post(\r\n        '/tag',\r\n        tag\r\n      )\r\n      return saveTag\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteTag = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedTag = await axios.delete(\r\n        `/tag/${_id}`\r\n      )\r\n      return deletedTag\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Select, useTheme } from '@material-ui/core';\r\nimport { createContent } from '../APIRequests/Content';\r\nimport { createPost } from '../APIRequests/Post';\r\nimport { getTags, TagProps } from '../APIRequests/Tag';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\n\r\n\r\nconst TestPage = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState('<p>React is really <em>nice</em>!</p>');\r\n    const [title, setTitle] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = () => {\r\n        const content = {\r\n            text: data,\r\n            title: \"Post\"\r\n        }\r\n        // const createdContent = createContent(content)\r\n        createContent(content)\r\n        .then(({ status, data }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Todo not saved')\r\n                }\r\n                setContentId(data.content._id);\r\n              })\r\n        // return createdContent;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(contentId){\r\n            onPostSave()\r\n            setContentId(undefined)\r\n        }\r\n    }, [contentId])\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: new Date(),\r\n            tags: tags,\r\n            title: title,\r\n            content: contentId,\r\n        }\r\n        createPost(post);\r\n    }\r\n\r\n    // const allTags = [\r\n    //     'tag1','tag2','tag3'\r\n    //   ];\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n        \r\n    return (\r\n        <>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Title\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n\r\n\r\n        <div>Add tags to post</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    Save Post\r\n         </Button>\r\n      </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default TestPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { createTag, deleteTag, getTags, TagProps } from \"../../APIRequests/Tag\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst TagsPanel = () => {\r\n    const [tag, setTag] = useState(\"\");\r\n    const [allTags, setAllTags] = useState([]);\r\n\r\n    const fetchAllTags = () => {\r\n        getTags()\r\n        .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onTagSave = () => {\r\n        createTag({name: tag})\r\n        // .then(({ status, data }) => {\r\n        .then(({ status }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Tag not saved')\r\n                }\r\n                fetchAllTags();\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags()\r\n    }, [])\r\n\r\n      const onTagDelete = (tag:TagProps) => {\r\n        deleteTag(tag._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Tag not deleted')\r\n            }\r\n            fetchAllTags()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allTags.map((tag:TagProps) => \r\n          <ListItem key={tag.name}>\r\n          <ListItemText\r\n            primary={tag.name}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onTagDelete(tag)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n            <TextField\r\n            label=\"Tag\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your tag here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setTag(input.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onTagSave}>\r\n                    Add Tag\r\n            </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TagsPanel;","import React from \"react\";\r\nimport TagsPanel from \"../components/TagsPanel/TagsPanel\";\r\n\r\nconst PanelTagsPage = () => {\r\n    return <TagsPanel/>\r\n}\r\n\r\nexport default PanelTagsPage","import React, {useState, useEffect} from \"react\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst ChaptersList = (props) => {\r\n    const [mainPosts, setMainPosts] = useState<String[]>([]);\r\n    const [postTitle, setPostTitle] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(postTitle === \"\" && props.storyTitle) {\r\n            setPostTitle(props.storyTitle)\r\n        }\r\n    }, [props.storyTitle])\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => FilterAndSetMainPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const FilterAndSetMainPosts = (posts:PostProps[]) => {\r\n        const mainPosts = posts.filter((post:PostProps) => post.content[0].title === \"Main\");\r\n        const mainTitles = mainPosts.map((post) => post.title)\r\n        console.log(mainTitles);\r\n        setMainPosts(mainTitles);\r\n    }\r\n\r\n    const handlePostTitle = (event) => {\r\n        setPostTitle(event.target.value);\r\n        props.setPostTitle(event.target.value);\r\n    }\r\n\r\n    const getTitleList = () => {\r\n        return mainPosts.map((postTitle:any) => <MenuItem key={postTitle} value={postTitle}>{postTitle}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n            value={postTitle}\r\n            onChange={handlePostTitle}\r\n            >\r\n            {getTitleList()}\r\n            </Select>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChaptersList;","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Select, useTheme } from '@material-ui/core';\r\nimport { createContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { createPost } from '../../APIRequests/Post';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst PostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState('<p>React is really <em>nice</em>!</p>');\r\n    const [title, setTitle] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = () => {\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle\r\n        }\r\n        // const createdContent = createContent(content)\r\n        createContent(content)\r\n        .then(({ status, data }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Todo not saved')\r\n                }\r\n                setContentId(data.content._id);\r\n              })\r\n        // return createdContent;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(contentId){\r\n            onPostSave()\r\n            setContentId(undefined)\r\n        }\r\n    }, [contentId])\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: new Date(),\r\n            tags: tags,\r\n            title: title,\r\n            content: contentId,\r\n        }\r\n        createPost(post);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    return (\r\n        <>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Title\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n\r\n\r\n        <div>Add tags to post</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    Save Post\r\n         </Button>\r\n      </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default PostsPanel","import { MenuItem, Select } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport PostsPanel from \"../components/PostsPanel/PostsPanel\";\r\n\r\nconst PanelPostsAddingPage = () => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n\r\n    const handlePostType = (event) => {\r\n        setPostType(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postType}\r\n          onChange={handlePostType}\r\n        >\r\n          <MenuItem value=\"Main\">Main</MenuItem>\r\n          <MenuItem value=\"Chapter\">Chapter</MenuItem>\r\n          <MenuItem value=\"About\">About</MenuItem>\r\n        </Select>\r\n        <div></div>\r\n        {postType === \"Chapter\" ? <ChaptersList setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {postType === \"Main\" || postType === \"About\" || storyTitle ? <PostsPanel contentTitle={storyTitle || postType}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PanelPostsAddingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deletePost, getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst PostsPanelList = () => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => setAllPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n      const onPostDelete = (post:PostProps) => {\r\n        deletePost(post._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Post not deleted')\r\n            }\r\n            fetchAllPosts()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allPosts.map((post:PostProps) => \r\n          <ListItem key={post._id}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/posts/${post._id}`,\r\n                // search: `?id=${post._id}`,\r\n                state: { myId: post._id }\r\n                }}> {post.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onPostDelete(post)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n            <Link to={\"/panel/posts/add\"}>AddPost</Link>\r\n            {/* <Link to={{\r\n            pathname: '/template',\r\n            search: '?query=abc',\r\n            state: { detail: response.data }\r\n            }}> My Link </Link> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostsPanelList;","import React from \"react\";\r\nimport PostsPanelList from \"../components/PostsPanelList/PostsPanelList\";\r\n\r\nconst PanelPostsPage = () => {\r\n\r\n\r\n    return (\r\n        <PostsPanelList/>\r\n    )\r\n}\r\n\r\nexport default PanelPostsPage","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Select, useTheme } from '@material-ui/core';\r\nimport { createContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { createPost } from '../../APIRequests/Post';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst UpdatePostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState('<p>React is really <em>nice</em>!</p>');\r\n    const [title, setTitle] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = () => {\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle\r\n        }\r\n        createContent(content)\r\n        .then(({ status, data }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Todo not saved')\r\n                }\r\n                setContentId(data.content._id);\r\n              })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(contentId){\r\n            onPostSave()\r\n            setContentId(undefined)\r\n        }\r\n    }, [contentId])\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: new Date(),\r\n            tags: tags,\r\n            title: title,\r\n            content: contentId,\r\n        }\r\n        createPost(post);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    return (\r\n        <>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Title\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={title}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n\r\n\r\n        <div>Add tags to post</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    Save Post\r\n         </Button>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default UpdatePostsPanel","import { MenuItem, Select } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, PostProps } from \"../APIRequests/Post\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport UpdatePostsPanel from \"../components/PostsPanel/UpdatePostsPanel\";\r\n\r\nconst PanelPostsUpdatingPage = (props) => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n    // const [postTitle, setPostTitle] = useState(\"\");\r\n    const [editedPost, setEditedPost] = useState<PostProps>();\r\n\r\n    const handlePostType = (event) => {\r\n        setPostType(event.target.value);\r\n    };\r\n\r\n    const fetchEditedPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            // setEditedPost(post)\r\n            const postTitle = post.content[0].title;\r\n            const customPostType = postTitle === \"Main\" || postTitle === \"About\" ? postTitle : \"Chapter\";\r\n            setPostType(customPostType);\r\n            customPostType === \"Chapter\" && setStoryTitle(postTitle);\r\n            setEditedPost(post);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedPost()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <div>UPDATE</div>\r\n         <Select\r\n          value={postType}\r\n          onChange={handlePostType}\r\n        >\r\n          <MenuItem value=\"Main\">Main</MenuItem>\r\n          <MenuItem value=\"Chapter\">Chapter</MenuItem>\r\n          <MenuItem value=\"About\">About</MenuItem>\r\n        </Select>\r\n        <div></div>\r\n        {postType === \"Chapter\" ? <ChaptersList storyTitle={storyTitle} setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {(postType === \"Main\" || postType === \"About\" || storyTitle) && editedPost ? \r\n        <UpdatePostsPanel contentTitle={storyTitle || postType} post={editedPost}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PanelPostsUpdatingPage);\r\n// export default PanelPostsUpdatingPage","// @ts-nocheck\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n// import App from \"./App\";\r\nimport LoginPage from \"./pages/loginPage\";\r\nimport MainViewPage from \"./pages/mainViewPage\";\r\n\r\nimport RegisterPage from \"./pages/registerPage\";\r\nimport TestPage from \"./pages/testPage\";\r\nimport PanelTagsPage from \"./pages/panelTagsPage\";\r\nimport PanelPostsAddingPage from \"./pages/panelPostsAddingPage\";\r\nimport PanelPostsPage from \"./pages/panelPostsPage\";\r\nimport PanelPostsUpdatingPage from \"./pages/panelPostsUpdatingPage\";\r\n\r\n// export default <Router history={hashHistory}>\r\n//   <Route path=\"/\" component={App}>\r\n//     <IndexRoute component={AppSplash}/>\r\n//     <Route path=\"demo\" component={AppDemo}/>\r\n//   </Route>\r\n// </Router>\r\n\r\nexport default function BasicExample() {\r\n    return (\r\n      <Router>\r\n          <Switch>\r\n             <Route exact path=\"/\"> <App page={MainViewPage} /> </Route>\r\n             {/* <Route\r\n              exact path='/'\r\n              render={(props) => (\r\n                <App page={MainViewPage} />\r\n              )}\r\n            /> */}\r\n\r\n             <Route path=\"/register\"><App page={RegisterPage} /></Route>\r\n             <Route path=\"/login\"><App page={LoginPage}/></Route>\r\n             <Route path=\"/test\"><App page={TestPage}/></Route>\r\n             <Route path=\"/panel/tags\"><App page={PanelTagsPage}/></Route>\r\n             <Route path=\"/panel/posts/add\"><App page={PanelPostsAddingPage}/></Route>\r\n             <Route path=\"/panel/posts/:id\"><App page={PanelPostsUpdatingPage}/></Route>\r\n             <Route path=\"/panel/posts\"><App page={PanelPostsPage}/></Route>\r\n             <Route path=\"/panel2\"><App page={PanelTagsPage}/></Route>\r\n           </Switch>\r\n      </Router>\r\n    );\r\n  }","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import App from './App'\nimport './index.css'\nimport App from './router';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)"],"sourceRoot":""}