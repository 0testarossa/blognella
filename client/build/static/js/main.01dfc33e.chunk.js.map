{"version":3,"sources":["App.styles.tsx","components/DefaultView/DefaultView.styles.tsx","APIRequests/User.tsx","APIRequests/Bookmark.tsx","components/DefaultView/DefaultViewTabs.tsx","components/DefaultView/DefaultViewLinks.tsx","components/DefaultView/DefaultView.tsx","components/DefaultView/DefaultViewAbout.tsx","components/MainView/MainView.styles.tsx","App.tsx","components/LoginForm/LoginForm.styles.tsx","components/LoginForm/LoginForm.tsx","pages/loginPage.tsx","APIRequests/Post.tsx","components/PostComponent/PostComponent.tsx","components/MainView/MainView.tsx","pages/mainViewPage.tsx","components/RegisterForm/RegisterForm.styles.tsx","components/RegisterForm/RegisterForm.tsx","pages/registerPage.tsx","pages/testPage.tsx","APIRequests/Tag.tsx","components/TagsPanel/TagsPanel.tsx","pages/panelTagsPage.tsx","components/ChaptersList/ChaptersList.tsx","APIRequests/Content.tsx","components/PostsPanel/PostsPanel.tsx","pages/panelPostsAddingPage.tsx","components/PostsPanelList/PostsPanelList.tsx","pages/panelPostsPage.tsx","components/PostsPanel/UpdatePostsPanel.tsx","pages/panelPostsUpdatingPage.tsx","components/BookmarkPanel/BookmarksPanel.tsx","pages/panelBookmarkPage.tsx","components/BookmarkPanel/BookmarkPanelAdd.tsx","pages/panelBookmarkAddingPage.tsx","components/BookmarkPanel/BookmarkPanelUpdate.tsx","pages/panelBookmarkUpdatingPage.tsx","components/UsersPanel/UsersPanel.tsx","pages/panelUsersPage.tsx","components/UsersPanel/UserPanelAdd.tsx","pages/panelUsersAddingPage.tsx","components/UsersPanel/UserPanelUpdate.tsx","pages/panelUsersUpdatingPage.tsx","components/PostView/PostView.tsx","pages/postPage.tsx","router.tsx","index.tsx"],"names":["StyledMain","styled","main","Logo","div","LogoContainer","LinksContainer","LinkElement","LoginRegisterContainer","MainViewTabsContainer","AboutSection","MainContentContainer","getUsers","a","axios","get","users","Error","getUser","_id","user","createUser","post","savedUser","updateUser","put","updatedUser","deleteUser","delete","deletedUser","getBookmarks","bookmarks","getBookmark","bookmark","createBookmark","savedBookmark","updateBookmark","updatedBookmark","deleteBookmark","deletedBookmark","DefaultViewTabs","useState","allBookmarks","setAllBookmarks","length","then","data","catch","err","console","log","to","map","key","title","DefaultViewLinks","nick","setNick","localStorage","getItem","onClick","removeItem","DefaultView","DefaultViewAbout","MainViewContainer","App","props","Content","page","StyledLoginForm","FormItem","LogicControls","withRouter","login","setLogin","password","setPassword","TextField","id","label","style","margin","placeholder","fullWidth","InputLabelProps","shrink","onChange","input","target","value","Button","variant","color","find","setItem","history","push","LoginPage","getPosts","posts","getPost","createPost","savedPost","updatePost","updatedPost","deletePost","deletedPost","PostComponent","Date","date","toDateString","dangerouslySetInnerHTML","__html","content","text","tags","tag","MainView","newestPost","setNewestPost","useEffect","mainViewPost","filter","reduce","mainPost","nextPost","JSON","stringify","MainViewPage","StyledRegisterForm","RegisterForm","email","setEmail","role","status","RegisterPage","TestPage","getTags","createTag","saveTag","deleteTag","deletedTag","TagsPanel","setTag","allTags","setAllTags","fetchAllTags","List","ListItem","name","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","onTagDelete","PanelTagsPage","ChaptersList","mainPosts","setMainPosts","postTitle","setPostTitle","fetchAllPosts","storyTitle","FilterAndSetMainPosts","mainTitles","Select","event","MenuItem","createContent","savedContent","updateContent","updatedContent","useStyles","makeStyles","chips","display","flexWrap","chip","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","getStyles","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","PostsPanel","classes","useTheme","setData","setTitle","setTags","undefined","contentId","setContentId","onPostSave","initialValue","init","plugins","toolbar","e","getContent","handleEditorChange","labelId","multiple","Input","renderValue","selected","className","Chip","contentTitle","PanelPostsAddingPage","postType","setPostType","setStoryTitle","PostsPanelList","allPosts","setAllPosts","pathname","state","myId","onPostDelete","PanelPostsPage","UpdatePostsPanel","defaultValue","editedPost","setEditedPost","match","params","customPostType","BookmarksPanel","fetchAllBookmarks","onBookmarkDelete","PanelBookmarksPage","BookmarkPanelAdd","postId","setPostId","bookmarkTitle","setBookmarkTitle","allMainPosts","PanelBookmarkAddingPage","BookmarkPanelUpdate","editedBookmark","setEditedBookmark","UsersPanel","allUsers","setAllUsers","fetchAllUsers","onUserDelete","PanelUsersPage","allUsersRoles","UserPanelAdd","setRole","PanelUsersAddingPage","UserPanelUpdate","editedUser","setEditedUser","setPost","PostPage","BasicExample","exact","path","PanelPostsUpdatingPage","PanelBookmarkUpdatingPage","PanelUsersUpdatingPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01dfc33e.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const StyledMain = styled.main`\r\n    max-width: 824px;\r\n    margin: 0rem auto 0rem auto;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const Logo = styled.div`\r\n    font-family: Roboto;\r\n    font-size: 3.5rem;\r\n`;\r\n\r\nexport const LogoContainer = styled.div`\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n`;\r\n\r\nexport const LinksContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const LinkElement = styled.div`\r\n    color: #ffffff;\r\n    margin: 1rem;\r\n`;\r\n\r\nexport const LoginRegisterContainer = styled.div`\r\n    display:flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nexport const MainViewTabsContainer = styled.div`\r\n    display:flex;\r\n    background-color:#292929;\r\n`;\r\n\r\nexport const AboutSection = styled.div`\r\n    width:20%;\r\n    border-left: 1px solid black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0rem 1rem;\r\n`;\r\n\r\nexport const MainContentContainer = styled.div`\r\n    display: flex;\r\n    min-height: 40rem;\r\n    background-color: grey;\r\n    justify-content: space-between;\r\n    flex-grow: 1;\r\n    padding-top: 1rem;\r\n`;","import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport interface UserProps {\r\n    _id?: string;\r\n    nick: string;\r\n    login: string;\r\n    password: string;\r\n    email: string;\r\n    role?: string;\r\n}\r\n\r\nexport const getUsers = async () => {\r\n    try {\r\n      const users = await axios.get(\r\n         '/users'\r\n      )\r\n      return users\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getUser = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const user = await axios.get(\r\n        `/user/${_id}`\r\n      )\r\n      return user\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createUser = async (\r\n    user: UserProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const savedUser: AxiosResponse<ApiDataType> = await axios.post(\r\n        `/user`,\r\n        user\r\n      )\r\n      return savedUser\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updateUser = async (\r\n    user: UserProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedUser: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/user/${user._id}`,\r\n        user\r\n      )\r\n      return updatedUser;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteUser = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedUser = await axios.delete(\r\n        `/user/${_id}`\r\n      )\r\n      return deletedUser;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport interface BookmarkProps {\r\n    _id?: string;\r\n    title: string;\r\n    post: any;\r\n}\r\n\r\nexport const getBookmarks = async () => {\r\n    try {\r\n      const bookmarks = await axios.get(\r\n         '/bookmarks'\r\n      )\r\n      return bookmarks\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getBookmark = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const bookmark = await axios.get(\r\n        `/bookmark/${_id}`\r\n      )\r\n      return bookmark\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createBookmark = async (\r\n    bookmark: BookmarkProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const savedBookmark: AxiosResponse<ApiDataType> = await axios.post(\r\n        `/bookmark`,\r\n        bookmark\r\n      )\r\n      return savedBookmark\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updateBookmark = async (\r\n    bookmark: BookmarkProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedBookmark: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/bookmark/${bookmark._id}`,\r\n        bookmark\r\n      )\r\n      return updatedBookmark;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteBookmark = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedBookmark = await axios.delete(\r\n        `/bookmark/${_id}`\r\n      )\r\n      return deletedBookmark;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import React, { useState } from \"react\";\r\nimport { LinkElement, MainViewTabsContainer } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BookmarkProps, getBookmarks } from \"../../APIRequests/Bookmark\";\r\n\r\nconst DefaultViewTabs = () => {\r\n    const [allBookmarks, setAllBookmarks] = useState<BookmarkProps[]>([]);\r\n\r\n    const fetchAllBookmarks = () => {\r\n        getBookmarks()\r\n        .then(({ data: { bookmarks } }: BookmarkProps[] | any) => {if(bookmarks.length !== allBookmarks.length) setAllBookmarks(bookmarks)})\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    if(allBookmarks.length === 0) fetchAllBookmarks();\r\n\r\n    const getAllLinks = () => {\r\n        return allBookmarks.map((bookmark) => <LinkElement key={bookmark._id}><Link to={`/post/${bookmark.post[0]._id}`}>{bookmark.title}</Link></LinkElement>) || []\r\n    }\r\n\r\n    return (\r\n        <MainViewTabsContainer>\r\n            <LinkElement><Link to={\"/\"}>Home</Link></LinkElement>\r\n            {getAllLinks()}\r\n            {/* <LinkElement><Link to={\"/\"}>Home</Link></LinkElement> */}\r\n        </MainViewTabsContainer>\r\n    )\r\n}\r\n\r\nexport default DefaultViewTabs;","import React, { useState } from \"react\";\r\nimport { LinkElement, LoginRegisterContainer } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUser, UserProps } from \"../../APIRequests/User\";\r\nimport DefaultViewTabs from \"./DefaultViewTabs\";\r\n\r\nconst DefaultViewLinks = () => {\r\n    const [nick, setNick] = useState(\"\");\r\n\r\n    const fetchUser = () => {\r\n        getUser(localStorage.getItem('blognellaId') || \"\")\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            if(!nick) {setNick(user.nick);}\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onLogout = () => {\r\n        localStorage.removeItem('blognellaId');\r\n    }\r\n\r\n    if(localStorage.getItem('blognellaId')) fetchUser();\r\n\r\n    return (\r\n        <>\r\n            <LoginRegisterContainer>\r\n                { nick ? <LinkElement onClick={onLogout} ><Link to={\"/\"}>Logout {nick}</Link></LinkElement> : \r\n                <LinkElement ><Link to={\"/login\"}>Login</Link></LinkElement> }\r\n                <LinkElement><Link to={\"/register\"}>Register</Link></LinkElement>\r\n            </LoginRegisterContainer>\r\n            <DefaultViewTabs/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultViewLinks;","import React from \"react\";\r\nimport { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\nimport DefaultViewLinks from \"./DefaultViewLinks\";\r\n// import { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\n\r\nconst DefaultView = () => {\r\n    return (\r\n        <>\r\n        <LogoContainer>\r\n            <Logo>Kiranella</Logo>\r\n            <LinksContainer>\r\n                    <div>\r\n                    {/* <LinkElement><Link color=\"white\" to={\"/login\"}>Login</Link></LinkElement>\r\n                    <LinkElement><Link to={\"/register\"}>Register</Link></LinkElement> */}\r\n                    </div>\r\n            </LinksContainer>\r\n        </LogoContainer>\r\n        <DefaultViewLinks/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultView;","import React from \"react\";\r\nimport { AboutSection } from \"./DefaultView.styles\";\r\n\r\n\r\nconst DefaultViewAbout = () => {\r\n    return (\r\n        <AboutSection>\r\n            <div>About</div>\r\n            <div>Example</div>\r\n            \r\n        </AboutSection>\r\n    )\r\n}\r\n\r\nexport default DefaultViewAbout;","import styled from 'styled-components'\r\n\r\nexport const MainViewContainer = styled.div`\r\n    /* display: flex; */\r\n    /* justify-content: space-between; */\r\n    margin: 0rem 1rem;\r\n    width:80%;\r\n`;","import React from 'react'\nimport { StyledMain } from './App.styles';\nimport DefaultView from './components/DefaultView/DefaultView'\nimport { MainContentContainer } from './components/DefaultView/DefaultView.styles';\nimport DefaultViewAbout from './components/DefaultView/DefaultViewAbout';\n// import TodoItem from './components/TodoItem'\n// import AddTodo from './components/AddTodo'\n// import { getTodos, addTodo, updateTodo, deleteTodo } from './API'\n// import LoginPage from './pages/loginPage'\n// import RegisterForm from './components/RegisterForm/RegisterForm'\n\n// import Content from './router';\n\nimport './components/globalStyles/globalStyles.css';\nimport { MainViewContainer } from './components/MainView/MainView.styles';\n\nconst App: React.FC = (props:any) => {\n\n\n//   const [todos, setTodos] = useState<ITodo[]>([])\n\n//   useEffect(() => {\n//     fetchTodos()\n//   }, [])\n\n//   const fetchTodos = (): void => {\n//     getTodos()\n//     .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\n//     .catch((err: Error) => console.log(err))\n//   }\n\n//  const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\n//    e.preventDefault()\n//    addTodo(formData)\n//    .then(({ status, data }) => {\n//     if (status !== 201) {\n//       throw new Error('Error! Todo not saved')\n//     }\n//     setTodos(data.todos)\n//   })\n//   .catch((err) => console.log(err))\n// }\n\n//   const handleUpdateTodo = (todo: ITodo): void => {\n//     updateTodo(todo)\n//     .then(({ status, data }) => {\n//         if (status !== 200) {\n//           throw new Error('Error! Todo not updated')\n//         }\n//         setTodos(data.todos)\n//       })\n//       .catch((err) => console.log(err))\n//   }\n\n//   const handleDeleteTodo = (_id: string): void => {\n//     deleteTodo(_id)\n//     .then(({ status, data }) => {\n//         if (status !== 200) {\n//           throw new Error('Error! Todo not deleted')\n//         }\n//         setTodos(data.todos)\n//       })\n//       .catch((err) => console.log(err))\n//   }\n  // const Content = props.page;\n  const Content = props.page;\n  return (\n    <StyledMain>\n      <DefaultView/>\n      <MainContentContainer>\n        <MainViewContainer>\n          <Content/>\n        </MainViewContainer>\n        <DefaultViewAbout/>\n      </MainContentContainer>\n\n      \n\n      {/* <RegisterForm/> */}\n\n      {/* <h1>My Todos</h1>\n      <AddTodo saveTodo={handleSaveTodo} />\n      {todos.map((todo: ITodo) => (\n        <TodoItem\n          key={todo._id}\n          updateTodo={handleUpdateTodo}\n          deleteTodo={handleDeleteTodo}\n          todo={todo}\n        />\n      ))} */}\n    </StyledMain>\n  )\n}\n\nexport default App\n","import styled from 'styled-components'\r\n\r\nexport const StyledLoginForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #8a8a8a;;\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n`;\r\n","import React, {useState} from \"react\";\r\nimport { FormItem, LogicControls, StyledLoginForm } from \"./LoginForm.styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUsers, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst LoginForm = (props) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const onSubmit = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => {\r\n            const user = users.find((user) => user.login === login && user.password === password)\r\n            if(user) {\r\n                localStorage.setItem('blognellaId', user._id);\r\n                props.history.push('/');\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledLoginForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Password\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your password here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div>Zapomniales hasla?</div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                    Login\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledLoginForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React from \"react\";\r\nimport LoginForm from \"../components/LoginForm/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n    return <LoginForm />\r\n}\r\n\r\nexport default LoginPage","import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport interface PostProps {\r\n    _id?: string;\r\n    date: Date;\r\n    tags: string[];\r\n    title: string;\r\n    content: any;\r\n}\r\n\r\nexport const getPosts = async () => {\r\n    try {\r\n      const posts = await axios.get(\r\n         '/posts'\r\n      )\r\n      return posts\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getPost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const post = await axios.get(\r\n        `/post/${_id}`\r\n      )\r\n      return post\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createPost = async (\r\n    post: PostProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const savedPost: AxiosResponse<ApiDataType> = await axios.post(\r\n        `/post`,\r\n        post\r\n      )\r\n      return savedPost\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updatePost = async (\r\n    post: PostProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedPost: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/post/${post._id}`,\r\n        post\r\n      )\r\n      return updatedPost;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deletePost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedPost = await axios.delete(\r\n        `/post/${_id}`\r\n      )\r\n      return deletedPost\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import React, { useState } from \"react\";\r\nimport DatePicker from 'react-date-picker';\r\n\r\nconst PostComponent = (props) => {\r\n    const [value, onChange] = useState<any>(new Date());\r\n    // const date = new Date('2018-05-18T04:00:00Z').toLocaleString();\r\n    // const date = new Date(props.post.date).toUTCString();\r\n\r\n    // const customoldData = new Date('2021-01-19T21:41:19.169Z').toDateString()\r\n    // const customnewData = new Date('2021-02-19T21:41:19.169Z').toDateString()\r\n    // console.log(\"old\");\r\n    // console.log(customoldData);\r\n    // console.log(\"new\");\r\n    // console.log(customnewData);\r\n    // const actualDate = new Date().toDateString()\r\n\r\n    // console.log(customoldData > customnewData); //true\r\n    // console.log(customoldData > actualDate)\r\n\r\n    const date = new Date(props.post.date).toDateString();\r\n\r\n    const getTags = () => {\r\n        return props.post.tags.map((tag) => <span key={tag}>{tag}</span>)\r\n    }\r\n\r\n    console.log(date);\r\n    console.log(\"calendar\")\r\n    console.log(value.toDateString());\r\n    return (\r\n        <>\r\n         <DatePicker\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n        <div>{date}</div>\r\n        <div dangerouslySetInnerHTML={{ __html: props.post.content[0].text }} />\r\n        <div><span>Tagi: </span>{getTags()}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostComponent;","import React, { useEffect, useState } from \"react\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostComponent from \"../PostComponent/PostComponent\";\r\n\r\nconst MainView = () => {\r\n    const [newestPost, setNewestPost] = useState();\r\n\r\n    const fetchNewestPost = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            const mainViewPost = allMainPosts.reduce((mainPost, nextPost) => {\r\n                if(JSON.stringify(mainPost) === JSON.stringify({})) return nextPost\r\n                return mainPost.date < nextPost.date ? nextPost : mainPost;\r\n            },{})\r\n            setNewestPost(mainViewPost);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchNewestPost()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {newestPost ? <PostComponent post={newestPost}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainView;","import React from \"react\";\r\nimport MainView from \"../components/MainView/MainView\";\r\n\r\nconst MainViewPage = () => {\r\n    return <MainView/>\r\n}\r\n\r\nexport default MainViewPage","import styled from 'styled-components'\r\n\r\nexport const StyledRegisterForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #8a8a8a;;\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n`;\r\n","import React, {useState} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { FormItem, LogicControls, StyledRegisterForm } from \"./RegisterForm.styles\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RegisterForm = () => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const onUserSave = () => {\r\n        console.log(nick);\r\n        console.log(login);\r\n        console.log(password);\r\n        console.log(email);\r\n        const user = {\r\n            nick:nick,\r\n            login:login,\r\n            password:password,\r\n            email:email,\r\n            role:\"loggedUser\"\r\n        }\r\n        createUser(user)\r\n        .then(({ status, data }) => {\r\n            console.log(\"zwrotna data\");\r\n            console.log(data);\r\n            if (status !== 201) {\r\n              throw new Error('Error! User not saved')\r\n            }\r\n            // setTodos(data.todos)\r\n          })\r\n          .catch((err) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <StyledRegisterForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your nickname here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setNick(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your login here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Password\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your password here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Email\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your email here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setEmail(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div>Have already account? \r\n                    <Link to={\"/login\"}>Login</Link>\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n                    Register\r\n                    </Button>\r\n                </LogicControls>\r\n            </StyledRegisterForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","import React from \"react\";\r\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n    return <RegisterForm/>\r\n}\r\n\r\nexport default RegisterPage","import React from 'react';\r\n// import { CommentProps, getComments, getMainComments } from '../APIRequests/Comment';\r\n\r\nconst TestPage = () => {   \r\n    // const [allComments, setAllComments] = useState([]);\r\n\r\n    // const fetchAllComments = () => {\r\n        // getComments()\r\n        // .then(({ data: { comments } }: CommentProps[] | any) => {\r\n        //     const subComments = comments.reduce((subComs, nextComment) => {\r\n        //         const subCommentsIds = nextComment.comment.map((com) => com._id)\r\n        //         return [...subComs, ...subCommentsIds]\r\n        //     },[])\r\n        //     const mainComments = comments.filter((comment) =>  subComments.indexOf(comment._id) <= -1 )\r\n        //     setAllComments(mainComments);\r\n        // })\r\n        // .catch((err: Error) => console.log(err))\r\n\r\n\r\n        // getMainComments()\r\n        // .then(({ data: { mainComments } }: CommentProps[] | any) => setAllComments(mainComments))\r\n        // .catch((err: Error) => console.log(err))\r\n        \r\n        \r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     fetchAllComments()\r\n    // }, [])\r\n\r\n    return (\r\n        <>\r\n            <div>TEST</div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default TestPage","import axios from \"axios\"\r\n\r\nexport interface TagProps {\r\n    _id?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getTags = async () => {\r\n    try {\r\n      const tags = await axios.get(\r\n         '/tags'\r\n      )\r\n      return tags\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const createTag = async (\r\n    tag: TagProps\r\n  ) => {\r\n    try {\r\n      const saveTag = await axios.post(\r\n        '/tag',\r\n        tag\r\n      )\r\n      return saveTag\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteTag = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedTag = await axios.delete(\r\n        `/tag/${_id}`\r\n      )\r\n      return deletedTag\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { createTag, deleteTag, getTags, TagProps } from \"../../APIRequests/Tag\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst TagsPanel = () => {\r\n    const [tag, setTag] = useState(\"\");\r\n    const [allTags, setAllTags] = useState([]);\r\n\r\n    const fetchAllTags = () => {\r\n        getTags()\r\n        .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onTagSave = () => {\r\n        createTag({name: tag})\r\n        // .then(({ status, data }) => {\r\n        .then(({ status }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Tag not saved')\r\n                }\r\n                fetchAllTags();\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags()\r\n    }, [])\r\n\r\n      const onTagDelete = (tag:TagProps) => {\r\n        deleteTag(tag._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Tag not deleted')\r\n            }\r\n            fetchAllTags()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allTags.map((tag:TagProps) => \r\n          <ListItem key={tag.name}>\r\n          <ListItemText\r\n            primary={tag.name}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onTagDelete(tag)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n            <TextField\r\n            label=\"Tag\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your tag here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setTag(input.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onTagSave}>\r\n                    Add Tag\r\n            </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TagsPanel;","import React from \"react\";\r\nimport TagsPanel from \"../components/TagsPanel/TagsPanel\";\r\n\r\nconst PanelTagsPage = () => {\r\n    return <TagsPanel/>\r\n}\r\n\r\nexport default PanelTagsPage","import React, {useState, useEffect} from \"react\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst ChaptersList = (props) => {\r\n    const [mainPosts, setMainPosts] = useState<String[]>([]);\r\n    const [postTitle, setPostTitle] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(postTitle === \"\" && props.storyTitle) {\r\n            setPostTitle(props.storyTitle)\r\n        }\r\n    }, [props.storyTitle])\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => FilterAndSetMainPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const FilterAndSetMainPosts = (posts:PostProps[]) => {\r\n        const mainPosts = posts.filter((post:PostProps) => post.content[0].title === \"Main\");\r\n        const mainTitles = mainPosts.map((post) => post.title)\r\n        console.log(mainTitles);\r\n        setMainPosts(mainTitles);\r\n    }\r\n\r\n    const handlePostTitle = (event) => {\r\n        setPostTitle(event.target.value);\r\n        props.setPostTitle(event.target.value);\r\n    }\r\n\r\n    const getTitleList = () => {\r\n        return mainPosts.map((postTitle:any) => <MenuItem key={postTitle} value={postTitle}>{postTitle}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Select\r\n            value={postTitle}\r\n            onChange={handlePostTitle}\r\n            >\r\n            {getTitleList()}\r\n            </Select>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChaptersList;","import axios, { AxiosResponse } from \"axios\";\r\n\r\ninterface ContentProps {\r\n    _id?: string;\r\n    text: string;\r\n    title: string;\r\n}\r\n\r\nexport const createContent = async (\r\n    content: ContentProps\r\n  ) => {\r\n    try {\r\n      const savedContent = await axios.post(\r\n        `/content`,\r\n        content\r\n      )\r\n      return savedContent\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updateContent = async (\r\n    content: ContentProps\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const updatedContent: AxiosResponse<ApiDataType> = await axios.put(\r\n        `/content/${content._id}`,\r\n        content\r\n      )\r\n      return updatedContent\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Select, useTheme } from '@material-ui/core';\r\nimport { createContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { createPost } from '../../APIRequests/Post';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst PostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState('<p>React is really <em>nice</em>!</p>');\r\n    const [title, setTitle] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = () => {\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle\r\n        }\r\n        // const createdContent = createContent(content)\r\n        createContent(content)\r\n        .then(({ status, data }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Todo not saved')\r\n                }\r\n                setContentId(data.content._id);\r\n              })\r\n        // return createdContent;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(contentId){\r\n            onPostSave()\r\n            setContentId(undefined)\r\n        }\r\n    }, [contentId])\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: new Date(),\r\n            tags: tags,\r\n            title: title,\r\n            content: contentId,\r\n        }\r\n        createPost(post);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    return (\r\n        <>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Title\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your post title here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n\r\n\r\n        <div>Add tags to post</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    Save Post\r\n         </Button>\r\n      </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default PostsPanel","import { MenuItem, Select } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport PostsPanel from \"../components/PostsPanel/PostsPanel\";\r\n\r\nconst PanelPostsAddingPage = () => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n\r\n    const handlePostType = (event) => {\r\n        setPostType(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postType}\r\n          onChange={handlePostType}\r\n        >\r\n          <MenuItem value=\"Main\">Main</MenuItem>\r\n          <MenuItem value=\"Chapter\">Chapter</MenuItem>\r\n          <MenuItem value=\"About\">About</MenuItem>\r\n        </Select>\r\n        <div></div>\r\n        {postType === \"Chapter\" ? <ChaptersList setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {postType === \"Main\" || postType === \"About\" || storyTitle ? <PostsPanel contentTitle={storyTitle || postType}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PanelPostsAddingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deletePost, getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst PostsPanelList = () => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => setAllPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n      const onPostDelete = (post:PostProps) => {\r\n        deletePost(post._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Post not deleted')\r\n            }\r\n            fetchAllPosts()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allPosts.map((post:PostProps) => \r\n          <ListItem key={post._id}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/posts/${post._id}`,\r\n                // search: `?id=${post._id}`,\r\n                state: { myId: post._id }\r\n                }}> {post.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onPostDelete(post)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n            <Link to={\"/panel/posts/add\"}>AddPost</Link>\r\n            {/* <Link to={{\r\n            pathname: '/template',\r\n            search: '?query=abc',\r\n            state: { detail: response.data }\r\n            }}> My Link </Link> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostsPanelList;","import React from \"react\";\r\nimport PostsPanelList from \"../components/PostsPanelList/PostsPanelList\";\r\n\r\nconst PanelPostsPage = () => {\r\n\r\n\r\n    return (\r\n        <PostsPanelList/>\r\n    )\r\n}\r\n\r\nexport default PanelPostsPage","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Select, useTheme } from '@material-ui/core';\r\nimport { updateContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { updatePost } from '../../APIRequests/Post';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst UpdatePostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState(props.post.content[0].text || \"\");\r\n    const [title, setTitle] = useState(props.post.title || \"\");\r\n    const [tags, setTags] = useState(props.post.tags || []);\r\n    // const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = () => {\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle,\r\n            _id: props.post.content[0]._id\r\n        }\r\n        updateContent(content)\r\n        .then(({ status }) => {\r\n                if (status !== 200) {\r\n                  throw new Error('Error! Content not saved')\r\n                }\r\n                // setContentId(data.content._id);\r\n                onPostSave()\r\n              })\r\n    }\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: new Date(),\r\n            tags: tags,\r\n            title: title,\r\n            content: props.post.content[0]._id,\r\n            _id: props.post._id\r\n        }\r\n        updatePost(post)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Post not saved')\r\n            }\r\n          })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    return (\r\n        <>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Title\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder=\"Please type in your post title here\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={title}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n\r\n\r\n        <div>Add tags to post</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    Save Post\r\n         </Button>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default UpdatePostsPanel","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, PostProps } from \"../APIRequests/Post\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport UpdatePostsPanel from \"../components/PostsPanel/UpdatePostsPanel\";\r\n\r\nconst PanelPostsUpdatingPage = (props) => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n    const [editedPost, setEditedPost] = useState<PostProps>();\r\n\r\n    const fetchEditedPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            const postTitle = post.content[0].title;\r\n            const customPostType = postTitle === \"Main\" || postTitle === \"About\" ? postTitle : \"Chapter\";\r\n            setPostType(customPostType);\r\n            customPostType === \"Chapter\" && setStoryTitle(postTitle);\r\n            setEditedPost(post);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedPost()\r\n    }, [])\r\n\r\n    const contentTitle = postType === \"Main\" || postType === \"About\" ? postType : storyTitle;\r\n\r\n    return (\r\n        <>\r\n        <div>UPDATE PAGE</div>\r\n         {/* <Select\r\n          value={postType}\r\n          onChange={handlePostType}\r\n        >\r\n          <MenuItem value=\"Main\">Main</MenuItem>\r\n          <MenuItem value=\"Chapter\">Chapter</MenuItem>\r\n          <MenuItem value=\"About\">About</MenuItem>\r\n        </Select> */}\r\n        <div>{postType === \"Main\" ? \"STORY\" : postType === \"About\" ? \"ABOUT\" : \"CHAPTER\"}</div>\r\n        {postType === \"Chapter\" ? <ChaptersList storyTitle={storyTitle} setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {(postType === \"Main\" || postType === \"About\" || storyTitle) && editedPost ? \r\n        <UpdatePostsPanel contentTitle={contentTitle} post={editedPost}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PanelPostsUpdatingPage);\r\n// export default PanelPostsUpdatingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { BookmarkProps, deleteBookmark, getBookmarks } from \"../../APIRequests/Bookmark\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BookmarksPanel = () => {\r\n    const [allBookmarks, setAllBookmarks] = useState([]);\r\n\r\n    const fetchAllBookmarks = () => {\r\n        getBookmarks()\r\n        .then(({ data: { bookmarks } }: BookmarkProps[] | any) => setAllBookmarks(bookmarks))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllBookmarks()\r\n    }, [])\r\n\r\n      const onBookmarkDelete = (bookmark:BookmarkProps) => {\r\n        deleteBookmark(bookmark._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Bookmark not deleted')\r\n            }\r\n            fetchAllBookmarks()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allBookmarks.map((bookmark:BookmarkProps) => \r\n          <ListItem key={bookmark.title}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/bookmarks/${bookmark._id}`,\r\n                state: { myId: bookmark._id }\r\n            }}> {bookmark.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onBookmarkDelete(bookmark)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n\r\n            <Link to={\"/panel/bookmarks/add\"}>Add Bookmark</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookmarksPanel;","import React from \"react\";\r\nimport BookmarksPanel from \"../components/BookmarkPanel/BookmarksPanel\";\r\n\r\nconst PanelBookmarksPage = () => {\r\n    return <BookmarksPanel/>\r\n}\r\n\r\nexport default PanelBookmarksPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { createBookmark } from \"../../APIRequests/Bookmark\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst BookmarkPanelAdd = () => {\r\n    const [postId, setPostId] = useState(\"\");\r\n    const [allPosts, setAllPosts] = useState<PostProps[]>([]);\r\n    const [bookmarkTitle, setBookmarkTitle] = useState(\"\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n    const handlePostId = (event) => {\r\n        setPostId(event.target.value);\r\n    };\r\n\r\n    const onBookmarkSave = () => {\r\n        const bookmark = {\r\n            title: bookmarkTitle,\r\n            post: postId,\r\n        }\r\n        createBookmark(bookmark);\r\n    }\r\n\r\n    const getPostsTitles = () => {\r\n        return allPosts.map((post) => <MenuItem value={post._id}>{post.title}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postId}\r\n          onChange={handlePostId}\r\n        >\r\n            {getPostsTitles()}\r\n        </Select>\r\n        <div></div>\r\n        <TextField\r\n            label=\"Bookmark title\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your bookmark title here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setBookmarkTitle(input.target.value)}\r\n            />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onBookmarkSave}>\r\n            Save Bookmark\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookmarkPanelAdd;","import React from \"react\";\r\nimport BookmarkPanelAdd from \"../components/BookmarkPanel/BookmarkPanelAdd\";\r\n\r\nconst PanelBookmarkAddingPage = () => {\r\n   return <BookmarkPanelAdd/>\r\n}\r\n\r\nexport default PanelBookmarkAddingPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { updateBookmark } from \"../../APIRequests/Bookmark\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst BookmarkPanelUpdate = (props) => {\r\n    const [postId, setPostId] = useState(props.bookmark.post[0]._id || \"\");\r\n    const [allPosts, setAllPosts] = useState<PostProps[]>([]);\r\n    const [bookmarkTitle, setBookmarkTitle] = useState(props.bookmark.title || \"\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n    const handlePostId = (event) => {\r\n        setPostId(event.target.value);\r\n    };\r\n\r\n    const onBookmarkSave = () => {\r\n        const bookmark = {\r\n            _id: props.bookmark._id,\r\n            title: bookmarkTitle,\r\n            post: postId,\r\n        }\r\n        updateBookmark(bookmark)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Bookmark not saved')\r\n            }\r\n          })\r\n    }\r\n\r\n    const getPostsTitles = () => {\r\n        return allPosts.map((post) => <MenuItem  key={post._id} value={post._id}>{post.title}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <Select\r\n          value={postId}\r\n          onChange={handlePostId}\r\n        >\r\n            {getPostsTitles()}\r\n        </Select>\r\n        <div></div>\r\n        <TextField\r\n            label=\"Bookmark title\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your bookmark title here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={bookmarkTitle}\r\n            onChange={(input) => setBookmarkTitle(input.target.value)}\r\n            />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onBookmarkSave}>\r\n            Save Bookmark\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BookmarkPanelUpdate;","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BookmarkProps, getBookmark } from \"../APIRequests/Bookmark\";\r\nimport BookmarkPanelUpdate from \"../components/BookmarkPanel/BookmarkPanelUpdate\";\r\n\r\nconst PanelBookmarkUpdatingPage = (props) => {\r\n    const [editedBookmark, setEditedBookmark] = useState<BookmarkProps>();\r\n\r\n    const fetchEditedBookmark = () => {\r\n        getBookmark(props.match.params.id)\r\n        .then(({ data: { bookmark } }: BookmarkProps | any) => {\r\n            setEditedBookmark(bookmark);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedBookmark()\r\n    }, [])\r\n\r\n    return editedBookmark ? <BookmarkPanelUpdate bookmark={editedBookmark}/> : <></>;\r\n}\r\n\r\nexport default withRouter(PanelBookmarkUpdatingPage);","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteUser, getUsers, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst UsersPanel = () => {\r\n    const [allUsers, setAllUsers] = useState([]);\r\n\r\n    const fetchAllUsers = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => setAllUsers(users))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllUsers()\r\n    }, [])\r\n\r\n      const onUserDelete = (user:UserProps) => {\r\n        deleteUser(user._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! User not deleted')\r\n            }\r\n            fetchAllUsers()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allUsers.map((user:UserProps) => \r\n          <ListItem key={user.nick}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/users/${user._id}`,\r\n                state: { myId: user._id }\r\n            }}> {user.nick} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onUserDelete(user)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n\r\n            <Link to={\"/panel/users/add\"}>Add User</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersPanel;","import React from \"react\";\r\nimport UsersPanel from \"../components/UsersPanel/UsersPanel\";\r\n\r\nconst PanelUsersPage = () => {\r\n\r\n\r\n    return (\r\n        <UsersPanel/>\r\n    )\r\n}\r\n\r\nexport default PanelUsersPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\n\r\nconst allUsersRoles = [\"loggedUser\", \"admin\"];\r\n\r\nconst UserPanelAdd = () => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const handleUserRole = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n\r\n    const onUserSave = () => {\r\n        const user = {\r\n            nick: nick,\r\n            login: login,\r\n            password: password,\r\n            role: role,\r\n            email: email,\r\n        }\r\n        createUser(user);\r\n    }\r\n\r\n    const getUsersRoles = () => {\r\n        return allUsersRoles.map((role) => <MenuItem key={role} value={role}>{role}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <TextField\r\n            label=\"Nick\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your nick here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setNick(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Login\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your login here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setLogin(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Password\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your password here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setPassword(input.target.value)}\r\n        />\r\n        <Select\r\n          value={role}\r\n          onChange={handleUserRole}\r\n        >\r\n            {getUsersRoles()}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <TextField\r\n            label=\"Email\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your email here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setEmail(input.target.value)}\r\n        />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n            Save User\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserPanelAdd;","import React from \"react\";\r\nimport UserPanelAdd from \"../components/UsersPanel/UserPanelAdd\";\r\n\r\nconst PanelUsersAddingPage = () => {\r\n   return <UserPanelAdd/>\r\n}\r\n\r\nexport default PanelUsersAddingPage","import { Button, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { updateUser } from \"../../APIRequests/User\";\r\n\r\nconst allUsersRoles = [\"loggedUser\", \"admin\"];\r\n\r\nconst UserPanelUpdate = (props) => {\r\n    const [nick, setNick] = useState(props.user.nick);\r\n    const [login, setLogin] = useState(props.user.login);\r\n    const [password, setPassword] = useState(props.user.password);\r\n    const [role, setRole] = useState(props.user.role);\r\n    const [email, setEmail] = useState(props.user.email);\r\n\r\n    const handleUserRole = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n\r\n    const onUserSave = () => {\r\n        const user = {\r\n            _id: props.user._id,\r\n            nick: nick,\r\n            login: login,\r\n            password: password,\r\n            role: role,\r\n            email: email,\r\n        }\r\n        updateUser(user);\r\n    }\r\n\r\n    const getUsersRoles = () => {\r\n        return allUsersRoles.map((role) => <MenuItem key={role} value={role}>{role}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <TextField\r\n            label=\"Nick\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your nick here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={nick}\r\n            onChange={(input) => setNick(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Login\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your login here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={login}\r\n            onChange={(input) => setLogin(input.target.value)}\r\n        />\r\n        <TextField\r\n            label=\"Password\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your password here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={password}\r\n            onChange={(input) => setPassword(input.target.value)}\r\n        />\r\n        <Select\r\n          value={role}\r\n          onChange={handleUserRole}\r\n        >\r\n            {getUsersRoles()}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <TextField\r\n            label=\"Email\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"Please type in your email here\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={email}\r\n            onChange={(input) => setEmail(input.target.value)}\r\n        />\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n            Save User\r\n        </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserPanelUpdate;","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUser, UserProps } from \"../APIRequests/User\";\r\nimport UserPanelUpdate from \"../components/UsersPanel/UserPanelUpdate\";\r\n\r\nconst PanelUsersUpdatingPage = (props) => {\r\n    const [editedUser, setEditedUser] = useState<UserProps>();\r\n\r\n    const fetchEditedUser = () => {\r\n        getUser(props.match.params.id)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setEditedUser(user);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedUser()\r\n    }, [])\r\n\r\n    return editedUser ? <UserPanelUpdate user={editedUser}/> : <></>;\r\n}\r\n\r\nexport default withRouter(PanelUsersUpdatingPage);","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, PostProps } from \"../../APIRequests/Post\";\r\nimport PostComponent from \"../PostComponent/PostComponent\";\r\n\r\nconst PostView = (props) => {\r\n    const [post, setPost] = useState();\r\n\r\n    const fetchPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            setPost(post);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n    }, [])\r\n\r\n    console.log(props.match.params.id)\r\n    return (\r\n        <>\r\n        {post ? <PostComponent post={post} /> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostView);","import React from \"react\";\r\nimport PostView from \"../components/PostView/PostView\";\r\n\r\nconst PostPage = () => {\r\n    return <PostView />\r\n}\r\n\r\nexport default PostPage","// @ts-nocheck\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n// import App from \"./App\";\r\nimport LoginPage from \"./pages/loginPage\";\r\nimport MainViewPage from \"./pages/mainViewPage\";\r\n\r\nimport RegisterPage from \"./pages/registerPage\";\r\nimport TestPage from \"./pages/testPage\";\r\nimport PanelTagsPage from \"./pages/panelTagsPage\";\r\nimport PanelPostsAddingPage from \"./pages/panelPostsAddingPage\";\r\nimport PanelPostsPage from \"./pages/panelPostsPage\";\r\nimport PanelPostsUpdatingPage from \"./pages/panelPostsUpdatingPage\";\r\nimport PanelBookmarksPage from \"./pages/panelBookmarkPage\";\r\nimport PanelBookmarkAddingPage from \"./pages/panelBookmarkAddingPage\";\r\nimport PanelBookmarkUpdatingPage from \"./pages/panelBookmarkUpdatingPage\";\r\nimport PanelUsersPage from \"./pages/panelUsersPage\";\r\nimport PanelUsersAddingPage from \"./pages/panelUsersAddingPage\";\r\nimport PanelUsersUpdatingPage from \"./pages/panelUsersUpdatingPage\";\r\nimport PostPage from \"./pages/postPage\";\r\n\r\n// export default <Router history={hashHistory}>\r\n//   <Route path=\"/\" component={App}>\r\n//     <IndexRoute component={AppSplash}/>\r\n//     <Route path=\"demo\" component={AppDemo}/>\r\n//   </Route>\r\n// </Router>\r\n\r\nexport default function BasicExample() {\r\n    return (\r\n      <Router>\r\n          <Switch>\r\n             <Route exact path=\"/\"> <App page={MainViewPage} /> </Route>\r\n             {/* <Route\r\n              exact path='/'\r\n              render={(props) => (\r\n                <App page={MainViewPage} />\r\n              )}\r\n            /> */}\r\n\r\n             <Route path=\"/register\"><App page={RegisterPage} /></Route>\r\n             <Route path=\"/login\"><App page={LoginPage}/></Route>\r\n             <Route path=\"/test\"><App page={TestPage}/></Route>\r\n             <Route path=\"/post/:id\"><App page={PostPage}/></Route>\r\n             <Route path=\"/panel/tags\"><App page={PanelTagsPage}/></Route>\r\n             <Route path=\"/panel/posts/add\"><App page={PanelPostsAddingPage}/></Route>\r\n             <Route path=\"/panel/posts/:id\"><App page={PanelPostsUpdatingPage}/></Route>\r\n             <Route path=\"/panel/posts\"><App page={PanelPostsPage}/></Route>\r\n             <Route path=\"/panel/bookmarks/add\"><App page={PanelBookmarkAddingPage}/></Route>\r\n             <Route path=\"/panel/bookmarks/:id\"><App page={PanelBookmarkUpdatingPage}/></Route>\r\n             <Route path=\"/panel/bookmarks\"><App page={PanelBookmarksPage}/></Route>\r\n             <Route path=\"/panel/users/add\"><App page={PanelUsersAddingPage}/></Route>\r\n             <Route path=\"/panel/users/:id\"><App page={PanelUsersUpdatingPage}/></Route>\r\n             <Route path=\"/panel/users\"><App page={PanelUsersPage}/></Route>\r\n           </Switch>\r\n      </Router>\r\n    );\r\n  }","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import App from './App'\nimport './index.css'\nimport App from './router';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)"],"sourceRoot":""}