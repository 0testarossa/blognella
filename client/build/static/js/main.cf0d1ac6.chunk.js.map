{"version":3,"sources":["APIRequests/User.tsx","App.styles.tsx","components/AdminPanel/AdminPanel.styles.tsx","components/AdminPanel/AdminPanel.tsx","components/DefaultView/DefaultView.styles.tsx","APIRequests/Bookmark.tsx","components/DefaultView/DefaultViewTabs.tsx","components/SearchComponent/SearchComponent.styles.tsx","components/SearchComponent/SearchComponent.tsx","components/DefaultView/DefaultViewLinks.tsx","components/DefaultView/DefaultView.tsx","APIRequests/Post.tsx","components/PostComponent/PostAboutComponent.tsx","components/DefaultView/DefaultViewAbout.tsx","components/MainView/MainView.styles.tsx","App.tsx","components/LoginForm/LoginForm.styles.tsx","components/validators/validation.tsx","components/validators/validatorMsg.tsx","components/LoginForm/LoginForm.tsx","pages/loginPage.tsx","APIRequests/Comment.tsx","components/validators/commentValidator.tsx","components/PostComponent/PostComment.styles.tsx","components/PostComponent/PostCommentComponent.tsx","components/PostComponent/PostCommentList.tsx","components/PostComponent/PostLinkComponent.tsx","components/PostComponent/PostComponent.styles.tsx","components/PostComponent/PostComponent.tsx","components/MainView/MainView.tsx","pages/mainViewPage.tsx","components/RegisterForm/RegisterForm.styles.tsx","components/validators/userValidator.tsx","components/RegisterForm/RegisterForm.tsx","pages/registerPage.tsx","APIRequests/Tag.tsx","components/TagsPanel/TagsPanel.styled.tsx","components/validators/tagValidator.tsx","components/TagsPanel/TagsPanel.tsx","pages/panelTagsPage.tsx","components/ChaptersList/ChaptersList.tsx","APIRequests/Content.tsx","components/PostsPanel/PostsPanel.styles.tsx","components/validators/postValidator.tsx","components/PostsPanel/PostsPanel.tsx","pages/panelPostsAddingPage.tsx","components/PostsPanelList/PostsPanelList.tsx","pages/panelPostsPage.tsx","components/PostsPanel/UpdatePostsPanel.tsx","pages/panelPostsUpdatingPage.tsx","components/BookmarkPanel/BookmarksPanel.tsx","pages/panelBookmarkPage.tsx","components/validators/bookmarkValidator.tsx","components/BookmarkPanel/BookmarkPanel.Styles.tsx","components/BookmarkPanel/BookmarkPanelAdd.tsx","pages/panelBookmarkAddingPage.tsx","components/BookmarkPanel/BookmarkPanelUpdate.tsx","pages/panelBookmarkUpdatingPage.tsx","components/UsersPanel/UsersPanel.tsx","pages/panelUsersPage.tsx","components/UsersPanel/UserPanel.styles.tsx","components/UsersPanel/UserPanelAdd.tsx","pages/panelUsersAddingPage.tsx","components/UsersPanel/UserPanelUpdate.tsx","pages/panelUsersUpdatingPage.tsx","components/PostView/PostView.tsx","pages/postPage.tsx","components/LoginForm/LoginForgetForm.tsx","pages/loginForgetPage.tsx","components/SearchComponent/SearchList.tsx","pages/searchPage.tsx","router.tsx","index.tsx"],"names":["getUsers","a","axios","get","users","Error","getUser","_id","user","createUser","post","savedUser","response","status","data","errors","updateUser","put","updatedUser","keyValue","deleteUser","delete","deletedUser","StyledMain","styled","main","StyledPanelContent","div","StyledAdminPanel","StyledAdminPanelItem","StyledText","span","CenteredSpan","AdminPanel","lang","localStorage","getItem","to","Logo","LogoContainer","LinksContainer","LinkElement","LinkLoginElement","SearchElement","LoginRegisterContainer","MainViewTabsContainer","MainViewTabsContainerWrapper","AboutSection","MainContentContainer","StyledAdminPanelContainer","getBookmarks","bookmarks","getBookmark","bookmark","createBookmark","savedBookmark","updateBookmark","updatedBookmark","deleteBookmark","deletedBookmark","DefaultViewTabs","useState","allBookmarks","setAllBookmarks","length","then","catch","err","console","log","map","key","title","StyledSearch","withRouter","props","searchValue","setSearchValue","TextField","id","label","style","margin","placeholder","fullWidth","InputLabelProps","shrink","onChange","input","target","value","Button","variant","color","onClick","history","push","pathname","state","search","DefaultViewLinks","nick","setNick","role","setRole","availablePages","includes","pageName","removeItem","fontWeight","setItem","window","location","reload","DefaultView","getPosts","posts","getPost","createPost","savedPost","updatePost","updatedPost","deletePost","deletedPost","PostAboutComponent","date","Date","toDateString","toISOString","dangerouslySetInnerHTML","__html","content","text","DefaultViewAbout","aboutPost","setAboutPost","useEffect","allAboutPosts","filter","MainViewContainer","userId","fetchUser","match","path","Content","page","StyledLoginForm","FormItem","LogicControls","validateOrRejectExample","validateOrReject","getPolishEntity","entity","getValidationMsg","englishConstraintMsg","constraint","getFirstWord","string","replace","getAllValidationMsg","validation","language","Object","keys","con","getValidatorMsg","messages","message","getUniqueValidatorMsg","field","login","setLogin","password","setPassword","anchorEl","setAnchorEl","errorMsg","setErrorMsg","event","persist","find","Popover","Boolean","undefined","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","LoginPage","createComment","comment","savedComment","updateComment","updatedComment","deleteComment","deletedComment","CommentValidator","IsDateString","IsNotEmpty","IsString","this","commentValidate","constraints","StyledComponentTextField","StyledCommentAuthor","StyledCommentButton","isEditingMode","setIsEditingMode","commentText","setCommentText","canEdit","updatePostToDeleteComment","InputProps","readOnly","defaultValue","PostCommentList","newComment","setNewComment","updatePostToEditComment","commentId","updatedComments","tags","PostLinkComponent","StyledDate","StyledTitle","StyledChaptersContainer","StyledChapters","StyledTagsLabel","StyledTags","StyledAuthorContainer","StyledAuthor","StyledBottomPageContainer","PostComponent","toLocaleDateString","weekday","year","month","day","postChapters","postChapter","tag","marginRight","MainView","newestPost","setNewestPost","mainViewPost","reduce","mainPost","nextPost","JSON","stringify","customNewPost","shouldShowPost","MainViewPage","USER_ROLES","StyledRegisterForm","UserValidator","IsAlphanumeric","NotContains","MinLength","IsEnum","IsEmail","email","userValidate","setEmail","RegisterPage","getTags","createTag","saveTag","deleteTag","deletedTag","StyledTagsPanel","TagValidator","name","tagValidate","setTag","allTags","setAllTags","fetchAllTags","List","ListItem","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","aria-label","onTagDelete","PanelTagsPage","ChaptersList","mainPosts","setMainPosts","postTitle","setPostTitle","fetchAllPosts","mainTitles","FilterAndSetMainPosts","storyTitle","StyledSelect","Select","MenuItem","createContent","savedContent","updateContent","updatedContent","deleteContent","deletedContent","StyledPanel","PostValidator","IsArray","postValidate","useStyles","makeStyles","chips","display","flexWrap","chip","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","getStyles","personName","theme","indexOf","typography","fontWeightRegular","fontWeightMedium","classes","useTheme","setData","setTitle","setTags","contentId","setContentId","setDate","setUser","onPostSave","initialValue","init","plugins","toolbar","height","e","getContent","handleEditorChange","val","labelId","multiple","Input","renderValue","selected","className","Chip","contentTitle","PanelPostsAddingPage","postType","setPostType","setStoryTitle","allPosts","setAllPosts","myId","onPostDelete","PanelPostsPage","editedPost","setEditedPost","params","customPostType","fetchAllBookmarks","onBookmarkDelete","PanelBookmarksPage","BookmarkValidator","bookmarkValidate","postId","setPostId","bookmarkTitle","setBookmarkTitle","allMainPosts","PanelBookmarkAddingPage","editedBookmark","setEditedBookmark","allUsers","setAllUsers","actualAdminNick","setActualAdminNick","fetchAllUsers","blognellaUser","actualAdmin","getBlognellaUser","onUserDelete","PanelUsersPage","allUsersRoles","PanelUsersAddingPage","editedUser","setEditedUser","setPost","setPostChapters","allPostChapters","PostPage","updatedSser","updateUserPassword","LoginForgetPage","SearchList","BasicExample","exact","SearchPage","PanelPostsUpdatingPage","PanelBookmarkUpdatingPage","PanelUsersUpdatingPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf0d1ac6.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport interface UserProps {\r\n    _id?: string;\r\n    nick: string;\r\n    login: string;\r\n    password: string;\r\n    email: string;\r\n    role?: string;\r\n}\r\n\r\nexport const getUsers = async () => {\r\n    try {\r\n      const users = await axios.get(\r\n         '/users'\r\n      )\r\n      return users\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getUser = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const user = await axios.get(\r\n        `/user/${_id}`\r\n      )\r\n      return user\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createUser = async (\r\n    user: UserProps\r\n  ) => {\r\n    try {\r\n      const savedUser = await axios.post(\r\n        `/user`,\r\n        user\r\n      )\r\n      return savedUser\r\n    } catch (error) {\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.errors, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const updateUser = async (\r\n    user: UserProps\r\n  ) => {\r\n    try {\r\n      const updatedUser = await axios.put(\r\n        `/user/${user._id}`,\r\n        user\r\n      )\r\n      return updatedUser;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.keyValue, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const deleteUser = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedUser = await axios.delete(\r\n        `/user/${_id}`\r\n      )\r\n      return deletedUser;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import styled from 'styled-components'\r\n\r\nexport const StyledMain = styled.main`\r\n    max-width: 930px;\r\n    margin: 0rem auto 0rem auto;\r\n`\r\n\r\nexport const StyledPanelContent = styled.div`\r\n    width: 100%;\r\n    a{\r\n        text-decoration: underline !important;\r\n    }\r\n`;\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledAdminPanel = styled.div`\r\n  border-right: 1px solid black;\r\n  margin-right: 1rem;\r\n  height: 100%;\r\n`;\r\n\r\nexport const StyledAdminPanelItem = styled.div`\r\n    padding-top: 1.8rem;\r\n    padding-right: 0.5rem;\r\n`;\r\n\r\nexport const StyledText = styled.span`\r\n    border-bottom: 1px solid black;\r\n`;\r\n\r\nexport const CenteredSpan = styled.span`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CenteredSpan, StyledAdminPanel, StyledAdminPanelItem, StyledText } from \"./AdminPanel.styles\";\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\n\r\nconst AdminPanel = () => {\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    return (\r\n        <StyledAdminPanel>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/posts\"}><CenteredSpan><NotesIcon/>{lang === \"en\" ? \"POSTS\" : \"WPISY\"}</CenteredSpan></Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/bookmarks\"}><CenteredSpan><BookmarksIcon/>{lang === \"en\" ? \"BOOKMARKS\" : \"ZAKŁADKI\"}</CenteredSpan></Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/users\"}><CenteredSpan><PersonIcon/>{lang === \"en\" ? \"USERS\" : \"UŻYTKOWNICY\"}</CenteredSpan></Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n            <StyledAdminPanelItem><StyledText>\r\n                <Link to={\"/panel/tags\"}><CenteredSpan><LocalOfferIcon/>{lang === \"en\" ? \"TAGS\" : \"ETYKIETY\"}</CenteredSpan></Link>\r\n            </StyledText></StyledAdminPanelItem>\r\n        </StyledAdminPanel>\r\n    )\r\n}\r\n\r\nexport default AdminPanel;","import styled from 'styled-components'\r\n\r\nexport const Logo = styled.div`\r\n    font-family: Roboto;\r\n    font-size: 3.5rem;\r\n    padding: 22px 30px;\r\n`;\r\n\r\nexport const LogoContainer = styled.div`\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n    background: #333333;\r\n`;\r\n\r\nexport const LinksContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const LinkElement = styled.div`\r\n    color: #ffffff;\r\n    padding: 1rem;\r\n    float: left;\r\n    padding-bottom: 0.5rem;\r\n    padding-top: 0.5rem;\r\n    border-left: 1px solid #404040;\r\n    border-right: 0 solid #404040;\r\n\r\n    a{\r\n        text-decoration: underline;\r\n    }\r\n\r\n    &:hover{\r\n        color: #ffffff;\r\n        background-color: #000000;\r\n        text-decoration: none;\r\n    }\r\n\r\n    &>a:hover{\r\n        color: #ffffff;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nexport const LinkLoginElement = styled.div`\r\n    color: #ffffff;\r\n    padding: 1rem;\r\n    float: left;\r\n    padding-bottom: 0.5rem;\r\n    padding-top: 0.5rem;\r\n    border-left: 1px solid #404040;\r\n    border-right: 0 solid #404040;\r\n    height: fit-content;\r\n\r\n    &:hover{\r\n        color: #ffffff;\r\n        background-color: #000000;\r\n        text-decoration: none;\r\n    }\r\n\r\n    &>a:hover{\r\n        color: #ffffff;\r\n    }\r\n`;\r\n\r\nexport const SearchElement = styled.div`\r\n    color: #ffffff;\r\n    padding: 1rem;\r\n    float: left;\r\n    padding-bottom: 0rem;\r\n    padding-top: 0.5rem;\r\n    border-left: 1px solid #404040;\r\n    border-right: 0 solid #404040;\r\n`;\r\n\r\nexport const LoginRegisterContainer = styled.div`\r\n    display:flex;\r\n    justify-content: flex-end;\r\n    background: #333333;\r\n    align-items: flex-end;\r\n`;\r\n\r\nexport const MainViewTabsContainer = styled.div`\r\n    display:flex;\r\n    background-color:#222222;\r\n    flex-wrap: wrap;\r\n    border-top: 1px solid #404040;\r\n    border-bottom: 1px solid #404040;\r\n    border-left: 0 solid #404040;\r\n    border-right: 0 solid #404040;\r\n    margin: 0 10px;\r\n    padding: 10px 0;\r\n`;\r\n\r\nexport const MainViewTabsContainerWrapper = styled.div`\r\n    width: 100%;\r\n    background: #333333;\r\n`\r\n\r\nexport const AboutSection = styled.div`\r\n    width:20%;\r\n    border-left: 1px solid #404040;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0rem 1rem;\r\n    color: #00cccb;\r\n`;\r\n\r\nexport const MainContentContainer = styled.div`\r\n    display: flex;\r\n    min-height: 40rem;\r\n    background-color: #333333;\r\n    justify-content: space-between;\r\n    flex-grow: 1;\r\n    padding-top: 1rem;\r\n    padding-bottom: 2rem;\r\n`;\r\n\r\nexport const StyledAdminPanelContainer = styled.div`\r\n    display:flex;\r\n    height: 100%;\r\n    /* flex-direction: column; */\r\n    a{\r\n        text-decoration:none;\r\n    }\r\n    a:hover{\r\n        color: #00cccb;\r\n    }\r\n`;\r\n","import axios from \"axios\";\r\n\r\nexport interface BookmarkProps {\r\n    _id?: string;\r\n    title: string;\r\n    post: any;\r\n}\r\n\r\nexport const getBookmarks = async () => {\r\n    try {\r\n      const bookmarks = await axios.get(\r\n         '/bookmarks'\r\n      )\r\n      return bookmarks\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getBookmark = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const bookmark = await axios.get(\r\n        `/bookmark/${_id}`\r\n      )\r\n      return bookmark\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createBookmark = async (\r\n    bookmark: BookmarkProps\r\n  ) => {\r\n    try {\r\n      const savedBookmark = await axios.post(\r\n        `/bookmark`,\r\n        bookmark\r\n      )\r\n      return savedBookmark\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.errors, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const updateBookmark = async (\r\n    bookmark: BookmarkProps\r\n  ) => {\r\n    try {\r\n      const updatedBookmark = await axios.put(\r\n        `/bookmark/${bookmark._id}`,\r\n        bookmark\r\n      )\r\n      return updatedBookmark;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.keyValue, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const deleteBookmark = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedBookmark = await axios.delete(\r\n        `/bookmark/${_id}`\r\n      )\r\n      return deletedBookmark;\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import React, { useState } from \"react\";\r\nimport { LinkElement, MainViewTabsContainer, MainViewTabsContainerWrapper } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BookmarkProps, getBookmarks } from \"../../APIRequests/Bookmark\";\r\n\r\nconst DefaultViewTabs = () => {\r\n    const [allBookmarks, setAllBookmarks] = useState<BookmarkProps[]>([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllBookmarks = () => {\r\n        getBookmarks()\r\n        .then(({ data: { bookmarks } }: BookmarkProps[] | any) => {if(bookmarks.length !== allBookmarks.length) setAllBookmarks(bookmarks)})\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    if(allBookmarks.length === 0) fetchAllBookmarks();\r\n\r\n    const getAllLinks = () => {\r\n        return allBookmarks.map((bookmark) => <LinkElement key={bookmark._id}><Link to={bookmark.post.length > 0 ? `/ui/post/${bookmark.post[0]._id}` : '/'}>{bookmark.title}</Link></LinkElement>) || []\r\n    }\r\n\r\n    return (\r\n        <MainViewTabsContainerWrapper>\r\n            <MainViewTabsContainer>\r\n                <LinkElement><Link to={\"/\"}>{lang === \"en\" ? \"Home\" : \"Główna\"}</Link></LinkElement>\r\n                {getAllLinks()}\r\n                {/* <LinkElement><Link to={\"/\"}>Home</Link></LinkElement> */}\r\n            </MainViewTabsContainer>\r\n        </MainViewTabsContainerWrapper>\r\n    )\r\n}\r\n\r\nexport default DefaultViewTabs;","import styled from 'styled-components';\r\n\r\nexport const StyledSearch = styled.div`\r\n    label{\r\n        color: white;\r\n    }\r\n    .MuiInputBase-input{\r\n        color: #dfdfdf;\r\n    }\r\n    button{\r\n        height: 30px;\r\n        margin-top: 25px;\r\n    }\r\n    \r\n    display: flex;\r\n    flex-direction: row;\r\n`","import Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { StyledSearch } from \"./SearchComponent.styles\";\r\n\r\nconst SearchComponent = (props) => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const onSearch = () => {\r\n        props.history.push({\r\n            pathname: '/search',\r\n            state: { search: searchValue }\r\n          })\r\n    }\r\n\r\n    return (\r\n        <StyledSearch>\r\n            <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Search\" : \"Wyszukaj\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Type in tag or title here\" : \"Wpisz etykietę lub tytuł\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setSearchValue(input.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onSearch}>\r\n                {lang === \"en\" ? \"Search\" : \"Wyszukaj\"}\r\n            </Button>\r\n        </StyledSearch>\r\n    ) \r\n}\r\n\r\nexport default withRouter(SearchComponent);","import React, { useState } from \"react\";\r\nimport { LinkElement, LinkLoginElement, LoginRegisterContainer, SearchElement } from \"../DefaultView/DefaultView.styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUser, UserProps } from \"../../APIRequests/User\";\r\nimport DefaultViewTabs from \"./DefaultViewTabs\";\r\nimport { availablePages } from \"../../App\";\r\nimport SearchComponent from \"../SearchComponent/SearchComponent\";\r\n\r\nconst DefaultViewLinks = (props) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const lang = localStorage.getItem('blognellaLang');\r\n\r\n    const fetchUser = () => {\r\n        getUser(localStorage.getItem('blognellaId') || \"\")\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            if(!nick) {setNick(user.nick);}\r\n            if(!role) {setRole(user.role);}\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onLogout = () => {\r\n        localStorage.removeItem('blognellaId');\r\n    }\r\n\r\n    if(localStorage.getItem('blognellaId')) fetchUser();\r\n\r\n    const changeLanguage = () => {\r\n        const actualLang = localStorage.getItem('blognellaLang') || \"en\";\r\n        actualLang === \"en\" ? localStorage.setItem(\"blognellaLang\", \"pl\") : localStorage.setItem(\"blognellaLang\", \"en\");\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LoginRegisterContainer>\r\n                <SearchElement><SearchComponent/></SearchElement>\r\n                {availablePages.includes(props.pageName) && role === \"admin\" ? <LinkElement><Link to={\"/panel/posts\"}>Panel</Link></LinkElement> : <></>}\r\n                { nick ? <LinkElement onClick={onLogout} ><Link to={\"/\"}>{lang === \"en\" ? \"Logout\" : \"Wyloguj\"} <span style={{fontWeight: \"bold\"}}>{nick}</span></Link></LinkElement> : \r\n                <LinkLoginElement ><Link to={\"/login\"}>{lang === \"en\" ? \"Login\" : \"Zaloguj\"}</Link></LinkLoginElement> } \r\n                { !nick ? <LinkLoginElement><Link to={\"/register\"}>{lang === \"en\" ? \"Register\" : \"Zarejestruj\"}</Link></LinkLoginElement> : <></>}\r\n                <LinkElement onClick={changeLanguage}><a>{localStorage.getItem('blognellaLang') || \"en\"}</a></LinkElement>\r\n            </LoginRegisterContainer>\r\n            <DefaultViewTabs/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultViewLinks;","import React from \"react\";\r\nimport { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\nimport DefaultViewLinks from \"./DefaultViewLinks\";\r\n// import { LinksContainer, Logo, LogoContainer } from \"./DefaultView.styles\";\r\n\r\nconst DefaultView = (props) => {\r\n    return (\r\n        <>\r\n        <LogoContainer>\r\n            <Logo>Blognella</Logo>\r\n            <LinksContainer>\r\n                    <div>\r\n                    {/* <LinkElement><Link color=\"white\" to={\"/login\"}>Login</Link></LinkElement>\r\n                    <LinkElement><Link to={\"/register\"}>Register</Link></LinkElement> */}\r\n                    </div>\r\n            </LinksContainer>\r\n        </LogoContainer>\r\n        <DefaultViewLinks {...props}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefaultView;","import axios from \"axios\";\r\n\r\nexport interface PostProps {\r\n    _id?: string;\r\n    date: Date;\r\n    tags: string[];\r\n    title: string;\r\n    content: any;\r\n    user: string;\r\n}\r\n\r\nexport const getPosts = async () => {\r\n    try {\r\n      const posts = await axios.get(\r\n         '/posts'\r\n      )\r\n      return posts\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getPost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const post = await axios.get(\r\n        `/post/${_id}`\r\n      )\r\n      return post\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createPost = async (\r\n    post: PostProps\r\n  ) => {\r\n    try {\r\n      const savedPost = await axios.post(\r\n        `/post`,\r\n        post\r\n      )\r\n      return savedPost\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            console.log(\"dat\");\r\n            console.log(error.response);\r\n            return {data: error.response.data.errors, status: 403}\r\n        } else if(error.response.status === 409) {\r\n            return {data: {}, status: 409}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const updatePost = async (\r\n    post: PostProps\r\n  ) => {\r\n    try {\r\n      const updatedPost = await axios.put(\r\n        `/post/${post._id}`,\r\n        post\r\n      )\r\n      return updatedPost;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.keyValue, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const deletePost = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedPost = await axios.delete(\r\n        `/post/${_id}`\r\n      )\r\n      return deletedPost\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import React from \"react\";\r\n\r\nconst PostAboutComponent = (props) => {\r\n    const date = new Date(props.post.date).toDateString();\r\n\r\n    return (\r\n        props.post.date > new Date().toISOString() ? <div>It will be avaiable soon - {date}</div> : \r\n            <>\r\n            <div dangerouslySetInnerHTML={{ __html: props.post.content[0].text }} />\r\n            </>\r\n    )\r\n}\r\n\r\nexport default PostAboutComponent;","import React, { useEffect, useState } from \"react\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostAboutComponent from \"../PostComponent/PostAboutComponent\";\r\nimport { AboutSection } from \"./DefaultView.styles\";\r\n\r\n\r\nconst DefaultViewAbout = () => {\r\n    const [aboutPost, setAboutPost] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allAboutPosts = posts.filter((post) => post.content[0].title === \"About\");\r\n            setAboutPost(allAboutPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(aboutPost.length === 0) fetchAllPosts();\r\n    }, [])\r\n\r\n    return (\r\n        <AboutSection>\r\n            {aboutPost.length > 0 ? <PostAboutComponent post={aboutPost[0]} /> : <div>{lang === \"en\" ? \"There is no About post\" : \"Brak wpisu o mnie\"}</div>}\r\n        </AboutSection>\r\n    )\r\n}\r\n\r\nexport default DefaultViewAbout;","import styled from 'styled-components'\r\n\r\nexport const MainViewContainer = styled.div`\r\n    /* display: flex; */\r\n    /* justify-content: space-between; */\r\n    margin: 0rem 1rem;\r\n    width:100%;\r\n`;","import React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getUser, UserProps } from './APIRequests/User';\r\nimport { StyledMain, StyledPanelContent } from './App.styles';\r\nimport AdminPanel from './components/AdminPanel/AdminPanel';\r\nimport DefaultView from './components/DefaultView/DefaultView'\r\nimport { MainContentContainer, StyledAdminPanelContainer } from './components/DefaultView/DefaultView.styles';\r\nimport DefaultViewAbout from './components/DefaultView/DefaultViewAbout';\r\n\r\nimport './components/globalStyles/globalStyles.css';\r\nimport { MainViewContainer } from './components/MainView/MainView.styles';\r\n\r\nexport const availablePages = [\"/register\", \"/login/forget\", \"/login\", \"/ui/post/:id\", \"/search\", \"/\"]\r\n\r\nconst App: React.FC = (props:any) => {\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const fetchUser = () => {\r\n      const userId = localStorage.getItem('blognellaId') || \"\";\r\n      if(userId) {\r\n        getUser(userId)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            if(role !== user.role) {setRole(user.role);}\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n      } else {\r\n        setRole(\"guest\");\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUser()\r\n    if(!localStorage.getItem('blognellaLang')) {\r\n      localStorage.setItem('blognellaLang', \"en\");\r\n    }\r\n  }, [props])\r\n\r\n\r\n  if(props.match.path === \"/login\" &&  localStorage.getItem('blognellaId')) {props.history.push(\"/\")};\r\n  if(!availablePages.includes(props.match.path) && role !== \"admin\" && role) {props.history.push(\"/\")};\r\n\r\n  const Content = props.page;\r\n  return (\r\n    <StyledMain>\r\n      <DefaultView pageName={props.match.path}/>\r\n      <MainContentContainer>\r\n        <MainViewContainer>\r\n          <StyledAdminPanelContainer>\r\n\r\n          {role && \r\n            <>\r\n           {!availablePages.includes(props.match.path) ? <AdminPanel/> : <></>}\r\n           <StyledPanelContent><Content/></StyledPanelContent>\r\n           </>\r\n           }\r\n          </StyledAdminPanelContainer>\r\n        </MainViewContainer>\r\n        {availablePages.includes(props.match.path) ? <DefaultViewAbout/> : <></>}\r\n      </MainContentContainer>\r\n\r\n\r\n    </StyledMain>\r\n  )\r\n}\r\n\r\nexport default withRouter(App)\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledLoginForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #333333;\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n\r\n    .MuiInputBase-root{\r\n      color: #d8d8d8;\r\n    }\r\n\r\n    label{\r\n      color: white;\r\n    }\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n    .MuiButton-containedPrimary{\r\n      margin: 0 0.5rem;\r\n    }\r\n`;\r\n\r\n","import { validateOrReject } from \"class-validator\";\r\n\r\nexport async function validateOrRejectExample(input) {\r\n    try {\r\n      await validateOrReject(input)\r\n      return []\r\n    } catch (errors) {\r\n    //   console.log('Caught promise rejection (validation failed). Errors: ', errors);\r\n    //   throw errors;\r\n    return errors;\r\n    }\r\n}\r\n\r\nexport const getPolishEntity = (entity) => {\r\n    if(entity === \"password\") {\r\n        return \"hasło\"\r\n    } else if(entity === \"role\") {\r\n        return \"rola\"\r\n    } else if(entity === \"date\") {\r\n        return \"data\"\r\n    } else if(entity === \"tags\") {\r\n        return \"etykiety\"\r\n    } else if(entity === \"title\") {\r\n        return \"tytuł\"\r\n    } else if(entity === \"content\") {\r\n        return \"treść\"\r\n    } else if(entity === \"comment\") {\r\n        return \"komentarz\"\r\n    } else if(entity === \"user\") {\r\n        return \"użytkownik\"\r\n    } else if(entity === \"post\") {\r\n        return \"wpis\"\r\n    } else if(entity === \"name\") {\r\n        return \"nazwa\"\r\n    } else if(entity === \"text\") {\r\n        return \"tekst\"\r\n    }\r\n    \r\n    return entity;\r\n}\r\n\r\nconst getValidationMsg = (englishConstraintMsg, constraint) => {\r\n    const entity = getPolishEntity(getFirstWord(englishConstraintMsg));\r\n    if(constraint === \"isAlphanumeric\") {\r\n        return `pole ${entity} musi zawierać tylko litery i liczby`\r\n    } else if(constraint === \"isNotEmpty\") {\r\n        return `pole ${entity} nie jest dozwole puste`\r\n    } else if(constraint === \"isString\") {\r\n        return `pole ${entity} musi być tekstem`\r\n    } else if(constraint === \"notContains\") {\r\n        return `pole ${entity} nie może zawierać spacji`\r\n    } else if(constraint === \"minLength\") {\r\n        return `pole ${entity} musi zawierać co najmniej wymaganą liczbę znaków`\r\n    } else if(constraint === \"isEmail\") {\r\n        return `pole ${entity} musi być prawidłowym emailem`\r\n    } else if(constraint === \"isArray\") {\r\n        return `pole ${entity} musi być zbiorem etykiet`\r\n    }else if(constraint === \"isDateString\") {\r\n        return `pole ${entity} musi być w poprawnym formacie daty`\r\n    }\r\n    return \"\";\r\n}\r\n\r\nconst getFirstWord = (string) => {\r\n    return string.replace(/ .*/, '');\r\n}\r\n\r\nexport const getAllValidationMsg = (validation:any, language:string ) => {\r\n    const allValidationMsg = Object.keys(validation).map((con:any) => {\r\n        if(con === \"isAlphanumeric\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"isNotEmpty\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"isString\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"notContains\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"minLength\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"isEmail\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"isArray\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        } else if(con === \"isDateString\") {\r\n            return language === \"en\" ? validation[con] : getValidationMsg(validation[con], con);\r\n        }\r\n        return \"\";\r\n    })\r\n    return allValidationMsg;\r\n}\r\n","import React from \"react\"\r\nimport { getPolishEntity } from \"./validation\"\r\n\r\nexport const getValidatorMsg = (messages) => {\r\n    return messages.map((message) => <div key={message}>{message}</div>)\r\n}\r\n\r\nexport const getUniqueValidatorMsg = (messages, lang) => {\r\n    return Object.keys(messages).map((field) => lang === \"en\" ? `${field} should be unique` : `pole ${getPolishEntity(field)} musi byc unikalne`)\r\n}","import React, {useState} from \"react\";\r\nimport { FormItem, LogicControls, StyledLoginForm } from \"./LoginForm.styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Popover, Typography } from \"@material-ui/core\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getUsers, UserProps } from \"../../APIRequests/User\";\r\nimport { getValidatorMsg } from \"../validators/validatorMsg\";\r\n\r\nconst LoginForm = (props) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n    const onSubmit = (event) => {\r\n        event.persist();\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => {\r\n            const user = users.find((user) => user.login === login && user.password === password)\r\n            if(user) {\r\n                localStorage.setItem('blognellaId', user._id);\r\n                props.history.push('/');\r\n            } else {\r\n                setErrorMsg([lang === \"en\" ? \"Invalid login or password\" : \"Nieprawidłowy login lub hasło\"])\r\n                setAnchorEl(event.target);\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledLoginForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Password\" : \"Hasło\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your password here\" : \"Proszę wpisz swoje hasło\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div>{lang === \"en\" ? \"Forgot password? Click \" : \"Zapomniałes hasła? Kliknij \"}<Link to={\"/login/forget\"}>{lang === \"en\" ? \"here\" : \"tutaj\"}</Link></div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                        {lang === \"en\" ? \"Login\" : \"Zaloguj\"}\r\n                    </Button>\r\n                    <Popover\r\n                    id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                    open={Boolean(anchorEl)}\r\n                    anchorEl={anchorEl}\r\n                    onClose={() => setAnchorEl(null)}\r\n                    anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    >\r\n                        <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n                    </Popover>\r\n                </LogicControls>\r\n            </StyledLoginForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React from \"react\";\r\nimport LoginForm from \"../components/LoginForm/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n    return <LoginForm />\r\n}\r\n\r\nexport default LoginPage","import axios from \"axios\";\r\n\r\nexport interface CommentProps {\r\n    _id?: string;\r\n    date: string;\r\n    text: string;\r\n    user: any;\r\n}\r\n\r\nexport const getComments = async () => {\r\n    try {\r\n      const comments = await axios.get(\r\n         '/comments'\r\n      )\r\n      return comments\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const getComment = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const comment = await axios.get(\r\n        `/comment/${_id}`\r\n      )\r\n      return comment\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\nexport const createComment = async (\r\n    comment: CommentProps\r\n  ) => {\r\n    try {\r\n      const savedComment = await axios.post(\r\n        `/comment`,\r\n        comment\r\n      )\r\n      return savedComment\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.errors, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const updateComment = async (\r\n    comment: CommentProps\r\n  ) => {\r\n    try {\r\n      const updatedComment = await axios.put(\r\n        `/comment/${comment._id}`,\r\n        comment\r\n      )\r\n      return updatedComment;\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.keyValue, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const deleteComment = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedComment = await axios.delete(\r\n        `/comment/${_id}`\r\n      )\r\n      return deletedComment\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n","import {\r\n    IsDateString,\r\n    IsNotEmpty,\r\n    IsString,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from './validation';\r\n\r\n    export class CommentValidator {\r\n    constructor(comment) {\r\n      this.date = comment.date;\r\n      this.text = comment.text;\r\n      this.user = comment.user;\r\n    }\r\n    @IsDateString()\r\n    date: string;\r\n\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    text: string[];\r\n\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    user: string;\r\n  }\r\n\r\n    const commentValidate = (user, language) => {\r\n        const commentValidator = new CommentValidator(user);\r\n        const val = validateOrRejectExample(commentValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                // console.log(data);\r\n                return getAllValidationMsg(data[0].constraints, language)\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default commentValidate;","import styled from 'styled-components';\r\n\r\nexport const StyledComponentTextField = styled.div`\r\n    label{\r\n        color: white;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .MuiInputBase-input{\r\n        color: #dfdfdf;\r\n    }\r\n`;\r\n\r\nexport const StyledCommentAuthor = styled.span`\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const StyledCommentButton = styled.span`\r\n    margin-left: 1rem;\r\n    color: #00cccb;\r\n    cursor: pointer;\r\n\r\n    &:hover{\r\n        color: white;\r\n    }\r\n\r\n    &:active{\r\n        color: #dfdfdf;\r\n    }\r\n`;","import { Popover, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { deleteComment, updateComment } from \"../../APIRequests/Comment\";\r\nimport commentValidate from \"../validators/commentValidator\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { StyledComponentTextField, StyledCommentAuthor, StyledCommentButton} from \"./PostComment.styles\";\r\n\r\nconst PostCommentComponent = (props) => {\r\n    const [isEditingMode, setIsEditingMode] = useState(false);\r\n    const [commentText, setCommentText] = useState(props.comment.text);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n    const canEdit = props.role !== \"guest\" && (props.comment.user === props.nick || props.role === \"admin\" )\r\n\r\n    const onEdit = () => {\r\n        setIsEditingMode(!isEditingMode);\r\n    }\r\n\r\n    const onDelete = () => {\r\n        props.updatePostToDeleteComment(props.comment._id);\r\n        deleteComment(props.comment._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Comment not deleted')\r\n            }\r\n            window.location.reload();\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    const onSaveEditedComment = (event) => {\r\n        event.persist();\r\n\r\n        const comment = {\r\n            _id: props.comment._id,\r\n            date: props.comment.date,\r\n            text: commentText,\r\n            user: props.comment.user\r\n        }\r\n        commentValidate(comment, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                updateComment(comment)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        setIsEditingMode(!isEditingMode);\r\n                        window.location.reload();\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        // updateComment(comment)\r\n        // .then(({ status}) => {\r\n        //     if (status !== 200) {\r\n        //     throw new Error('Error! Comment not saved')\r\n        //     }\r\n        // })\r\n        // .catch((err) => console.log(err))\r\n        // window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <StyledCommentAuthor>{props.comment.user} </StyledCommentAuthor> {new Date(props.comment.date).toDateString()}\r\n                {canEdit ? <><StyledCommentButton onClick={onEdit}>Edit</StyledCommentButton><StyledCommentButton onClick={onDelete}>Delete</StyledCommentButton></> : <></>}\r\n            </div>\r\n            {/* <div>{props.comment.text}</div> */}\r\n            <StyledComponentTextField>\r\n                <TextField\r\n                        id=\"standard-full-width\"\r\n                        label=\"\"\r\n                        style={{ margin: 8 }}\r\n                        placeholder={lang === \"en\" ? \"Please type in your comment here\" : \"Proszę wpisz komentarz\"}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                            readOnly: !isEditingMode,\r\n                        }}\r\n                        defaultValue={commentText}\r\n                        onChange={(input) => setCommentText(input.target.value)}\r\n                />\r\n                {isEditingMode ? \r\n                <Button variant=\"contained\" color=\"primary\" onClick={onSaveEditedComment}>\r\n                    {lang === \"en\" ? \"Save Comment\" : \"Zapisz Komentarz\"}\r\n                </Button> : <></>}\r\n                <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n                >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n                </Popover>\r\n            </StyledComponentTextField>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostCommentComponent);","import { Popover, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { createComment } from \"../../APIRequests/Comment\";\r\nimport { updatePost } from \"../../APIRequests/Post\";\r\nimport { getUser, UserProps } from \"../../APIRequests/User\";\r\nimport commentValidate from \"../validators/commentValidator\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { StyledComponentTextField } from \"./PostComment.styles\";\r\nimport PostCommentComponent from \"./PostCommentComponent\";\r\n\r\nconst PostCommentList = (props) => {\r\n    const [nick, setNick] = useState(\"Guest\");\r\n    const [role, setRole] = useState(\"guest\");\r\n    // const [user, setUser] = useState();\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n    const fetchUser = (userId:string) => {\r\n        getUser(userId)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setNick(user.nick);\r\n            setRole(user.role);\r\n            // setUser(user);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('blognellaId');\r\n        if(userId) {\r\n            fetchUser(userId);\r\n        } else {\r\n            setNick(\"Guest\");\r\n            setRole(\"guest\");\r\n        }\r\n    }, [props])\r\n\r\n    const updatePostToEditComment = (commentId:string) => {\r\n        const updatedComments = props.post.comment.filter((comment) => comment !== commentId);\r\n        const post = {\r\n            date: props.post.date,\r\n            tags: props.post.tags,\r\n            title: props.post.title,\r\n            content: props.post.content[0]._id,\r\n            _id: props.post._id,\r\n            user: props.post.user,\r\n            comment: updatedComments\r\n        }\r\n        updatePost(post)\r\n        .then(({ status}) => {\r\n            if (status !== 200) {\r\n              throw new Error('Error! Post not saved')\r\n            }\r\n        })\r\n      .catch((err) => console.log(err))\r\n    }\r\n\r\n    const onNewCommentSave = (event) => {\r\n        event.persist();\r\n        const comment = {\r\n            text: newComment,\r\n            date: new Date().toISOString(),\r\n            user: nick\r\n        }\r\n\r\n        commentValidate(comment, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                createComment(comment)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        const post = {\r\n                            date: props.post.date,\r\n                            tags: props.post.tags,\r\n                            title: props.post.title,\r\n                            content: props.post.content[0]._id,\r\n                            _id: props.post._id,\r\n                            user: props.post.user,\r\n                            comment: [...props.post.comment, data.comment._id]\r\n                        }\r\n                        updatePost(post)\r\n                        .then(({data, status}: any) => {\r\n                            if(status !== 403 && status !== 500) {\r\n                                window.location.reload();\r\n                            }\r\n                            else if(status === 403) {\r\n                                setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                                setAnchorEl(event.target);\r\n                            } else {\r\n                                setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                                setAnchorEl(event.target);\r\n                            }\r\n                        });\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getComments = () => {\r\n        return props.post.comment.map((comment) => <PostCommentComponent key={comment._id} nick={nick} role={role} comment={comment} updatePostToDeleteComment={updatePostToEditComment}/>)  \r\n    }\r\n\r\n\r\n    return (\r\n    <>\r\n    {props.post.comment.length < 1 ? <div>{lang === \"en\" ? \"No comments\" : \"Brak komentarzy\"}</div> : getComments()}\r\n    \r\n    <StyledComponentTextField>\r\n        <TextField\r\n                        id=\"standard-full-width\"\r\n                        label={lang === \"en\" ? \"Add Comment\" : \"Dodaj komentarz\"}\r\n                        style={{ margin: 8 }}\r\n                        placeholder={lang === \"en\" ? \"Please type in your comment here\" : \"Proszę wpisz komentarz\"}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        defaultValue={newComment}\r\n                        onChange={(input) => setNewComment(input.target.value)}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onNewCommentSave}>\r\n            {lang === \"en\" ? \"Add Comment\" : \"Dodaj Komentarz\"}\r\n        </Button>\r\n        <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n        </Popover>\r\n    </StyledComponentTextField>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PostCommentList;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostLinkComponent = (props) => {\r\n    return <Link to={`/ui/post/${props.post._id}`}>{props.post.title}</Link>\r\n}\r\n\r\nexport default PostLinkComponent;","import styled from 'styled-components';\r\n\r\nexport const StyledDate = styled.div`\r\n    font-size: 0.7rem;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const StyledTitle = styled.div`\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n    margin: 0.2rem 0;\r\n`;\r\n\r\nexport const StyledText = styled.div`\r\n    margin: 0.2rem 0;\r\n`;\r\n\r\nexport const StyledChaptersContainer = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 3rem;\r\n`;\r\n\r\nexport const StyledChapters = styled.div`\r\n    font-size: 1.6rem;\r\n    margin-top: 1rem;\r\n    \r\n`;\r\n\r\nexport const StyledTagsLabel = styled.div`\r\n    margin-top: 0.5rem;\r\n    font-weight: bold;\r\n    color: #00cccb;\r\n`;\r\n\r\nexport const StyledTags = styled.div`\r\n    color: #00cccb;\r\n    font-size: 0.92rem;\r\n    font-style: oblique;\r\n    margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const StyledAuthorContainer = styled.div`\r\n    margin-bottom: 2rem;\r\n    font-size: 0.7rem;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const StyledAuthor = styled.span`\r\n    margin-bottom: 2rem;\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const StyledBottomPageContainer = styled.div`\r\n    width: 100%;\r\n    background-color: #303030;\r\n    padding: 0.2rem 0.75rem;\r\n    border-bottom: 2px solid #404040;\r\n    margin-top: 2rem;\r\n`;","import React from \"react\";\r\nimport PostCommentList from \"./PostCommentList\";\r\nimport PostLinkComponent from \"./PostLinkComponent\";\r\nimport {StyledDate, StyledText, StyledTitle, StyledChapters,\r\n    StyledTags, StyledTagsLabel, StyledAuthor, StyledChaptersContainer, StyledBottomPageContainer, StyledAuthorContainer} from \"./PostComponent.styles\";\r\n// import DatePicker from 'react-date-picker';\r\n\r\nconst PostComponent = (props) => {\r\n    // const [value, onChange] = useState<any>(new Date());\r\n    // const date = new Date('2018-05-18T04:00:00Z').toLocaleString();\r\n    // const date = new Date(props.post.date).toUTCString();\r\n\r\n    // const customoldData = new Date('2021-01-19T21:41:19.169Z').toDateString()\r\n    // const customnewData = new Date('2021-02-19T21:41:19.169Z').toDateString()\r\n    // console.log(\"old\");\r\n    // console.log(customoldData);\r\n    // console.log(\"new\");\r\n    // console.log(customnewData);\r\n    // const actualDate = new Date().toDateString()\r\n\r\n    // console.log(customoldData > customnewData); //true\r\n    // console.log(customoldData > actualDate)\r\n\r\n\r\n    // const date = new Date(props.post.date).toDateString();\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const options = {weekday: 'long',  year: \"numeric\", month: \"long\", day: \"numeric\", };  \r\n    const date = new Date(props.post.date).toLocaleDateString(lang === \"en\" ? \"en-GB\" : \"pl-GB\", options);\r\n    // console.log(new Date(props.post.date).toLocaleDateString('en-GB', options));\r\n    // console.log(new Date(props.post.date).toLocaleDateString('pl-GB', options));\r\n\r\n    const getTags = () => {\r\n        return props.post.tags.map((tag) => <span key={tag} style={{marginRight: \"1.2rem\"}}>{tag}</span>)\r\n    }\r\n\r\n    const getPostChapters = () => {\r\n        return props.postChapters.map((postChapter) => <div key={postChapter._id}><PostLinkComponent post={postChapter}/></div>)\r\n    }\r\n\r\n    return (\r\n        props.post.date > new Date().toISOString() ? <div>{lang === \"en\" ? \"It will be avaiable soon - \" : \"Dostępne wkrótce - \"}{date}</div> : \r\n            <>\r\n            {/* <DatePicker\r\n            onChange={onChange}\r\n            value={value}\r\n            /> */}\r\n            <StyledDate>{date}</StyledDate>\r\n            <StyledTitle>{props.post.title}</StyledTitle>\r\n            <StyledText dangerouslySetInnerHTML={{ __html: props.post.content[0].text }} />\r\n            \r\n            <StyledChaptersContainer>\r\n                {props.postChapters.length > 0 ? <StyledChapters>{lang === \"en\" ? \"Chapters\" : \"Rozdziały\"}</StyledChapters> : <></>}\r\n                {getPostChapters()}\r\n            </StyledChaptersContainer>\r\n\r\n            <StyledBottomPageContainer>\r\n                <StyledTags>\r\n                    <StyledTagsLabel>{lang === \"en\" ? \"Tags: \" : \"Etykiety: \"}</StyledTagsLabel>\r\n                    {getTags()}\r\n                </StyledTags>\r\n            </StyledBottomPageContainer>\r\n                <StyledAuthorContainer>{lang === \"en\" ? \"Added by \" : \"Dodane przez \"}<StyledAuthor>{props.post.user}</StyledAuthor></StyledAuthorContainer>\r\n            <StyledBottomPageContainer>\r\n                <PostCommentList post={props.post}/>\r\n            </StyledBottomPageContainer>\r\n                \r\n            \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default PostComponent;","import React, { useEffect, useState } from \"react\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostComponent from \"../PostComponent/PostComponent\";\r\n\r\nconst MainView = () => {\r\n    const [newestPost, setNewestPost] = useState();\r\n\r\n    const fetchNewestPost = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            const mainViewPost = allMainPosts.reduce((mainPost, nextPost) => {\r\n                if(JSON.stringify(mainPost) === JSON.stringify({})) return nextPost\r\n                return mainPost.date < nextPost.date ? nextPost : mainPost;\r\n            },{})\r\n            setNewestPost(mainViewPost);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchNewestPost()\r\n    }, [])\r\n\r\n    const shouldShowPost = () => {\r\n        const customNewPost = newestPost || {content: []};\r\n        return customNewPost.content && customNewPost.content.length > 0;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {shouldShowPost() ? <PostComponent post={newestPost} postChapters={[]}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainView;","import React from \"react\";\r\nimport MainView from \"../components/MainView/MainView\";\r\n\r\nconst MainViewPage = () => {\r\n    return <MainView/>\r\n}\r\n\r\nexport default MainViewPage","import styled from 'styled-components'\r\n\r\nexport const StyledRegisterForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #333333;\r\n  color: white;\r\n  border: 2px solid white;\r\n`\r\n\r\nexport const FormItem = styled.div`\r\n    display: flex;\r\n    flex-grow: 1;\r\n\r\n    label{\r\n      color: white;\r\n    }\r\n\r\n    .MuiInputBase-root{\r\n      color: #dfdfdf;\r\n    }\r\n`;\r\n\r\nexport const LogicControls = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0rem 3rem;\r\n    .MuiButton-containedPrimary{\r\n      margin: 0 0.5rem;\r\n    }\r\n`;\r\n","import {\r\n    IsAlphanumeric,\r\n      IsEmail,\r\n      IsEnum,\r\n    IsNotEmpty,\r\n      IsString,\r\n      MinLength,\r\n      NotContains,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from './validation';\r\n\r\nenum USER_ROLES {\r\n    GUEST = \"guest\",\r\n    LOOGED_USER = \"loggedUser\",\r\n    ADMIN = \"admin\"\r\n}\r\n\r\n    class UserValidator {\r\n      constructor(user) {\r\n        this.nick = user.nick;\r\n        this.login = user.login;\r\n        this.password = user.password;\r\n        this.role = user.role;\r\n        this.email = user.email;\r\n      }\r\n      @IsAlphanumeric()\r\n      @IsNotEmpty()\r\n      @IsString()\r\n      @NotContains(' ')\r\n      nick: string;\r\n    \r\n      @IsAlphanumeric()\r\n      @IsNotEmpty()\r\n      @IsString()\r\n      @NotContains(' ')\r\n      @MinLength(2)\r\n      login: string;\r\n    \r\n      @IsNotEmpty()\r\n      @IsString()\r\n      @MinLength(7)\r\n      @NotContains(' ')\r\n      password: string;\r\n    \r\n      @IsEnum(USER_ROLES)\r\n      role: string;\r\n    \r\n      @IsEmail()\r\n      @NotContains(' ')\r\n      @IsString()\r\n      @IsNotEmpty()\r\n      email: string;\r\n    }\r\n\r\n    const userValidate = (user, language) => {\r\n        const userValidator = new UserValidator(user);\r\n        const val = validateOrRejectExample(userValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                // console.log(data);\r\n                return getAllValidationMsg(data[0].constraints, language)\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default userValidate;","import React, {useState} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Popover, Typography } from \"@material-ui/core\";\r\nimport { FormItem, LogicControls, StyledRegisterForm } from \"./RegisterForm.styles\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport userValidate from \"../validators/userValidator\";\r\n\r\nconst RegisterForm = (props) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n    \r\n\r\n    const onUserSave = (event) => {\r\n        event.persist();\r\n        const user = {\r\n            nick:nick,\r\n            login:login,\r\n            password:password,\r\n            email:email,\r\n            role:\"loggedUser\"\r\n        }\r\n        userValidate(user, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                createUser(user)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        props.history.push(\"/\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <StyledRegisterForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your nickname here\" : \"Proszę wpisz nick\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setNick(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Password\" : \"Hasło\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your password here\" : \"Proszę wpisz swoje hasło\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Email\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your email here\" : \"Proszę wpisz swój email\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setEmail(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div>{lang === \"en\" ? \"Have already account? \" : \"Masz już konto? \"}\r\n                    <Link to={\"/login\"}>{lang === \"en\" ? \"Login\" : \"Zaloguj się\"}</Link>\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n                        {lang === \"en\" ? \"Register\" : \"Zarejestruj się\"}\r\n                    </Button>\r\n                    <Popover\r\n                    id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                    open={Boolean(anchorEl)}\r\n                    anchorEl={anchorEl}\r\n                    onClose={() => setAnchorEl(null)}\r\n                    anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    >\r\n                        <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n                    </Popover>\r\n                </LogicControls>\r\n            </StyledRegisterForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(RegisterForm);","import React from \"react\";\r\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\r\n\r\nconst RegisterPage = () => {\r\n    return <RegisterForm/>\r\n}\r\n\r\nexport default RegisterPage","import axios from \"axios\"\r\n\r\nexport interface TagProps {\r\n    _id?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getTags = async () => {\r\n    try {\r\n      const tags = await axios.get(\r\n         '/tags'\r\n      )\r\n      return tags\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const createTag = async (\r\n    tag: TagProps\r\n  ) => {\r\n    try {\r\n      const saveTag = await axios.post(\r\n        '/tag',\r\n        tag\r\n      )\r\n      return saveTag\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        if(error.response.status === 403) {\r\n            return {data: error.response.data.errors, status: 403}\r\n        } else {\r\n            return {data: {}, status: 500}\r\n        }\r\n    }\r\n  }\r\n\r\n  export const deleteTag = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedTag = await axios.delete(\r\n        `/tag/${_id}`\r\n      )\r\n      return deletedTag\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import styled from 'styled-components';\r\n\r\nexport const StyledTagsPanel = styled.div`\r\n    label{\r\n        color: white;\r\n    }\r\n    .MuiInputBase-input{\r\n        color: #dfdfdf;\r\n    }\r\n`","import {\r\n    IsNotEmpty,\r\n    IsString,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from './validation';\r\n\r\n    class TagValidator {\r\n    constructor(tag) {\r\n      this.name = tag.name;\r\n    }\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    name: string;\r\n  }\r\n\r\n    const tagValidate = (user, language) => {\r\n        const tagValidator = new TagValidator(user);\r\n        const val = validateOrRejectExample(tagValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                // console.log(data);\r\n                return getAllValidationMsg(data[0].constraints, language)\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default tagValidate;","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, Popover, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { createTag, deleteTag, getTags, TagProps } from \"../../APIRequests/Tag\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { StyledTagsPanel } from \"./TagsPanel.styled\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport tagValidate from \"../validators/tagValidator\";\r\n\r\nconst TagsPanel = (props) => {\r\n    const [tag, setTag] = useState(\"\");\r\n    const [allTags, setAllTags] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n    const fetchAllTags = () => {\r\n        getTags()\r\n        .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const onTagSave = (event) => {\r\n        event.persist();\r\n        tagValidate({name: tag}, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                createTag({name: tag})\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        fetchAllTags();\r\n                        props.history.push(\"/panel/tags\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        // createTag({name: tag})\r\n        // .then(({ status }) => {\r\n        //         if (status !== 201) {\r\n        //           throw new Error('Error! Tag not saved')\r\n        //         }\r\n        //         fetchAllTags();\r\n        // })\r\n        // props.history.push(\"/panel/tags\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags()\r\n    }, [])\r\n\r\n      const onTagDelete = (tag:TagProps) => {\r\n        deleteTag(tag._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Tag not deleted')\r\n            }\r\n            fetchAllTags()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allTags.map((tag:TagProps) => \r\n          <ListItem key={tag.name}>\r\n          <ListItemText\r\n            primary={tag.name}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton style={{color: \"white\"}} edge=\"end\" aria-label=\"delete\" onClick={() => onTagDelete(tag)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <StyledTagsPanel>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n            <TextField\r\n            label={lang === \"en\" ? \"Tag\" : \"Etykieta\"}\r\n            style={{ margin: 8}}\r\n            placeholder={lang === \"en\" ? \"Please type in your tag here\" : \"Proszę wpisz etykietę\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            onChange={(input) => setTag(input.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onTagSave}>\r\n                    {lang === \"en\" ? \"Add Tag\" : \"Dodaj etykietę\"}\r\n            </Button>\r\n            <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n            </Popover>\r\n            </div>\r\n        </StyledTagsPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(TagsPanel);","import React from \"react\";\r\nimport TagsPanel from \"../components/TagsPanel/TagsPanel\";\r\n\r\nconst PanelTagsPage = () => {\r\n    return <TagsPanel/>\r\n}\r\n\r\nexport default PanelTagsPage","import React, {useState, useEffect} from \"react\";\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ChaptersList = (props) => {\r\n    const [mainPosts, setMainPosts] = useState<String[]>([]);\r\n    const [postTitle, setPostTitle] = useState(\"\");\r\n\r\n    const FilterAndSetMainPosts = (posts:PostProps[]) => {\r\n        const mainPosts = posts.filter((post:PostProps) => post.content[0].title === \"Main\");\r\n        const mainTitles = mainPosts.map((post) => post.title)\r\n        setMainPosts(mainTitles);\r\n    }\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => FilterAndSetMainPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(postTitle === \"\" && props.storyTitle) {\r\n            setPostTitle(props.storyTitle)\r\n        }\r\n    }, [props.storyTitle])\r\n\r\n    const handlePostTitle = (event) => {\r\n        setPostTitle(event.target.value);\r\n        props.setPostTitle(event.target.value);\r\n    }\r\n\r\n    const getTitleList = () => {\r\n        return mainPosts.map((postTitle:any) => <MenuItem key={postTitle} value={postTitle}>{postTitle}</MenuItem>)\r\n    }\r\n\r\n    const StyledSelect = styled.div`\r\n    .MuiInputBase-root{\r\n        color: white;\r\n      }\r\n    `\r\n\r\n    return (\r\n        <StyledSelect>\r\n            <Select\r\n            value={postTitle}\r\n            onChange={handlePostTitle}\r\n            >\r\n            {getTitleList()}\r\n            </Select>\r\n        </StyledSelect>\r\n    )\r\n}\r\n\r\nexport default ChaptersList;","import axios from \"axios\";\r\n\r\ninterface ContentProps {\r\n    _id?: string;\r\n    text: string;\r\n    title: string;\r\n}\r\n\r\nexport const createContent = async (\r\n    content: ContentProps\r\n  ) => {\r\n    try {\r\n      const savedContent = await axios.post(\r\n        `/content`,\r\n        content\r\n      )\r\n      return savedContent\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const updateContent = async (\r\n    content: ContentProps\r\n  ) => {\r\n    try {\r\n      const updatedContent = await axios.put(\r\n        `/content/${content._id}`,\r\n        content\r\n      )\r\n      return updatedContent\r\n    } catch (error) {\r\n    //   throw new Error(error)\r\n        return {data: [], status: 403}\r\n    }\r\n  }\r\n\r\n  export const deleteContent = async (\r\n    _id: string\r\n  ) => {\r\n    try {\r\n      const deletedContent = await axios.delete(\r\n        `/content/${_id}`\r\n      )\r\n      return deletedContent\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import styled from 'styled-components';\r\n\r\nexport const StyledPanel = styled.div`\r\n    label{\r\n        color: white;\r\n    }\r\n    .MuiInputBase-input{\r\n        color: #dfdfdf;\r\n    }\r\n    input{\r\n        color: white;\r\n    }\r\n`","import {\r\n    IsArray,\r\n    IsDateString,\r\n    IsNotEmpty,\r\n      IsString,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from './validation';\r\n\r\nexport class PostValidator {\r\n    constructor(post) {\r\n      this.date = post.date;\r\n      this.tags = post.tags;\r\n      this.title = post.title;\r\n      this.content = post.content;\r\n      this.comment = post.comment;\r\n      this.user = post.user;\r\n    }\r\n\r\n    @IsDateString()\r\n    date: string;\r\n        \r\n    @IsArray()\r\n    tags: string[];\r\n\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    title: string[];\r\n\r\n    content: any;\r\n\r\n    comment: any;\r\n\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    user: string;\r\n  }\r\n\r\n    const postValidate = (post, language) => {\r\n        const postValidator = new PostValidator(post);\r\n        const val = validateOrRejectExample(postValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                console.log(data);\r\n                return getAllValidationMsg(data[0].constraints, language)\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default postValidate;","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Popover, Select, Typography, useTheme } from '@material-ui/core';\r\nimport { createContent, deleteContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { createPost } from '../../APIRequests/Post';\r\nimport DatePicker from 'react-date-picker';\r\nimport { getUser, UserProps } from '../../APIRequests/User';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { StyledPanel } from './PostsPanel.styles';\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from '../validators/validatorMsg';\r\nimport postValidate from '../validators/postValidator';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst PostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState('<p>...</p>');\r\n    const [title, setTitle] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n    const [date, setDate] = useState<any>(new Date());\r\n    const [user, setUser] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = (event) => {\r\n        event.persist();\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle\r\n        }\r\n        // const createdContent = createContent(content)\r\n        createContent(content)\r\n        .then(({ status, data }) => {\r\n                if (status !== 201) {\r\n                  throw new Error('Error! Content not saved')\r\n                }\r\n                setContentId(data.content._id);\r\n                setAnchorEl(event.target);\r\n              })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(contentId){\r\n            onPostSave()\r\n            setContentId(undefined)\r\n        }\r\n    }, [contentId])\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const fetchUser = () => {\r\n      const userId = localStorage.getItem('blognellaId');\r\n      if(userId) {\r\n        getUser(userId)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setUser(user.nick);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n      }\r\n      \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n        fetchUser();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: date.toISOString(),\r\n            tags: tags,\r\n            title: title,\r\n            content: contentId,\r\n            user: user\r\n        }\r\n        postValidate(post, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                deleteContent(contentId || \"\")\r\n            } else {\r\n                createPost(post)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 409 && status !== 500) {\r\n                        props.history.push(\"/panel/posts\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        deleteContent(contentId || \"\")\r\n                    } else if(status === 409){\r\n                        setErrorMsg([lang === \"en\" ? \"Only one post of type 'About' is allowed\" : \"Tylko jeden wpis typu 'O mnie' jest dozwolony\"])\r\n                        deleteContent(contentId || \"\")\r\n                    } else {\r\n                      setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                      deleteContent(contentId || \"\")\r\n                  }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    return (\r\n        <StyledPanel>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Title\" : \"Tytuł\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your post title here\" : \"Proszę wpisz tytuł wpisu\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code',\r\n          height: 450\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n          <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your nick here\" : \"Proszę wpisz nick\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={user}\r\n                    onChange={(input) => setUser(input.target.value)}\r\n         />\r\n\r\n        <div>{lang === \"en\" ? \"Date of publication\" : \"Data publikacji\"}</div>\r\n        <DatePicker\r\n            onChange={(val:any) => setDate(val)}\r\n            value={date}\r\n        />\r\n\r\n        <div>{lang === \"en\" ? \"Add tags to post\" : \"Dodaj etykiety do wpisu\"}</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    {lang === \"en\" ? \"Save Post\" : \"Zapisz Wpis\"}\r\n         </Button>\r\n         <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => {setAnchorEl(null); setErrorMsg([]);}}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n          </Popover>\r\n      </StyledPanel>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(PostsPanel);","import { MenuItem, Select } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport PostsPanel from \"../components/PostsPanel/PostsPanel\";\r\nimport styled from 'styled-components';\r\n\r\nconst PanelPostsAddingPage = () => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const handlePostType = (event) => {\r\n        setPostType(event.target.value);\r\n    };\r\n\r\n    const StyledSelect = styled.div`\r\n    .MuiInputBase-root{\r\n        color: white;\r\n      }\r\n    `\r\n\r\n    return (\r\n        <>\r\n        <StyledSelect>\r\n          <Select\r\n            value={postType}\r\n            onChange={handlePostType}\r\n          >\r\n            <MenuItem value=\"Main\">{lang === \"en\" ? \"Main\" : \"Wpis\"}</MenuItem>\r\n            <MenuItem value=\"Chapter\">{lang === \"en\" ? \"Chapter\" : \"Rozdział\"}</MenuItem>\r\n            <MenuItem value=\"About\">{lang === \"en\" ? \"About\" : \"O mnie\"}</MenuItem>\r\n          </Select>\r\n        </StyledSelect>\r\n        <div></div>\r\n        {postType === \"Chapter\" ? <ChaptersList setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {postType === \"Main\" || postType === \"About\" || storyTitle ? <PostsPanel contentTitle={storyTitle || postType}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PanelPostsAddingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { deletePost, getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst PostsPanelList = (props) => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => setAllPosts(posts))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [props])\r\n\r\n      const onPostDelete = (post:PostProps) => {\r\n        deletePost(post._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Post not deleted')\r\n            }\r\n            fetchAllPosts()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allPosts.map((post:PostProps) => \r\n          <ListItem key={post._id}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/posts/${post._id}`,\r\n                // search: `?id=${post._id}`,\r\n                state: { myId: post._id }\r\n                }}> {post.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton style={{color: \"white\"}} edge=\"end\" aria-label=\"delete\" onClick={() => onPostDelete(post)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n            <Link to={\"/panel/posts/add\"}>{lang === \"en\" ? \"Add Post\" : \"Dodaj Wpis\"}</Link>\r\n            {/* <Link to={{\r\n            pathname: '/template',\r\n            search: '?query=abc',\r\n            state: { detail: response.data }\r\n            }}> My Link </Link> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostsPanelList);","import React from \"react\";\r\nimport PostsPanelList from \"../components/PostsPanelList/PostsPanelList\";\r\n\r\nconst PanelPostsPage = () => {\r\n\r\n\r\n    return (\r\n        <PostsPanelList/>\r\n    )\r\n}\r\n\r\nexport default PanelPostsPage","import React, {useState, useEffect} from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Chip, Input, makeStyles, MenuItem, Popover, Select, Typography, useTheme } from '@material-ui/core';\r\nimport { updateContent } from '../../APIRequests/Content';\r\nimport { getTags, TagProps } from '../../APIRequests/Tag';\r\nimport { updatePost } from '../../APIRequests/Post';\r\nimport DatePicker from 'react-date-picker';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { StyledPanel } from './PostsPanel.styles';\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from '../validators/validatorMsg';\r\nimport postValidate from '../validators/postValidator';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chips: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n      margin: 2,\r\n    },\r\n  }));\r\n  \r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  \r\n  function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\nconst UpdatePostsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [data, setData] = useState(props.post.content[0].text || \"\");\r\n    const [title, setTitle] = useState(props.post.title || \"\");\r\n    const [tags, setTags] = useState(props.post.tags || []);\r\n    // const [contentId, setContentId] = useState(undefined)\r\n    const [allTags, setAllTags] = useState([])\r\n    const [date, setDate] = useState<any>(new Date());\r\n    // const [date, setDate] = useState<any>(props.post.date);\r\n    const [user, setUser] = useState(props.post.user);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n\r\n    const handleEditorChange = (e) => {\r\n        setData(e.target.getContent());\r\n    }\r\n\r\n    const onContentSave = (event) => {\r\n        event.persist();\r\n        const content = {\r\n            text: data,\r\n            title: props.contentTitle,\r\n            _id: props.post.content[0]._id\r\n        }\r\n        updateContent(content)\r\n        .then(({ status }) => {\r\n                if (status !== 200) {\r\n                  throw new Error('Error! Content not saved')\r\n                }\r\n                // setContentId(data.content._id);\r\n                setAnchorEl(event.target);\r\n                onPostSave()\r\n              })\r\n    }\r\n\r\n    const fetchAllTags = () => {\r\n    getTags()\r\n    .then(({ data: { tags } }: TagProps[] | any) => setAllTags(tags.map(tag=> tag.name)))\r\n    .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllTags();\r\n    },[])\r\n\r\n    const onPostSave = () => {\r\n        const post = {\r\n            date: date.toISOString(),\r\n            tags: tags,\r\n            title: title,\r\n            content: props.post.content[0]._id,\r\n            _id: props.post._id,\r\n            user: user\r\n        }\r\n\r\n        postValidate(post, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n            } else {\r\n                updatePost(post)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        props.history.push(\"/panel/posts\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                    } else {\r\n                      setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                  }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setTags(event.target.value);\r\n        };\r\n\r\n    return (\r\n        <StyledPanel>\r\n         <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"Title\" : \"Tytuł\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your post title here\" : \"Proszę wpisz tytuł wpisu\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={title}\r\n                    onChange={(input) => setTitle(input.target.value)}\r\n         />\r\n\r\n        <Editor\r\n        initialValue={data}\r\n        init={{\r\n          plugins: 'link image code',\r\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code',\r\n          height: 450\r\n        }}\r\n        onChange={(e) => handleEditorChange(e)}\r\n      />\r\n\r\n        <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Nick\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your nick here\" : \"Proszę wpisz nick\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue={user}\r\n                    onChange={(input) => setUser(input.target.value)}\r\n        />\r\n\r\n        <div>{lang === \"en\" ? \"Date of publication\" : \"Data publikacji\"}</div>\r\n        <DatePicker\r\n            onChange={(val:any) => setDate(val)}\r\n            value={date}\r\n        />\r\n\r\n\r\n        <div>{lang === \"en\" ? \"Add tags to post\" : \"Dodaj etykiety do wpisu\"}</div>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          multiple\r\n          value={tags}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected:any) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {allTags.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, tags, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <div></div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onContentSave}>\r\n                    {lang === \"en\" ? \"Save Post\" : \"Zapisz post\"}\r\n         </Button>\r\n         <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => {setAnchorEl(null); setErrorMsg([]);}}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n          </Popover>\r\n      </StyledPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdatePostsPanel);","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, PostProps } from \"../APIRequests/Post\";\r\nimport ChaptersList from \"../components/ChaptersList/ChaptersList\";\r\nimport UpdatePostsPanel from \"../components/PostsPanel/UpdatePostsPanel\";\r\n\r\nconst PanelPostsUpdatingPage = (props) => {\r\n    const [postType, setPostType] = useState(\"\");\r\n    const [storyTitle, setStoryTitle] = useState(\"\");\r\n    const [editedPost, setEditedPost] = useState<PostProps>();\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchEditedPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            const postTitle = post.content[0].title;\r\n            const customPostType = postTitle === \"Main\" || postTitle === \"About\" ? postTitle : \"Chapter\";\r\n            setPostType(customPostType);\r\n            customPostType === \"Chapter\" && setStoryTitle(postTitle);\r\n            setEditedPost(post);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedPost()\r\n    }, [])\r\n\r\n    const contentTitle = postType === \"Main\" || postType === \"About\" ? postType : storyTitle;\r\n\r\n    return (\r\n        <>\r\n        {/* <div>UPDATE PAGE</div> */}\r\n         {/* <Select\r\n          value={postType}\r\n          onChange={handlePostType}\r\n        >\r\n          <MenuItem value=\"Main\">Main</MenuItem>\r\n          <MenuItem value=\"Chapter\">Chapter</MenuItem>\r\n          <MenuItem value=\"About\">About</MenuItem>\r\n        </Select> */}\r\n        <div>{postType === \"Main\" ? (lang === \"en\" ? \"STORY\" : \"WPIS\") : postType === \"About\" ? (lang === \"en\" ? \"ABOUT\" : \"O MNIE\") : (lang === \"en\" ? \"CHAPTER\" : \"ROZDZIAŁ\")}</div>\r\n        {postType === \"Chapter\" ? <ChaptersList storyTitle={storyTitle} setPostTitle={setStoryTitle}/> : <></>}\r\n\r\n        {(postType === \"Main\" || postType === \"About\" || storyTitle) && editedPost ? \r\n        <UpdatePostsPanel contentTitle={contentTitle} post={editedPost}/> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PanelPostsUpdatingPage);\r\n// export default PanelPostsUpdatingPage","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { BookmarkProps, deleteBookmark, getBookmarks } from \"../../APIRequests/Bookmark\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst BookmarksPanel = (props) => {\r\n    const [allBookmarks, setAllBookmarks] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllBookmarks = () => {\r\n        getBookmarks()\r\n        .then(({ data: { bookmarks } }: BookmarkProps[] | any) => setAllBookmarks(bookmarks))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllBookmarks()\r\n    }, [props])\r\n\r\n      const onBookmarkDelete = (bookmark:BookmarkProps) => {\r\n        deleteBookmark(bookmark._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Bookmark not deleted')\r\n            }\r\n            fetchAllBookmarks()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allBookmarks.map((bookmark:BookmarkProps) => \r\n          <ListItem key={bookmark.title}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/bookmarks/${bookmark._id}`,\r\n                state: { myId: bookmark._id }\r\n            }}> {bookmark.title} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton style={{color: \"white\"}} edge=\"end\" aria-label=\"delete\" onClick={() => onBookmarkDelete(bookmark)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n\r\n            <Link to={\"/panel/bookmarks/add\"}>{lang === \"en\" ? \"Add Bookmark\" : \"Dodaj Zakładkę\"}</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(BookmarksPanel);","import React from \"react\";\r\nimport BookmarksPanel from \"../components/BookmarkPanel/BookmarksPanel\";\r\n\r\nconst PanelBookmarksPage = () => {\r\n    return <BookmarksPanel/>\r\n}\r\n\r\nexport default PanelBookmarksPage","import {\r\n    IsNotEmpty,\r\n    IsString,\r\n    } from 'class-validator';\r\nimport { getAllValidationMsg, validateOrRejectExample } from './validation';\r\n\r\n    class BookmarkValidator {\r\n    constructor(bookmark) {\r\n      this.title = bookmark.title;\r\n    }\r\n    @IsNotEmpty()\r\n    @IsString()\r\n    title: string;\r\n\r\n    post: any;\r\n  }\r\n\r\n    const bookmarkValidate = (user, language) => {\r\n        const bookmarkValidator = new BookmarkValidator(user);\r\n        const val = validateOrRejectExample(bookmarkValidator)\r\n        .then(data => {\r\n            if(data.length > 0) {\r\n                // console.log(data);\r\n                return getAllValidationMsg(data[0].constraints, language)\r\n            }\r\n            return [];\r\n        });\r\n        return val\r\n    }\r\n\r\nexport default bookmarkValidate;","import styled from 'styled-components';\r\n\r\nexport const StyledPanel = styled.div`\r\n    label{\r\n        color: white;\r\n    }\r\n    .MuiInputBase-input{\r\n        color: #dfdfdf;\r\n    }\r\n    input{\r\n        color: white;\r\n    }\r\n`","import { Button, MenuItem, Popover, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { createBookmark } from \"../../APIRequests/Bookmark\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport bookmarkValidate from \"../validators/bookmarkValidator\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { StyledPanel } from \"./BookmarkPanel.Styles\";\r\n\r\nconst BookmarkPanelAdd = (props) => {\r\n    const [postId, setPostId] = useState(\"\");\r\n    const [allPosts, setAllPosts] = useState<PostProps[]>([]);\r\n    const [bookmarkTitle, setBookmarkTitle] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n    const handlePostId = (event) => {\r\n        setPostId(event.target.value);\r\n    };\r\n\r\n    const onBookmarkSave = (event) => {\r\n        event.persist();\r\n        const bookmark = {\r\n            title: bookmarkTitle,\r\n            post: postId,\r\n        }\r\n        bookmarkValidate(bookmark, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                createBookmark(bookmark)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        props.history.push(\"/panel/bookmarks\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getPostsTitles = () => {\r\n        return allPosts.map((post) => <MenuItem key={post._id} value={post._id}>{post.title}</MenuItem>)\r\n    }\r\n\r\n    const StyledSelect = styled.div`\r\n    .MuiInputBase-root{\r\n        color: white;\r\n      }\r\n    `\r\n\r\n    return (\r\n        <StyledPanel>\r\n            <StyledSelect>\r\n                <Select\r\n                value={postId}\r\n                onChange={handlePostId}\r\n                >\r\n                    {getPostsTitles()}\r\n                </Select>\r\n            </StyledSelect>\r\n        \r\n            <div></div>\r\n            <TextField\r\n                label={lang === \"en\" ? \"Bookmark title\" : \"Tytuł zakładki\"}\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your bookmark title here\" : \"Proszę wpisz tytuł zakładki\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={(input) => setBookmarkTitle(input.target.value)}\r\n                />\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onBookmarkSave}>\r\n                {lang === \"en\" ? \"Save Bookmark\" : \"Zapisz Zakładkę\"}\r\n            </Button>\r\n            <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n            </Popover>\r\n        </StyledPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(BookmarkPanelAdd);","import React from \"react\";\r\nimport BookmarkPanelAdd from \"../components/BookmarkPanel/BookmarkPanelAdd\";\r\n\r\nconst PanelBookmarkAddingPage = () => {\r\n   return <BookmarkPanelAdd/>\r\n}\r\n\r\nexport default PanelBookmarkAddingPage","import { Button, MenuItem, Popover, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { updateBookmark } from \"../../APIRequests/Bookmark\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport bookmarkValidate from \"../validators/bookmarkValidator\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { StyledPanel } from \"./BookmarkPanel.Styles\";\r\n\r\nconst BookmarkPanelUpdate = (props) => {\r\n    const [postId, setPostId] = useState(props.bookmark.post.length > 0 ? props.bookmark.post[0]._id : \"\");\r\n    const [allPosts, setAllPosts] = useState<PostProps[]>([]);\r\n    const [bookmarkTitle, setBookmarkTitle] = useState(props.bookmark.title || \"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.content[0].title === \"Main\");\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [])\r\n\r\n    const handlePostId = (event) => {\r\n        setPostId(event.target.value);\r\n    };\r\n\r\n    const onBookmarkSave = (event) => {\r\n        event.persist();\r\n        const bookmark = {\r\n            _id: props.bookmark._id,\r\n            title: bookmarkTitle,\r\n            post: postId,\r\n        }\r\n        bookmarkValidate(bookmark, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                updateBookmark(bookmark)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        props.history.push(\"/panel/bookmarks\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getPostsTitles = () => {\r\n        return allPosts.map((post) => <MenuItem  key={post._id} value={post._id}>{post.title}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <StyledPanel>\r\n         <Select\r\n          value={postId}\r\n          onChange={handlePostId}\r\n        >\r\n            {getPostsTitles()}\r\n        </Select>\r\n        <div></div>\r\n        <TextField\r\n            label={lang === \"en\" ? \"Bookmark title\" : \"Tytuł zakladki\"}\r\n            style={{ margin: 8 }}\r\n            placeholder={lang === \"en\" ? \"Please type in your bookmark title here\" : \"Proszę wpisz tytuł zakładki\"}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            defaultValue={bookmarkTitle}\r\n            onChange={(input) => setBookmarkTitle(input.target.value)}\r\n            />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onBookmarkSave}>\r\n            {lang === \"en\" ? \"Save Bookmark\" : \"Zapisz Zakładkę\"}\r\n        </Button>\r\n        <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n        </Popover>\r\n        </StyledPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(BookmarkPanelUpdate);","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BookmarkProps, getBookmark } from \"../APIRequests/Bookmark\";\r\nimport BookmarkPanelUpdate from \"../components/BookmarkPanel/BookmarkPanelUpdate\";\r\n\r\nconst PanelBookmarkUpdatingPage = (props) => {\r\n    const [editedBookmark, setEditedBookmark] = useState<BookmarkProps>();\r\n\r\n    const fetchEditedBookmark = () => {\r\n        getBookmark(props.match.params.id)\r\n        .then(({ data: { bookmark } }: BookmarkProps | any) => {\r\n            setEditedBookmark(bookmark);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedBookmark()\r\n    }, [])\r\n\r\n    return editedBookmark ? <BookmarkPanelUpdate bookmark={editedBookmark}/> : <></>;\r\n}\r\n\r\nexport default withRouter(PanelBookmarkUpdatingPage);","import { IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { deleteUser, getUsers, UserProps } from \"../../APIRequests/User\";\r\n\r\nconst UsersPanel = (props) => {\r\n    const [allUsers, setAllUsers] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [actualAdminNick, setActualAdminNick] = useState(\"\");\r\n    \r\n    \r\n    const getBlognellaUser = () => {\r\n        if(allUsers.length > 0) {\r\n            const blognellaUser = localStorage.getItem(\"blognellaId\");\r\n            const actualAdmin:any = allUsers.find((user:any) => user._id === blognellaUser);\r\n            if(actualAdmin) {\r\n                setActualAdminNick(actualAdmin.nick || \"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const fetchAllUsers = () => {\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => setAllUsers(users))\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBlognellaUser()\r\n    }, [allUsers])\r\n\r\n    useEffect(() => {\r\n        fetchAllUsers()\r\n    }, [props])\r\n\r\n      const onUserDelete = (user:UserProps) => {\r\n        deleteUser(user._id || \"\")\r\n        .then(({ status }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! User not deleted')\r\n            }\r\n            fetchAllUsers()\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n      const getListItems = () => {\r\n          return allUsers.map((user:UserProps) => \r\n          <ListItem key={user.nick}>\r\n          <ListItemText\r\n            primary={ <Link to={{\r\n                pathname: `/panel/users/${user._id}`,\r\n                state: { myId: user._id }\r\n            }}> {user.nick} </Link> }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            {user.nick !== actualAdminNick ? \r\n            <IconButton style={{color: \"white\"}} edge=\"end\" aria-label=\"delete\" onClick={() => onUserDelete(user)}>\r\n              <DeleteIcon/>\r\n            </IconButton>\r\n            : <div/>}\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <>\r\n             <List>\r\n              {getListItems()}\r\n            </List>\r\n\r\n            <div>\r\n\r\n            <Link to={\"/panel/users/add\"}>{lang === \"en\" ? \"Add User\" : \"Dodaj użytkownika\"}</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UsersPanel);","import React from \"react\";\r\nimport UsersPanel from \"../components/UsersPanel/UsersPanel\";\r\n\r\nconst PanelUsersPage = () => {\r\n\r\n\r\n    return (\r\n        <UsersPanel/>\r\n    )\r\n}\r\n\r\nexport default PanelUsersPage","import styled from 'styled-components';\r\n\r\nexport const StyledPanel = styled.div`\r\n    label{\r\n        color: white;\r\n    }\r\n    .MuiInputBase-input{\r\n        color: #dfdfdf;\r\n    }\r\n    input{\r\n        color: white;\r\n    }\r\n`;","import { Button, MenuItem, Popover, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createUser } from \"../../APIRequests/User\";\r\nimport userValidate from \"../validators/userValidator\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { StyledPanel } from \"./UserPanel.styles\";\r\n\r\nconst allUsersRoles = [\"loggedUser\", \"admin\"];\r\n\r\nconst UserPanelAdd = (props) => {\r\n    const [nick, setNick] = useState(\"\");\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n    const handleUserRole = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n    const onUserSave = (event) => {\r\n        event.persist();\r\n        const user = {\r\n            nick: nick,\r\n            login: login,\r\n            password: password,\r\n            role: role,\r\n            email: email,\r\n        }\r\n        userValidate(user, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                createUser(user)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        props.history.push(\"/panel/users\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getUsersRoles = () => {\r\n        return allUsersRoles.map((role) => <MenuItem key={role} value={role}>{role}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <StyledPanel>\r\n            <TextField\r\n                label=\"Nick\"\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your nickname here\" : \"Proszę wpisz nick\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={(input) => setNick(input.target.value)}\r\n            />\r\n            <TextField\r\n                label=\"Login\"\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={(input) => setLogin(input.target.value)}\r\n            />\r\n            <TextField\r\n                label={lang === \"en\" ? \"Password\" : \"Hasło\"}\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your password here\" : \"Proszę wpisz swoje hasło\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={(input) => setPassword(input.target.value)}\r\n            />\r\n            <Select\r\n            value={role}\r\n            onChange={handleUserRole}\r\n            >\r\n                {getUsersRoles()}\r\n            </Select>\r\n\r\n            <div></div>\r\n            <TextField\r\n                label=\"Email\"\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your email here\" : \"Proszę wpisz swój email\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={(input) => setEmail(input.target.value)}\r\n            />\r\n\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n                {lang === \"en\" ? \"Save User\" : \"Zapisz Użytkownika\"}\r\n            </Button>\r\n            <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n            </Popover>\r\n        </StyledPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(UserPanelAdd);","import React from \"react\";\r\nimport UserPanelAdd from \"../components/UsersPanel/UserPanelAdd\";\r\n\r\nconst PanelUsersAddingPage = () => {\r\n   return <UserPanelAdd/>\r\n}\r\n\r\nexport default PanelUsersAddingPage","import { Button, MenuItem, Popover, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { updateUser } from \"../../APIRequests/User\";\r\nimport userValidate from \"../validators/userValidator\";\r\nimport { getUniqueValidatorMsg, getValidatorMsg } from \"../validators/validatorMsg\";\r\nimport { StyledPanel } from \"./UserPanel.styles\";\r\n\r\nconst allUsersRoles = [\"loggedUser\", \"admin\"];\r\n\r\nconst UserPanelUpdate = (props) => {\r\n    const [nick, setNick] = useState(props.user.nick);\r\n    const [login, setLogin] = useState(props.user.login);\r\n    const [password, setPassword] = useState(props.user.password);\r\n    const [role, setRole] = useState(props.user.role);\r\n    const [email, setEmail] = useState(props.user.email);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n    const handleUserRole = (event) => {\r\n        setRole(event.target.value);\r\n    };\r\n\r\n    const onUserSave = (event) => {\r\n        event.persist();\r\n        const user = {\r\n            _id: props.user._id,\r\n            nick: nick,\r\n            login: login,\r\n            password: password,\r\n            role: role,\r\n            email: email,\r\n        }\r\n        userValidate(user, lang)\r\n        .then((data) => {\r\n            if(data.length > 0) {\r\n                setErrorMsg(data);\r\n                setAnchorEl(event.target);\r\n            } else {\r\n                updateUser(user)\r\n                .then(({data, status}: any) => {\r\n                    if(status !== 403 && status !== 500) {\r\n                        props.history.push(\"/panel/users\");\r\n                    }\r\n                    else if(status === 403) {\r\n                        setErrorMsg(getUniqueValidatorMsg(data, lang))\r\n                        setAnchorEl(event.target);\r\n                    } else {\r\n                        setErrorMsg([lang === \"en\" ? \"There are server problems\" : \"Wystąpiły problemy z serwerem\"])\r\n                        setAnchorEl(event.target);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getUsersRoles = () => {\r\n        return allUsersRoles.map((role) => <MenuItem key={role} value={role}>{role}</MenuItem>)\r\n    }\r\n\r\n    return (\r\n        <StyledPanel>\r\n            <TextField\r\n                label=\"Nick\"\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your nickname here\" : \"Proszę wpisz nick\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                defaultValue={nick}\r\n                onChange={(input) => setNick(input.target.value)}\r\n            />\r\n            <TextField\r\n                label=\"Login\"\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                defaultValue={login}\r\n                onChange={(input) => setLogin(input.target.value)}\r\n            />\r\n            <TextField\r\n                label={lang === \"en\" ? \"Password\" : \"Hasło\"}\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your password here\" : \"Proszę wpisz swoje hasło\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                defaultValue={password}\r\n                onChange={(input) => setPassword(input.target.value)}\r\n            />\r\n            <Select\r\n            value={role}\r\n            onChange={handleUserRole}\r\n            >\r\n                {getUsersRoles()}\r\n            </Select>\r\n\r\n            <div></div>\r\n            <TextField\r\n                label=\"Email\"\r\n                style={{ margin: 8 }}\r\n                placeholder={lang === \"en\" ? \"Please type in your email here\" : \"Proszę wpisz swój email\"}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                defaultValue={email}\r\n                onChange={(input) => setEmail(input.target.value)}\r\n            />\r\n\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onUserSave}>\r\n                {lang === \"en\" ? \"Save User\" : \"Zapisz Użytkownika\"}\r\n            </Button>\r\n            <Popover\r\n                id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                open={Boolean(anchorEl)}\r\n                anchorEl={anchorEl}\r\n                onClose={() => setAnchorEl(null)}\r\n                anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n                }}\r\n            >\r\n                <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n            </Popover>\r\n        </StyledPanel>\r\n    )\r\n}\r\n\r\nexport default withRouter(UserPanelUpdate);","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUser, UserProps } from \"../APIRequests/User\";\r\nimport UserPanelUpdate from \"../components/UsersPanel/UserPanelUpdate\";\r\n\r\nconst PanelUsersUpdatingPage = (props) => {\r\n    const [editedUser, setEditedUser] = useState<UserProps>();\r\n\r\n    const fetchEditedUser = () => {\r\n        getUser(props.match.params.id)\r\n        .then(({ data: { user } }: UserProps | any) => {\r\n            setEditedUser(user);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEditedUser()\r\n    }, [])\r\n\r\n    return editedUser ? <UserPanelUpdate user={editedUser}/> : <></>;\r\n}\r\n\r\nexport default withRouter(PanelUsersUpdatingPage);","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPost, getPosts, PostProps } from \"../../APIRequests/Post\";\r\nimport PostComponent from \"../PostComponent/PostComponent\";\r\n\r\nconst PostView = (props) => {\r\n    const [post, setPost] = useState();\r\n    const [postChapters, setPostChapters] = useState([]);\r\n\r\n    const fetchPost = () => {\r\n        getPost(props.match.params.id)\r\n        .then(({ data: { post } }: PostProps | any) => {\r\n            if(JSON.stringify(post) !== JSON.stringify({})) {\r\n                setPost(post);\r\n                fetchAllPosts(post.title)\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const fetchAllPosts = (storyTitle:string) => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allPostChapters = posts.filter((post) => post.content[0].title === storyTitle);\r\n            setPostChapters(allPostChapters || []);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n    }, [props])\r\n\r\n    return (\r\n        <>\r\n        {post ? <PostComponent post={post} postChapters={postChapters} /> : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PostView);","import React from \"react\";\r\nimport PostView from \"../components/PostView/PostView\";\r\n\r\nconst PostPage = () => {\r\n    return <PostView />\r\n}\r\n\r\nexport default PostPage","import React, {useState} from \"react\";\r\nimport { FormItem, LogicControls, StyledLoginForm } from \"./LoginForm.styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Popover, Typography } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getUsers, updateUser, UserProps } from \"../../APIRequests/User\";\r\nimport { getValidatorMsg } from \"../validators/validatorMsg\";\r\n\r\nconst LoginForgetForm = (props) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [errorMsg, setErrorMsg] = useState<string[]>([])\r\n\r\n    const updateUserPassword = (user) => {\r\n        const updatedSser = {\r\n            _id: user._id,\r\n            nick: user.nick,\r\n            login: user.login,\r\n            password: password,\r\n            role: user.role,\r\n            email: user.email,\r\n        }\r\n        updateUser(updatedSser);\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.persist();\r\n        getUsers()\r\n        .then(({ data: { users } }: UserProps[] | any) => {\r\n            const user = users.find((user) => user.login === login && user.email === email)\r\n            if(user) {\r\n                updateUserPassword(user)\r\n                localStorage.setItem('blognellaId', user._id);\r\n                props.history.push('/');\r\n            } else {\r\n                setErrorMsg([lang === \"en\" ? \"Invalid login or email\" : \"Nieprawidłowy login lub email\"])\r\n                setAnchorEl(event.target);\r\n            }\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledLoginForm>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Email\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your email here\" : \"Proszę wpisz swój email\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setEmail(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                    <TextField\r\n                    id=\"standard-full-width\"\r\n                    label=\"Login\"\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your login here\" : \"Proszę wpisz swój login\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setLogin(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <FormItem>\r\n                <TextField\r\n                    id=\"standard-full-width\"\r\n                    label={lang === \"en\" ? \"New Password\" : \"Nowe hasło\"}\r\n                    style={{ margin: 8 }}\r\n                    placeholder={lang === \"en\" ? \"Please type in your new password here\" : \"Proszę wpisz swoje nowe hasło\"}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={(input) => setPassword(input.target.value)}\r\n                    />\r\n                </FormItem>\r\n                <LogicControls>\r\n                    <div></div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\r\n                        {lang === \"en\" ? \"Update Password\" : \"Aktualizuj Hasło\"}\r\n                    </Button>\r\n                    <Popover\r\n                    id={Boolean(anchorEl) ? 'simple-popover' : undefined}\r\n                    open={Boolean(anchorEl)}\r\n                    anchorEl={anchorEl}\r\n                    onClose={() => setAnchorEl(null)}\r\n                    anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                    }}\r\n                    >\r\n                        <Typography>{getValidatorMsg(errorMsg)}</Typography>\r\n                    </Popover>\r\n                </LogicControls>\r\n            </StyledLoginForm>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForgetForm);","import React from \"react\";\r\nimport LoginForgetForm from \"../components/LoginForm/LoginForgetForm\";\r\n\r\nconst LoginForgetPage = () => {\r\n    return <LoginForgetForm />\r\n}\r\n\r\nexport default LoginForgetPage","import { List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPosts, PostProps } from \"../../APIRequests/Post\";\r\n\r\nconst SearchList = (props) => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const lang = localStorage.getItem(\"blognellaLang\");\r\n\r\n    const fetchAllPosts = () => {\r\n        getPosts()\r\n        .then(({ data: { posts } }: PostProps[] | any) => {\r\n            const allMainPosts = posts.filter((post) => post.title === props.search || post.tags.includes(props.search));\r\n            setAllPosts(allMainPosts);\r\n        })\r\n        .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAllPosts()\r\n    }, [props.search])\r\n\r\n    const getListItems = () => {\r\n        return allPosts.map((post:PostProps) => \r\n        <ListItem key={post._id}>\r\n        <ListItemText\r\n           primary={ <Link to={{\r\n            pathname: `/ui/post/${post._id}`,\r\n            }}> {post.title} </Link> }\r\n        />\r\n      </ListItem>\r\n      );\r\n    }\r\n\r\n    return (\r\n        allPosts.length === 0 ? <div>{lang === \"en\" ? \"There is no post that meets the expected criteria\" : \"Nie ma wpisów spełniających podane kryteria\"}</div> :\r\n        <List>\r\n            {getListItems()}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default SearchList;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SearchList from \"../components/SearchComponent/SearchList\";\r\n\r\nconst SearchPage = (props) => {\r\n    return (props.location.state && props.location.state.search) ? <SearchList search={props.location.state.search}/> : <div>Nothing to search</div>\r\n}\r\n\r\nexport default withRouter(SearchPage);","// @ts-nocheck\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n// import App from \"./App\";\r\nimport LoginPage from \"./pages/loginPage\";\r\nimport MainViewPage from \"./pages/mainViewPage\";\r\n\r\nimport RegisterPage from \"./pages/registerPage\";\r\nimport PanelTagsPage from \"./pages/panelTagsPage\";\r\nimport PanelPostsAddingPage from \"./pages/panelPostsAddingPage\";\r\nimport PanelPostsPage from \"./pages/panelPostsPage\";\r\nimport PanelPostsUpdatingPage from \"./pages/panelPostsUpdatingPage\";\r\nimport PanelBookmarksPage from \"./pages/panelBookmarkPage\";\r\nimport PanelBookmarkAddingPage from \"./pages/panelBookmarkAddingPage\";\r\nimport PanelBookmarkUpdatingPage from \"./pages/panelBookmarkUpdatingPage\";\r\nimport PanelUsersPage from \"./pages/panelUsersPage\";\r\nimport PanelUsersAddingPage from \"./pages/panelUsersAddingPage\";\r\nimport PanelUsersUpdatingPage from \"./pages/panelUsersUpdatingPage\";\r\nimport PostPage from \"./pages/postPage\";\r\nimport LoginForgetPage from \"./pages/loginForgetPage\";\r\nimport SearchPage from \"./pages/searchPage\";\r\n\r\n// export default <Router history={hashHistory}>\r\n//   <Route path=\"/\" component={App}>\r\n//     <IndexRoute component={AppSplash}/>\r\n//     <Route path=\"demo\" component={AppDemo}/>\r\n//   </Route>\r\n// </Router>\r\n\r\nexport default function BasicExample() {\r\n    return (\r\n      <Router>\r\n          <Switch>\r\n             <Route exact path=\"/\"> <App page={MainViewPage} /> </Route>\r\n             <Route path=\"/register\"><App page={RegisterPage} /></Route>\r\n             <Route path=\"/login/forget\"><App page={LoginForgetPage}/></Route>\r\n             <Route path=\"/login\"><App page={LoginPage}/></Route>\r\n             <Route path=\"/search\"><App page={SearchPage}/></Route>\r\n             <Route path=\"/ui/post/:id\"><App page={PostPage}/></Route>\r\n             <Route path=\"/panel/tags\"><App page={PanelTagsPage}/></Route>\r\n             <Route path=\"/panel/posts/add\"><App page={PanelPostsAddingPage}/></Route>\r\n             <Route path=\"/panel/posts/:id\"><App page={PanelPostsUpdatingPage}/></Route>\r\n             <Route path=\"/panel/posts\"><App page={PanelPostsPage}/></Route>\r\n             <Route path=\"/panel/bookmarks/add\"><App page={PanelBookmarkAddingPage}/></Route>\r\n             <Route path=\"/panel/bookmarks/:id\"><App page={PanelBookmarkUpdatingPage}/></Route>\r\n             <Route path=\"/panel/bookmarks\"><App page={PanelBookmarksPage}/></Route>\r\n             <Route path=\"/panel/users/add\"><App page={PanelUsersAddingPage}/></Route>\r\n             <Route path=\"/panel/users/:id\"><App page={PanelUsersUpdatingPage}/></Route>\r\n             <Route path=\"/panel/users\"><App page={PanelUsersPage}/></Route>\r\n           </Switch>\r\n      </Router>\r\n    );\r\n  }","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import App from './App'\nimport './index.css'\nimport App from './router';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)"],"sourceRoot":""}