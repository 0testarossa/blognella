{"version":3,"sources":["components/TodoItem.tsx","components/AddTodo.tsx","API.ts","App.tsx","index.tsx"],"names":["Todo","todo","updateTodo","deleteTodo","checkTodo","status","className","name","description","onClick","_id","AddTodo","saveTodo","useState","formData","setFormData","handleForm","e","currentTarget","id","value","console","log","onSubmit","htmlFor","onChange","type","disabled","undefined","baseUrl","getTodos","a","axios","get","todos","Error","addTodo","post","todoUpdate","put","updatedTodo","delete","deletedTodo","App","setTodos","useEffect","fetchTodos","then","data","catch","err","handleUpdateTodo","handleDeleteTodo","preventDefault","map","TodoItem","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAiCeA,EA1Be,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC3CC,EAAoBH,EAAKI,OAAL,eAA+B,GACzD,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,wBAAIA,UAAWF,GAAYH,EAAKM,MAChC,0BAAMD,UAAWF,GAAYH,EAAKO,cAEpC,yBAAKF,UAAU,gBACb,4BACEG,QAAS,kBAAMP,EAAWD,IAC1BK,UAAWL,EAAKI,OAAL,cAA8B,sBAF3C,YAMA,4BACEI,QAAS,kBAAMN,EAAWF,EAAKS,MAC/BJ,UAAU,wBAFZ,a,eCYOK,EA5BkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACjBC,qBADiB,mBAC1CC,EAD0C,KAChCC,EADgC,KAG3CC,EAAa,SAACC,GAClBF,EAAY,eACPD,EADM,eAERG,EAAEC,cAAcC,GAAKF,EAAEC,cAAcE,UAK1C,OAFAC,QAAQC,IAAIR,GAGV,0BAAMR,UAAU,OAAOiB,SAAU,SAACN,GAAD,OAAOL,EAASK,EAAGH,KAClD,6BACE,6BACE,2BAAOU,QAAQ,QAAf,QACA,2BAAOC,SAAUT,EAAYU,KAAK,OAAOP,GAAG,UAE9C,6BACE,2BAAOK,QAAQ,eAAf,eACA,2BAAOC,SAAUT,EAAYU,KAAK,OAAOP,GAAG,kBAGhD,4BAAQQ,cAAuBC,IAAbd,GAAlB,c,uCC3BAe,EAAkB,wBAEXC,EAAQ,uCAAG,4BAAAC,EAAA,+EAE4BC,IAAMC,IACpDJ,EAAU,UAHQ,cAEdK,EAFc,yBAKbA,GALa,sCAOd,IAAIC,MAAJ,MAPc,yDAAH,qDAWRC,EAAO,uCAAG,WACrBtB,GADqB,iBAAAiB,EAAA,sEAInBV,QAAQC,IAAI,YACZD,QAAQC,IAAIR,GACNb,EAA2B,CAC/BM,KAAMO,EAASP,KACfC,YAAaM,EAASN,YACtBH,QAAQ,GAEVgB,QAAQC,IAAIrB,GAXO,SAYgC+B,IAAMK,KACvD,YACApC,GAdiB,cAYbW,EAZa,yBAgBZA,GAhBY,wCAkBb,IAAIuB,MAAJ,MAlBa,0DAAH,sDAsBPjC,EAAU,uCAAG,WACxBD,GADwB,iBAAA8B,EAAA,sEAIhBO,EAAoC,CACxCjC,QAAQ,GALY,SAOgC2B,IAAMO,IAAN,UACjDV,EADiD,sBAC5B5B,EAAKS,KAC7B4B,GAToB,cAOhBE,EAPgB,yBAWfA,GAXe,sCAahB,IAAIL,MAAJ,MAbgB,yDAAH,sDAiBVhC,EAAU,uCAAG,WACxBO,GADwB,eAAAqB,EAAA,+EAIgCC,IAAMS,OAAN,UACjDZ,EADiD,wBAC1BnB,IALN,cAIhBgC,EAJgB,yBAOfA,GAPe,sCAShB,IAAIP,MAAJ,MATgB,yDAAH,sDCcRQ,EA/DO,WAAO,IAAD,EACA9B,mBAAkB,IADlB,mBACnBqB,EADmB,KACZU,EADY,KAG1BC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAa,WACjBhB,IACCiB,MAAK,gBAAWb,EAAX,EAAGc,KAAQd,MAAX,OAAwCU,EAASV,MACtDe,OAAM,SAACC,GAAD,OAAgB7B,QAAQC,IAAI4B,OAe/BC,EAAmB,SAAClD,GACxBC,EAAWD,GACV8C,MAAK,YAAuB,IAApB1C,EAAmB,EAAnBA,OAAQ2C,EAAW,EAAXA,KACb,GAAe,MAAX3C,EACF,MAAM,IAAI8B,MAAM,2BAElBS,EAASI,EAAKd,UAEfe,OAAM,SAACC,GAAD,OAAS7B,QAAQC,IAAI4B,OAG1BE,EAAmB,SAAC1C,GACxBP,EAAWO,GACVqC,MAAK,YAAuB,IAApB1C,EAAmB,EAAnBA,OAAQ2C,EAAW,EAAXA,KACb,GAAe,MAAX3C,EACF,MAAM,IAAI8B,MAAM,2BAElBS,EAASI,EAAKd,UAEfe,OAAM,SAACC,GAAD,OAAS7B,QAAQC,IAAI4B,OAGhC,OACE,0BAAM5C,UAAU,OACd,wCACA,kBAAC,EAAD,CAASM,SArCS,SAACK,EAAoBH,GAC1CG,EAAEoC,iBACFjB,EAAQtB,GACPiC,MAAK,YAAuB,IAApB1C,EAAmB,EAAnBA,OAAQ2C,EAAW,EAAXA,KAChB,GAAe,MAAX3C,EACF,MAAM,IAAI8B,MAAM,yBAElBS,EAASI,EAAKd,UAEfe,OAAM,SAACC,GAAD,OAAS7B,QAAQC,IAAI4B,SA6BvBhB,EAAMoB,KAAI,SAACrD,GAAD,OACT,kBAACsD,EAAD,CACEC,IAAKvD,EAAKS,IACVR,WAAYiD,EACZhD,WAAYiD,EACZnD,KAAMA,SCxDhBwD,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.968c0866.chunk.js","sourcesContent":["import React from 'react'\n\ntype Props = TodoProps & {\n    updateTodo: (todo: ITodo) => void\n    deleteTodo: (_id: string) => void\n}\n\nconst Todo: React.FC<Props> = ({ todo, updateTodo, deleteTodo }) => {\n  const checkTodo: string = todo.status ? `line-through` : ''\n  return (\n    <div className='Card'>\n      <div className='Card--text'>\n        <h1 className={checkTodo}>{todo.name}</h1>\n        <span className={checkTodo}>{todo.description}</span>\n      </div>\n      <div className='Card--button'>\n        <button\n          onClick={() => updateTodo(todo)}\n          className={todo.status ? `hide-button` : 'Card--button__done'}\n        >\n          Complete\n        </button>\n        <button\n          onClick={() => deleteTodo(todo._id)}\n          className='Card--button__delete'\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Todo\n","import React, { useState } from 'react'\n\ntype Props = { \n  saveTodo: (e: React.FormEvent, formData: ITodo | any) => void \n}\n\nconst AddTodo: React.FC<Props> = ({ saveTodo }) => {\n  const [formData, setFormData] = useState<ITodo | {}>()\n\n  const handleForm = (e: React.FormEvent<HTMLInputElement>): void => {\n    setFormData({\n      ...formData,\n      [e.currentTarget.id]: e.currentTarget.value,\n    })\n  }\n  console.log(formData)\n\n  return (\n    <form className='Form' onSubmit={(e) => saveTodo(e, formData)}>\n      <div>\n        <div>\n          <label htmlFor='name'>Name</label>\n          <input onChange={handleForm} type='text' id='name' />\n        </div>\n        <div>\n          <label htmlFor='description'>Description</label>\n          <input onChange={handleForm} type='text' id='description' />\n        </div>\n      </div>\n      <button disabled={formData === undefined ? true: false} >Add Todo</button>\n    </form>\n  )\n}\n\nexport default AddTodo\n","import axios, { AxiosResponse } from 'axios'\n\nconst baseUrl: string = 'http://localhost:4000'\n\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\n      baseUrl + '/todos'\n    )\n    return todos\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport const addTodo = async (\n  formData: ITodo\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    console.log(\"daaataaa\");\n    console.log(formData)\n    const todo: Omit<ITodo, '_id'> = {\n      name: formData.name,\n      description: formData.description,\n      status: false,\n    }\n    console.log(todo)\n    const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n      '/add-todo',\n      todo\n    )\n    return saveTodo\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport const updateTodo = async (\n  todo: ITodo\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todoUpdate: Pick<ITodo, 'status'> = {\n      status: true,\n    }\n    const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\n      `${baseUrl}/edit-todo/${todo._id}`,\n      todoUpdate\n    )\n    return updatedTodo\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport const deleteTodo = async (\n  _id: string\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\n      `${baseUrl}/delete-todo/${_id}`\n    )\n    return deletedTodo\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport TodoItem from './components/TodoItem'\nimport AddTodo from './components/AddTodo'\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './API'\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([])\n\n  useEffect(() => {\n    fetchTodos()\n  }, [])\n\n  const fetchTodos = (): void => {\n    getTodos()\n    .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\n    .catch((err: Error) => console.log(err))\n  }\n\n const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\n   e.preventDefault()\n   addTodo(formData)\n   .then(({ status, data }) => {\n    if (status !== 201) {\n      throw new Error('Error! Todo not saved')\n    }\n    setTodos(data.todos)\n  })\n  .catch((err) => console.log(err))\n}\n\n  const handleUpdateTodo = (todo: ITodo): void => {\n    updateTodo(todo)\n    .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Todo not updated')\n        }\n        setTodos(data.todos)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  const handleDeleteTodo = (_id: string): void => {\n    deleteTodo(_id)\n    .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error('Error! Todo not deleted')\n        }\n        setTodos(data.todos)\n      })\n      .catch((err) => console.log(err))\n  }\n\n  return (\n    <main className='App'>\n      <h1>My Todos</h1>\n      <AddTodo saveTodo={handleSaveTodo} />\n      {todos.map((todo: ITodo) => (\n        <TodoItem\n          key={todo._id}\n          updateTodo={handleUpdateTodo}\n          deleteTodo={handleDeleteTodo}\n          todo={todo}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n)"],"sourceRoot":""}